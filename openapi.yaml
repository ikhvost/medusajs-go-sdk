openapi: 3.0.0
info:
  version: 2.0.0
  title: Medusa Admin API
  license:
    name: MIT
    url: https://github.com/medusajs/medusa/blob/master/LICENSE
servers:
  - url: http://localhost:9000
  - url: https://api.medusa-commerce.com
tags:
  - name: Api Keys
  - name: Campaigns
  - name: Collections
  - name: Currencies
    description: |
      A store can use unlimited currencies, and each region must be associated with at least one currency.
      Currencies are defined within the Medusa backend. Currency API Routes allow admins to list and update currencies.
    externalDocs:
      description: How to manage currencies
      url: https://docs.medusajs.com/modules/regions-and-currencies/admin/manage-currencies
  - name: Customer Groups
  - name: Customers
    description: |
      Customers can either be created when they register through the Store APIs, or created by the admin using the Admin APIs.
    externalDocs:
      description: How to manage customers
      url: https://docs.medusajs.com/modules/customers/admin/manage-customers
  - name: Draft Orders
  - name: Fulfillment Providers
  - name: Fulfillment Sets
  - name: Fulfillments
  - name: Inventory Items
  - name: Invites
    description: |
      An admin can invite new users to manage their team. This would allow new users to authenticate as admins and perform admin functionalities.
    externalDocs:
      description: How to manage invites
      url: https://docs.medusajs.com/modules/users/admin/manage-invites
  - name: Orders
  - name: Payments
  - name: Price Lists
  - name: Pricing
  - name: Product Categories
  - name: Product Types
  - name: Products
  - name: Promotions
    x-associatedSchema:
      $ref: '#/components/schemas/Promotion'
  - name: Regions
    description: |
      Regions are different countries or geographical regions that the commerce store serves customers in.
      Admins can manage these regions, their providers, and more.
    externalDocs:
      description: How to manage regions
      url: https://docs.medusajs.com/modules/regions-and-currencies/admin/manage-regions
  - name: Reservations
  - name: Sales Channels
    description: |
      A sales channel indicates a channel where products can be sold in. For example, a webshop or a mobile app.
      Admins can manage sales channels and the products available in them.
    externalDocs:
      description: How to manage sales channels
      url: https://docs.medusajs.com/modules/sales-channels/admin/manage
  - name: Shipping Options
  - name: Shipping Profiles
  - name: Stock Locations
  - name: Stores
  - name: Tax Rates
  - name: Tax Regions
  - name: Uploads
  - name: Users
  - name: Workflows Executions
paths:
  /admin/api-keys:
    get:
      operationId: GetApiKeys
      summary: List Api Keys
      description: Retrieve a list of api keys. The api keys can be filtered by fields such as `id`. The api keys can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/api-keys' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostApiKeys
      summary: Create Api Key
      description: Create a api key.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - title
                - type
              properties:
                title:
                  type: string
                  title: title
                  description: The api key's title.
                type:
                  type: string
                  enum:
                    - publishable
                    - secret
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/api-keys' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "title": "{value}",
              "type": "{value}"
            }'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/api-keys/{id}:
    get:
      operationId: GetApiKeysId
      summary: Get a Api Key
      description: Retrieve a api key by its ID. You can expand the api key's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The api key's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/api-keys/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostApiKeysId
      summary: Update a Api Key
      description: Update a api key's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The api key's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - title
              properties:
                title:
                  type: string
                  title: title
                  description: The api key's title.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/api-keys/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "title": "{value}"
            }'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteApiKeysId
      summary: Delete a Api Key
      description: Delete a api key.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The api key's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/api-keys/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/api-keys/{id}/revoke:
    post:
      operationId: PostApiKeysIdRevoke
      summary: Add Revokes to Api Key
      description: Add a list of revokes to a api key.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The api key's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/api-keys/{id}/revoke' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - revoke_in
              properties:
                revoke_in:
                  type: number
                  title: revoke_in
                  description: The api key's revoke in.
  /admin/api-keys/{id}/sales-channels:
    post:
      operationId: PostApiKeysIdSalesChannels
      summary: Add Sales Channels to Api Key
      description: Add a list of sales channels to a api key.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The api key's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                add:
                  type: array
                  description: The api key's add.
                  items:
                    type: string
                    title: add
                    description: The add's details.
                remove:
                  type: array
                  description: The api key's remove.
                  items:
                    type: string
                    title: remove
                    description: The remove's details.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/api-keys/{id}/sales-channels' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/campaigns:
    get:
      operationId: GetCampaigns
      summary: List Campaigns
      description: Retrieve a list of campaigns. The campaigns can be filtered by fields such as `id`. The campaigns can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/campaigns' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Campaigns
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCampaigns
      summary: Create Campaign
      description: Create a campaign.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - campaign_identifier
                - description
                - currency
                - budget
                - starts_at
                - ends_at
                - promotions
              properties:
                name:
                  type: string
                  title: name
                  description: The campaign's name.
                campaign_identifier:
                  type: string
                  title: campaign_identifier
                  description: The campaign's campaign identifier.
                description:
                  type: string
                  title: description
                  description: The campaign's description.
                currency:
                  type: string
                  title: currency
                  description: The campaign's currency.
                budget:
                  type: object
                  description: The campaign's budget.
                  required:
                    - type
                    - limit
                  properties:
                    type:
                      type: string
                      enum:
                        - spend
                        - usage
                    limit:
                      type: number
                      title: limit
                      description: The budget's limit.
                starts_at:
                  type: string
                  title: starts_at
                  description: The campaign's starts at.
                  format: date-time
                ends_at:
                  type: string
                  title: ends_at
                  description: The campaign's ends at.
                  format: date-time
                promotions:
                  type: array
                  description: The campaign's promotions.
                  items:
                    type: object
                    description: The promotion's promotions.
                    required:
                      - id
                    properties:
                      id:
                        type: string
                        title: id
                        description: The promotion's ID.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/campaigns' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Rafael",
              "campaign_identifier": "{value}",
              "description": "{value}",
              "currency": "NZD",
              "budget": {
                "type": "{value}",
                "limit": 1649671080509440
              },
              "starts_at": "2024-12-08T08:39:28.574Z",
              "ends_at": "2024-11-29T15:05:33.749Z",
              "promotions": [
                {
                  "id": "id_HXbttvFHpooW0"
                }
              ]
            }'
      tags:
        - Campaigns
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/campaigns/{id}:
    get:
      operationId: GetCampaignsId
      summary: Get a Campaign
      description: Retrieve a campaign by its ID. You can expand the campaign's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The campaign's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/campaigns/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Campaigns
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCampaignsId
      summary: Update a Campaign
      description: Update a campaign's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The campaign's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: The promotion's campaign.
              required:
                - name
                - campaign_identifier
                - description
                - currency
                - budget
                - starts_at
                - ends_at
                - promotions
              properties:
                name:
                  type: string
                  title: name
                  description: The campaign's name.
                campaign_identifier:
                  type: string
                  title: campaign_identifier
                  description: The campaign's campaign identifier.
                description:
                  type: string
                  title: description
                  description: The campaign's description.
                currency:
                  type: string
                  title: currency
                  description: The campaign's currency.
                budget:
                  type: object
                  description: The campaign's budget.
                  properties:
                    type:
                      enum:
                        - spend
                        - usage
                      type: string
                    limit:
                      type: number
                      title: limit
                      description: The budget's limit.
                  required:
                    - type
                    - limit
                starts_at:
                  type: string
                  title: starts_at
                  description: The campaign's starts at.
                ends_at:
                  type: string
                  title: ends_at
                  description: The campaign's ends at.
                promotions:
                  type: array
                  description: The campaign's promotions.
                  items:
                    type: object
                    description: The promotion's promotions.
                    required:
                      - id
                    properties:
                      id:
                        type: string
                        title: id
                        description: The promotion's ID.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/campaigns/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Janessa"
            }'
      tags:
        - Campaigns
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteCampaignsId
      summary: Delete a Campaign
      description: Delete a campaign.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The campaign's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/campaigns/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Campaigns
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/collections:
    get:
      operationId: GetCollections
      summary: List Collections
      description: Retrieve a list of collections. The collections can be filtered by fields such as `id`. The collections can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/collections' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Collections
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCollections
      summary: Create Collection
      description: Create a collection.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - title
                - handle
                - metadata
              properties:
                title:
                  type: string
                  title: title
                  description: The collection's title.
                handle:
                  type: string
                  title: handle
                  description: The collection's handle.
                metadata:
                  type: object
                  description: The collection's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/collections' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "title": "{value}",
              "handle": "{value}",
              "metadata": {}
            }'
      tags:
        - Collections
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/collections/{id}:
    get:
      operationId: GetCollectionsId
      summary: Get a Collection
      description: Retrieve a collection by its ID. You can expand the collection's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The collection's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/collections/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Collections
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCollectionsId
      summary: Update a Collection
      description: Update a collection's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The collection's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - title
                - handle
                - metadata
              properties:
                title:
                  type: string
                  title: title
                  description: The collection's title.
                handle:
                  type: string
                  title: handle
                  description: The collection's handle.
                metadata:
                  type: object
                  description: The collection's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/collections/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "title": "{value}",
              "handle": "{value}",
              "metadata": {}
            }'
      tags:
        - Collections
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteCollectionsId
      summary: Delete a Collection
      description: Delete a collection.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The collection's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/collections/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Collections
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/collections/{id}/products:
    post:
      operationId: PostCollectionsIdProducts
      summary: Add Products to Collection
      description: Add a list of products to a collection.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The collection's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                add:
                  type: array
                  description: The collection's add.
                  items:
                    type: string
                    title: add
                    description: The add's details.
                remove:
                  type: array
                  description: The collection's remove.
                  items:
                    type: string
                    title: remove
                    description: The remove's details.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/collections/{id}/products' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Collections
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/currencies:
    get:
      operationId: GetCurrencies
      summary: List Currencies
      description: Retrieve a list of currencies. The currencies can be filtered by fields such as `id`. The currencies can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/currencies' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Currencies
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/currencies/{code}:
    get:
      operationId: GetCurrenciesCode
      summary: Get a Currency
      description: Retrieve a currency by its ID. You can expand the currency's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: code
          in: path
          description: The currency's code.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/currencies/{code}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Currencies
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/customer-groups:
    get:
      operationId: GetCustomerGroups
      summary: List Customer Groups
      description: Retrieve a list of customer groups. The customer groups can be filtered by fields such as `id`. The customer groups can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customer-groups' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCustomerGroups
      summary: Create Customer Group
      description: Create a customer group.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
              properties:
                name:
                  type: string
                  title: name
                  description: The customer group's name.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customer-groups' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Garett"
            }'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/customer-groups/{id}:
    get:
      operationId: GetCustomerGroupsId
      summary: Get a Customer Group
      description: Retrieve a customer group by its ID. You can expand the customer group's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer group's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customer-groups/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCustomerGroupsId
      summary: Update a Customer Group
      description: Update a customer group's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer group's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
              properties:
                name:
                  type: string
                  title: name
                  description: The customer group's name.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customer-groups/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Wilber"
            }'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteCustomerGroupsId
      summary: Delete a Customer Group
      description: Delete a customer group.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer group's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/customer-groups/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/customer-groups/{id}/customers:
    post:
      operationId: PostCustomerGroupsIdCustomers
      summary: Add Customers to Customer Group
      description: Add a list of customers to a customer group.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer group's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                add:
                  type: array
                  description: The customer group's add.
                  items:
                    type: string
                    title: add
                    description: The add's details.
                remove:
                  type: array
                  description: The customer group's remove.
                  items:
                    type: string
                    title: remove
                    description: The remove's details.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customer-groups/{id}/customers' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/customers:
    get:
      operationId: GetCustomers
      summary: List Customers
      description: Retrieve a list of customers. The customers can be filtered by fields such as `id`. The customers can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customers' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCustomerListResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCustomers
      summary: Create Customer
      description: Create a customer.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - email
                - company_name
                - first_name
                - last_name
                - phone
                - metadata
              properties:
                email:
                  type: string
                  title: email
                  description: The customer's email.
                  format: email
                company_name:
                  type: string
                  title: company_name
                  description: The customer's company name.
                first_name:
                  type: string
                  title: first_name
                  description: The customer's first name.
                last_name:
                  type: string
                  title: last_name
                  description: The customer's last name.
                phone:
                  type: string
                  title: phone
                  description: The customer's phone.
                metadata:
                  type: object
                  description: The customer's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customers' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "email": "Federico_Kirlin23@yahoo.com",
              "company_name": "{value}",
              "first_name": "{value}",
              "last_name": "{value}",
              "phone": "{value}",
              "metadata": {}
            }'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCustomerResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/customers/{id}:
    get:
      operationId: GetCustomersId
      summary: Get a Customer
      description: Retrieve a customer by its ID. You can expand the customer's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customers/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCustomerResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCustomersId
      summary: Update a Customer
      description: Update a customer's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - email
                - company_name
                - first_name
                - last_name
                - phone
                - metadata
              properties:
                email:
                  type: string
                  title: email
                  description: The customer's email.
                  format: email
                company_name:
                  type: string
                  title: company_name
                  description: The customer's company name.
                first_name:
                  type: string
                  title: first_name
                  description: The customer's first name.
                last_name:
                  type: string
                  title: last_name
                  description: The customer's last name.
                phone:
                  type: string
                  title: phone
                  description: The customer's phone.
                metadata:
                  type: object
                  description: The customer's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customers/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "email": "Esteban24@hotmail.com",
              "company_name": "{value}",
              "first_name": "{value}",
              "last_name": "{value}",
              "phone": "{value}",
              "metadata": {}
            }'
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCustomerResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteCustomersId
      summary: Delete a Customer
      description: Delete a customer.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/customers/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/customers/{id}/addresses:
    get:
      operationId: GetCustomersIdAddresses
      summary: List Addresses
      description: Retrieve a list of addresses in a customer. The addresses can be filtered by fields like FILTER FIELDS. The addresses can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customers/{id}/addresses' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCustomersIdAddresses
      summary: Add Addresses to Customer
      description: Add a list of addresses to a customer.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - address_name
                - is_default_shipping
                - is_default_billing
                - company
                - first_name
                - last_name
                - address_1
                - address_2
                - city
                - country_code
                - province
                - postal_code
                - phone
                - metadata
              properties:
                address_name:
                  type: string
                  title: address_name
                  description: The customer's address name.
                is_default_shipping:
                  type: boolean
                  title: is_default_shipping
                  description: The customer's is default shipping.
                is_default_billing:
                  type: boolean
                  title: is_default_billing
                  description: The customer's is default billing.
                company:
                  type: string
                  title: company
                  description: The customer's company.
                first_name:
                  type: string
                  title: first_name
                  description: The customer's first name.
                last_name:
                  type: string
                  title: last_name
                  description: The customer's last name.
                address_1:
                  type: string
                  title: address_1
                  description: The customer's address 1.
                address_2:
                  type: string
                  title: address_2
                  description: The customer's address 2.
                city:
                  type: string
                  title: city
                  description: The customer's city.
                country_code:
                  type: string
                  title: country_code
                  description: The customer's country code.
                province:
                  type: string
                  title: province
                  description: The customer's province.
                postal_code:
                  type: string
                  title: postal_code
                  description: The customer's postal code.
                phone:
                  type: string
                  title: phone
                  description: The customer's phone.
                metadata:
                  type: object
                  description: The customer's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customers/{id}/addresses' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "address_name": "{value}",
              "is_default_shipping": true,
              "is_default_billing": true,
              "company": "{value}",
              "first_name": "{value}",
              "last_name": "{value}",
              "address_1": "{value}",
              "address_2": "{value}",
              "city": "{value}",
              "country_code": "{value}",
              "province": "{value}",
              "postal_code": "{value}",
              "phone": "{value}",
              "metadata": {}
            }'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/customers/{id}/addresses/{address_id}:
    get:
      operationId: GetCustomersIdAddressesAddress_id
      summary: List Addresses
      description: Retrieve a list of addresses in a customer. The addresses can be filtered by fields like FILTER FIELDS. The addresses can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
        - name: address_id
          in: path
          description: The customer's address id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customers/{id}/addresses/{address_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCustomersIdAddressesAddress_id
      summary: Add Addresses to Customer
      description: Add a list of addresses to a customer.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
        - name: address_id
          in: path
          description: The customer's address id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - address_name
                - is_default_shipping
                - is_default_billing
                - company
                - first_name
                - last_name
                - address_1
                - address_2
                - city
                - country_code
                - province
                - postal_code
                - phone
                - metadata
              properties:
                address_name:
                  type: string
                  title: address_name
                  description: The customer's address name.
                is_default_shipping:
                  type: boolean
                  title: is_default_shipping
                  description: The customer's is default shipping.
                is_default_billing:
                  type: boolean
                  title: is_default_billing
                  description: The customer's is default billing.
                company:
                  type: string
                  title: company
                  description: The customer's company.
                first_name:
                  type: string
                  title: first_name
                  description: The customer's first name.
                last_name:
                  type: string
                  title: last_name
                  description: The customer's last name.
                address_1:
                  type: string
                  title: address_1
                  description: The customer's address 1.
                address_2:
                  type: string
                  title: address_2
                  description: The customer's address 2.
                city:
                  type: string
                  title: city
                  description: The customer's city.
                country_code:
                  type: string
                  title: country_code
                  description: The customer's country code.
                province:
                  type: string
                  title: province
                  description: The customer's province.
                postal_code:
                  type: string
                  title: postal_code
                  description: The customer's postal code.
                phone:
                  type: string
                  title: phone
                  description: The customer's phone.
                metadata:
                  type: object
                  description: The customer's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customers/{id}/addresses/{address_id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "address_name": "{value}",
              "is_default_shipping": false,
              "is_default_billing": true,
              "company": "{value}",
              "first_name": "{value}",
              "last_name": "{value}",
              "address_1": "{value}",
              "address_2": "{value}",
              "city": "{value}",
              "country_code": "{value}",
              "province": "{value}",
              "postal_code": "{value}",
              "phone": "{value}",
              "metadata": {}
            }'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteCustomersIdAddressesAddress_id
      summary: Remove Addresses from Customer
      description: Remove a list of addresses from a customer. This doesn't delete the Address, only the association between the Address and the customer.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
        - name: address_id
          in: path
          description: The customer's address id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/customers/{id}/addresses/{address_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/draft-orders:
    get:
      operationId: GetDraftOrders
      summary: List Draft Orders
      description: Retrieve a list of draft orders. The draft orders can be filtered by fields such as `id`. The draft orders can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/draft-orders' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Draft Orders
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostDraftOrders
      summary: Create Draft Order
      description: Create a draft order.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - status
                - sales_channel_id
                - email
                - customer_id
                - billing_address
                - shipping_address
                - items
                - region_id
                - promo_codes
                - currency_code
                - no_notification_order
                - shipping_methods
                - metadata
              properties:
                status:
                  type: boolean
                  title: status
                  description: The draft order's status.
                sales_channel_id:
                  type: string
                  title: sales_channel_id
                  description: The draft order's sales channel id.
                email:
                  type: string
                  title: email
                  description: The draft order's email.
                  format: email
                customer_id:
                  type: string
                  title: customer_id
                  description: The draft order's customer id.
                billing_address:
                  type: object
                  description: The draft order's billing address.
                  required:
                    - first_name
                    - last_name
                    - phone
                    - company
                    - address_1
                    - address_2
                    - city
                    - country_code
                    - province
                    - postal_code
                    - metadata
                  properties:
                    first_name:
                      type: string
                      title: first_name
                      description: The billing address's first name.
                    last_name:
                      type: string
                      title: last_name
                      description: The billing address's last name.
                    phone:
                      type: string
                      title: phone
                      description: The billing address's phone.
                    company:
                      type: string
                      title: company
                      description: The billing address's company.
                    address_1:
                      type: string
                      title: address_1
                      description: The billing address's address 1.
                    address_2:
                      type: string
                      title: address_2
                      description: The billing address's address 2.
                    city:
                      type: string
                      title: city
                      description: The billing address's city.
                    country_code:
                      type: string
                      title: country_code
                      description: The billing address's country code.
                    province:
                      type: string
                      title: province
                      description: The billing address's province.
                    postal_code:
                      type: string
                      title: postal_code
                      description: The billing address's postal code.
                    metadata:
                      type: object
                      description: The billing address's metadata.
                      properties: {}
                shipping_address:
                  type: object
                  description: The draft order's shipping address.
                  required:
                    - first_name
                    - last_name
                    - phone
                    - company
                    - address_1
                    - address_2
                    - city
                    - country_code
                    - province
                    - postal_code
                    - metadata
                  properties:
                    first_name:
                      type: string
                      title: first_name
                      description: The shipping address's first name.
                    last_name:
                      type: string
                      title: last_name
                      description: The shipping address's last name.
                    phone:
                      type: string
                      title: phone
                      description: The shipping address's phone.
                    company:
                      type: string
                      title: company
                      description: The shipping address's company.
                    address_1:
                      type: string
                      title: address_1
                      description: The shipping address's address 1.
                    address_2:
                      type: string
                      title: address_2
                      description: The shipping address's address 2.
                    city:
                      type: string
                      title: city
                      description: The shipping address's city.
                    country_code:
                      type: string
                      title: country_code
                      description: The shipping address's country code.
                    province:
                      type: string
                      title: province
                      description: The shipping address's province.
                    postal_code:
                      type: string
                      title: postal_code
                      description: The shipping address's postal code.
                    metadata:
                      type: object
                      description: The shipping address's metadata.
                      properties: {}
                items:
                  type: array
                  description: The draft order's items.
                  items:
                    type: object
                    description: The item's items.
                    required:
                      - title
                      - sku
                      - barcode
                      - variant_id
                      - unit_price
                      - quantity
                      - metadata
                    properties:
                      title:
                        type: string
                        title: title
                        description: The item's title.
                      sku:
                        type: string
                        title: sku
                        description: The item's sku.
                      barcode:
                        type: string
                        title: barcode
                        description: The item's barcode.
                      variant_id:
                        type: string
                        title: variant_id
                        description: The item's variant id.
                      unit_price:
                        oneOf:
                          - type: string
                            title: unit_price
                            description: The item's unit price.
                          - type: number
                            title: unit_price
                            description: The item's unit price.
                          - type: object
                            description: The item's unit price.
                            required:
                              - value
                              - precision
                            properties:
                              value:
                                type: string
                                title: value
                                description: The unit price's value.
                              precision:
                                type: number
                                title: precision
                                description: The unit price's precision.
                      quantity:
                        type: number
                        title: quantity
                        description: The item's quantity.
                      metadata:
                        type: object
                        description: The item's metadata.
                        properties: {}
                region_id:
                  type: string
                  title: region_id
                  description: The draft order's region id.
                promo_codes:
                  type: array
                  description: The draft order's promo codes.
                  items:
                    type: string
                    title: promo_codes
                    description: The promo code's promo codes.
                currency_code:
                  type: string
                  title: currency_code
                  description: The draft order's currency code.
                no_notification_order:
                  type: boolean
                  title: no_notification_order
                  description: The draft order's no notification order.
                shipping_methods:
                  type: array
                  description: The draft order's shipping methods.
                  items:
                    type: object
                    description: The shipping method's shipping methods.
                    required:
                      - shipping_method_id
                      - order_id
                      - name
                      - option_id
                      - data
                      - amount
                    properties:
                      shipping_method_id:
                        type: string
                        title: shipping_method_id
                        description: The shipping method's shipping method id.
                      order_id:
                        type: string
                        title: order_id
                        description: The shipping method's order id.
                      name:
                        type: string
                        title: name
                        description: The shipping method's name.
                      option_id:
                        type: string
                        title: option_id
                        description: The shipping method's option id.
                      data:
                        type: object
                        description: The shipping method's data.
                        properties: {}
                      amount:
                        oneOf:
                          - type: string
                            title: amount
                            description: The shipping method's amount.
                          - type: number
                            title: amount
                            description: The shipping method's amount.
                          - type: object
                            description: The shipping method's amount.
                            required:
                              - value
                              - precision
                            properties:
                              value:
                                type: string
                                title: value
                                description: The amount's value.
                              precision:
                                type: number
                                title: precision
                                description: The amount's precision.
                metadata:
                  type: object
                  description: The draft order's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/draft-orders' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "status": false,
              "sales_channel_id": "{value}",
              "email": "Trent_Reilly67@gmail.com",
              "customer_id": "{value}",
              "billing_address": {
                "first_name": "{value}",
                "last_name": "{value}",
                "phone": "{value}",
                "company": "{value}",
                "address_1": "{value}",
                "address_2": "{value}",
                "city": "{value}",
                "country_code": "{value}",
                "province": "{value}",
                "postal_code": "{value}",
                "metadata": {}
              },
              "shipping_address": {
                "first_name": "{value}",
                "last_name": "{value}",
                "phone": "{value}",
                "company": "{value}",
                "address_1": "{value}",
                "address_2": "{value}",
                "city": "{value}",
                "country_code": "{value}",
                "province": "{value}",
                "postal_code": "{value}",
                "metadata": {}
              },
              "items": [
                {
                  "title": "{value}",
                  "sku": "{value}",
                  "barcode": "{value}",
                  "variant_id": "{value}",
                  "quantity": 4713312751190016,
                  "metadata": {}
                }
              ],
              "region_id": "{value}",
              "promo_codes": [
                "{value}"
              ],
              "currency_code": "{value}",
              "no_notification_order": false,
              "shipping_methods": [
                {
                  "shipping_method_id": "{value}",
                  "order_id": "{value}",
                  "name": "Golden",
                  "option_id": "{value}",
                  "data": {}
                }
              ],
              "metadata": {}
            }'
      tags:
        - Draft Orders
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/draft-orders/{id}:
    get:
      operationId: GetDraftOrdersId
      summary: Get a Draft Order
      description: Retrieve a draft order by its ID. You can expand the draft order's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The draft order's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/draft-orders/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Draft Orders
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/fulfillment-providers:
    get:
      operationId: GetFulfillmentProviders
      summary: List Fulfillment Providers
      description: Retrieve a list of fulfillment providers. The fulfillment providers can be filtered by fields such as `id`. The fulfillment providers can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The fulfillment provider's fields.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/fulfillment-providers' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "fields": "{value}"
            }'
      tags:
        - Fulfillment Providers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/fulfillment-sets/{id}:
    delete:
      operationId: DeleteFulfillmentSetsId
      summary: Delete a Fulfillment Set
      description: Delete a fulfillment set.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The fulfillment set's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/fulfillment-sets/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Fulfillment Sets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminFulfillmentSetsDeleteResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/fulfillment-sets/{id}/service-zones:
    post:
      operationId: PostFulfillmentSetsIdServiceZones
      summary: Add Service Zones to Fulfillment Set
      description: Add a list of service zones to a fulfillment set.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The fulfillment set's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - geo_zones
              properties:
                name:
                  type: string
                  title: name
                  description: The fulfillment set's name.
                geo_zones:
                  type: array
                  description: The fulfillment set's geo zones.
                  items:
                    oneOf:
                      - type: object
                        description: The geo zone's geo zones.
                        required:
                          - metadata
                          - country_code
                          - type
                        properties:
                          metadata:
                            type: object
                            description: The geo zone's metadata.
                            properties: {}
                          country_code:
                            type: string
                            title: country_code
                            description: The geo zone's country code.
                          type:
                            type: string
                            title: type
                            description: The geo zone's type.
                      - type: object
                        description: The geo zone's geo zones.
                        required:
                          - metadata
                          - country_code
                          - type
                          - province_code
                        properties:
                          metadata:
                            type: object
                            description: The geo zone's metadata.
                            properties: {}
                          country_code:
                            type: string
                            title: country_code
                            description: The geo zone's country code.
                          type:
                            type: string
                            title: type
                            description: The geo zone's type.
                          province_code:
                            type: string
                            title: province_code
                            description: The geo zone's province code.
                      - type: object
                        description: The geo zone's geo zones.
                        required:
                          - metadata
                          - country_code
                          - type
                          - province_code
                          - city
                        properties:
                          metadata:
                            type: object
                            description: The geo zone's metadata.
                            properties: {}
                          country_code:
                            type: string
                            title: country_code
                            description: The geo zone's country code.
                          type:
                            type: string
                            title: type
                            description: The geo zone's type.
                          province_code:
                            type: string
                            title: province_code
                            description: The geo zone's province code.
                          city:
                            type: string
                            title: city
                            description: The geo zone's city.
                      - type: object
                        description: The geo zone's geo zones.
                        required:
                          - metadata
                          - country_code
                          - type
                          - province_code
                          - city
                          - postal_expression
                        properties:
                          metadata:
                            type: object
                            description: The geo zone's metadata.
                            properties: {}
                          country_code:
                            type: string
                            title: country_code
                            description: The geo zone's country code.
                          type:
                            type: string
                            title: type
                            description: The geo zone's type.
                          province_code:
                            type: string
                            title: province_code
                            description: The geo zone's province code.
                          city:
                            type: string
                            title: city
                            description: The geo zone's city.
                          postal_expression:
                            type: object
                            description: The geo zone's postal expression.
                            properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/fulfillment-sets/{id}/service-zones' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Milan",
              "geo_zones": []
            }'
      tags:
        - Fulfillment Sets
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/fulfillment-sets/{id}/service-zones/{zone_id}:
    get:
      operationId: GetFulfillmentSetsIdServiceZonesZone_id
      summary: List Service Zones
      description: Retrieve a list of service zones in a fulfillment set. The service zones can be filtered by fields like FILTER FIELDS. The service zones can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The fulfillment set's ID.
          required: true
          schema:
            type: string
        - name: zone_id
          in: path
          description: The fulfillment set's zone id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/fulfillment-sets/{id}/service-zones/{zone_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Fulfillment Sets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminServiceZoneResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostFulfillmentSetsIdServiceZonesZone_id
      summary: Add Service Zones to Fulfillment Set
      description: Add a list of service zones to a fulfillment set.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The fulfillment set's ID.
          required: true
          schema:
            type: string
        - name: zone_id
          in: path
          description: The fulfillment set's zone id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - geo_zones
              properties:
                name:
                  type: string
                  title: name
                  description: The fulfillment set's name.
                geo_zones:
                  type: array
                  description: The fulfillment set's geo zones.
                  items:
                    oneOf:
                      - type: object
                        description: The geo zone's geo zones.
                        required:
                          - type
                          - metadata
                          - country_code
                          - id
                        properties:
                          type:
                            type: string
                            title: type
                            description: The geo zone's type.
                          metadata:
                            type: object
                            description: The geo zone's metadata.
                            properties: {}
                          country_code:
                            type: string
                            title: country_code
                            description: The geo zone's country code.
                          id:
                            type: string
                            title: id
                            description: The geo zone's ID.
                      - type: object
                        description: The geo zone's geo zones.
                        required:
                          - type
                          - metadata
                          - country_code
                          - province_code
                          - id
                        properties:
                          type:
                            type: string
                            title: type
                            description: The geo zone's type.
                          metadata:
                            type: object
                            description: The geo zone's metadata.
                            properties: {}
                          country_code:
                            type: string
                            title: country_code
                            description: The geo zone's country code.
                          province_code:
                            type: string
                            title: province_code
                            description: The geo zone's province code.
                          id:
                            type: string
                            title: id
                            description: The geo zone's ID.
                      - type: object
                        description: The geo zone's geo zones.
                        required:
                          - type
                          - metadata
                          - city
                          - country_code
                          - province_code
                          - id
                        properties:
                          type:
                            type: string
                            title: type
                            description: The geo zone's type.
                          metadata:
                            type: object
                            description: The geo zone's metadata.
                            properties: {}
                          city:
                            type: string
                            title: city
                            description: The geo zone's city.
                          country_code:
                            type: string
                            title: country_code
                            description: The geo zone's country code.
                          province_code:
                            type: string
                            title: province_code
                            description: The geo zone's province code.
                          id:
                            type: string
                            title: id
                            description: The geo zone's ID.
                      - type: object
                        description: The geo zone's geo zones.
                        required:
                          - type
                          - metadata
                          - city
                          - country_code
                          - province_code
                          - postal_expression
                          - id
                        properties:
                          type:
                            type: string
                            title: type
                            description: The geo zone's type.
                          metadata:
                            type: object
                            description: The geo zone's metadata.
                            properties: {}
                          city:
                            type: string
                            title: city
                            description: The geo zone's city.
                          country_code:
                            type: string
                            title: country_code
                            description: The geo zone's country code.
                          province_code:
                            type: string
                            title: province_code
                            description: The geo zone's province code.
                          postal_expression:
                            type: object
                            description: The geo zone's postal expression.
                            properties: {}
                          id:
                            type: string
                            title: id
                            description: The geo zone's ID.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/fulfillment-sets/{id}/service-zones/{zone_id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Walker",
              "geo_zones": []
            }'
      tags:
        - Fulfillment Sets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminFulfillmentSetResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteFulfillmentSetsIdServiceZonesZone_id
      summary: Remove Service Zones from Fulfillment Set
      description: Remove a list of service zones from a fulfillment set. This doesn't delete the Service Zone, only the association between the Service Zone and the fulfillment set.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The fulfillment set's ID.
          required: true
          schema:
            type: string
        - name: zone_id
          in: path
          description: The fulfillment set's zone id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/fulfillment-sets/{id}/service-zones/{zone_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Fulfillment Sets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminServiceZoneDeleteResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/fulfillments:
    post:
      operationId: PostFulfillments
      summary: Create Fulfillment
      description: Create a fulfillment.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - location_id
                - provider_id
                - delivery_address
                - items
                - labels
                - order
                - metadata
              properties:
                location_id:
                  type: string
                  title: location_id
                  description: The fulfillment's location id.
                provider_id:
                  type: string
                  title: provider_id
                  description: The fulfillment's provider id.
                delivery_address:
                  type: object
                  description: The fulfillment's delivery address.
                  required:
                    - first_name
                    - last_name
                    - phone
                    - company
                    - address_1
                    - address_2
                    - city
                    - country_code
                    - province
                    - postal_code
                    - metadata
                  properties:
                    first_name:
                      type: string
                      title: first_name
                      description: The delivery address's first name.
                    last_name:
                      type: string
                      title: last_name
                      description: The delivery address's last name.
                    phone:
                      type: string
                      title: phone
                      description: The delivery address's phone.
                    company:
                      type: string
                      title: company
                      description: The delivery address's company.
                    address_1:
                      type: string
                      title: address_1
                      description: The delivery address's address 1.
                    address_2:
                      type: string
                      title: address_2
                      description: The delivery address's address 2.
                    city:
                      type: string
                      title: city
                      description: The delivery address's city.
                    country_code:
                      type: string
                      title: country_code
                      description: The delivery address's country code.
                    province:
                      type: string
                      title: province
                      description: The delivery address's province.
                    postal_code:
                      type: string
                      title: postal_code
                      description: The delivery address's postal code.
                    metadata:
                      type: object
                      description: The delivery address's metadata.
                      properties: {}
                items:
                  type: array
                  description: The fulfillment's items.
                  items:
                    type: object
                    description: The item's items.
                    required:
                      - title
                      - sku
                      - quantity
                      - barcode
                      - line_item_id
                      - inventory_item_id
                    properties:
                      title:
                        type: string
                        title: title
                        description: The item's title.
                      sku:
                        type: string
                        title: sku
                        description: The item's sku.
                      quantity:
                        type: number
                        title: quantity
                        description: The item's quantity.
                      barcode:
                        type: string
                        title: barcode
                        description: The item's barcode.
                      line_item_id:
                        type: string
                        title: line_item_id
                        description: The item's line item id.
                      inventory_item_id:
                        type: string
                        title: inventory_item_id
                        description: The item's inventory item id.
                labels:
                  type: array
                  description: The fulfillment's labels.
                  items:
                    type: object
                    description: The label's labels.
                    required:
                      - tracking_number
                      - tracking_url
                      - label_url
                    properties:
                      tracking_number:
                        type: string
                        title: tracking_number
                        description: The label's tracking number.
                      tracking_url:
                        type: string
                        title: tracking_url
                        description: The label's tracking url.
                      label_url:
                        type: string
                        title: label_url
                        description: The label's label url.
                order:
                  type: object
                  description: The fulfillment's order.
                  properties: {}
                metadata:
                  type: object
                  description: The fulfillment's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/fulfillments' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "location_id": "{value}",
              "provider_id": "{value}",
              "delivery_address": {
                "first_name": "{value}",
                "last_name": "{value}",
                "phone": "{value}",
                "company": "{value}",
                "address_1": "{value}",
                "address_2": "{value}",
                "city": "{value}",
                "country_code": "{value}",
                "province": "{value}",
                "postal_code": "{value}",
                "metadata": {}
              },
              "items": [
                {
                  "title": "{value}",
                  "sku": "{value}",
                  "quantity": 6350536800468992,
                  "barcode": "{value}",
                  "line_item_id": "{value}",
                  "inventory_item_id": "{value}"
                }
              ],
              "labels": [
                {
                  "tracking_number": "{value}",
                  "tracking_url": "{value}",
                  "label_url": "{value}"
                }
              ],
              "order": {},
              "metadata": {}
            }'
      tags:
        - Fulfillments
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/fulfillments/{id}/cancel:
    post:
      operationId: PostFulfillmentsIdCancel
      summary: Add Cancels to Fulfillment
      description: Add a list of cancels to a fulfillment.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The fulfillment's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/fulfillments/{id}/cancel' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Fulfillments
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/fulfillments/{id}/shipment:
    post:
      operationId: PostFulfillmentsIdShipment
      summary: Add Shipments to Fulfillment
      description: Add a list of shipments to a fulfillment.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The fulfillment's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - labels
              properties:
                labels:
                  type: array
                  description: The fulfillment's labels.
                  items:
                    type: object
                    description: The label's labels.
                    required:
                      - tracking_number
                      - tracking_url
                      - label_url
                    properties:
                      tracking_number:
                        type: string
                        title: tracking_number
                        description: The label's tracking number.
                      tracking_url:
                        type: string
                        title: tracking_url
                        description: The label's tracking url.
                      label_url:
                        type: string
                        title: label_url
                        description: The label's label url.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/fulfillments/{id}/shipment' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "labels": [
                {
                  "tracking_number": "{value}",
                  "tracking_url": "{value}",
                  "label_url": "{value}"
                }
              ]
            }'
      tags:
        - Fulfillments
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/inventory-items:
    get:
      operationId: GetInventoryItems
      summary: List Inventory Items
      description: Retrieve a list of inventory items. The inventory items can be filtered by fields such as `id`. The inventory items can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/inventory-items' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostInventoryItems
      summary: Create Inventory Item
      description: Create a inventory item.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                sku:
                  type: string
                  title: sku
                  description: The inventory item's sku.
                hs_code:
                  type: string
                  title: hs_code
                  description: The inventory item's hs code.
                weight:
                  type: number
                  title: weight
                  description: The inventory item's weight.
                length:
                  type: number
                  title: length
                  description: The inventory item's length.
                height:
                  type: number
                  title: height
                  description: The inventory item's height.
                width:
                  type: number
                  title: width
                  description: The inventory item's width.
                origin_country:
                  type: string
                  title: origin_country
                  description: The inventory item's origin country.
                mid_code:
                  type: string
                  title: mid_code
                  description: The inventory item's mid code.
                material:
                  type: string
                  title: material
                  description: The inventory item's material.
                title:
                  type: string
                  title: title
                  description: The inventory item's title.
                description:
                  type: string
                  title: description
                  description: The inventory item's description.
                thumbnail:
                  type: string
                  title: thumbnail
                  description: The inventory item's thumbnail.
                metadata:
                  type: object
                  description: The inventory item's metadata.
                  properties: {}
                requires_shipping:
                  type: boolean
                  title: requires_shipping
                  description: The inventory item's requires shipping.
              required:
                - sku
                - hs_code
                - weight
                - length
                - height
                - width
                - origin_country
                - mid_code
                - material
                - title
                - description
                - requires_shipping
                - thumbnail
                - metadata
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/inventory-items' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/inventory-items/{id}:
    get:
      operationId: GetInventoryItemsId
      summary: Get a Inventory Item
      description: Retrieve a inventory item by its ID. You can expand the inventory item's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/inventory-items/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The inventory item's fields.
    post:
      operationId: PostInventoryItemsId
      summary: Update a Inventory Item
      description: Update a inventory item's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                sku:
                  type: string
                  title: sku
                  description: The inventory item's sku.
                origin_country:
                  type: string
                  title: origin_country
                  description: The inventory item's origin country.
                hs_code:
                  type: string
                  title: hs_code
                  description: The inventory item's hs code.
                mid_code:
                  type: string
                  title: mid_code
                  description: The inventory item's mid code.
                material:
                  type: string
                  title: material
                  description: The inventory item's material.
                weight:
                  type: number
                  title: weight
                  description: The inventory item's weight.
                height:
                  type: number
                  title: height
                  description: The inventory item's height.
                length:
                  type: number
                  title: length
                  description: The inventory item's length.
                width:
                  type: number
                  title: width
                  description: The inventory item's width.
                title:
                  type: string
                  title: title
                  description: The inventory item's title.
                description:
                  type: string
                  title: description
                  description: The inventory item's description.
                thumbnail:
                  type: string
                  title: thumbnail
                  description: The inventory item's thumbnail.
                requires_shipping:
                  type: boolean
                  title: requires_shipping
                  description: The inventory item's requires shipping.
                metadata:
                  type: object
                  description: The inventory item's metadata.
                  properties: {}
              required:
                - sku
                - hs_code
                - weight
                - length
                - height
                - width
                - origin_country
                - mid_code
                - material
                - title
                - description
                - requires_shipping
                - thumbnail
                - metadata
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/inventory-items/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteInventoryItemsId
      summary: Delete a Inventory Item
      description: Delete a inventory item.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/inventory-items/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/inventory-items/{id}/location-levels:
    get:
      operationId: GetInventoryItemsIdLocationLevels
      summary: List Location Levels
      description: Retrieve a list of location levels in a inventory item. The location levels can be filtered by fields like FILTER FIELDS. The location levels can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/inventory-items/{id}/location-levels' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostInventoryItemsIdLocationLevels
      summary: Add Location Levels to Inventory Item
      description: Add a list of location levels to a inventory item.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - location_id
                - stocked_quantity
                - incoming_quantity
              properties:
                location_id:
                  type: string
                  title: location_id
                  description: The inventory item's location id.
                stocked_quantity:
                  type: number
                  title: stocked_quantity
                  description: The inventory item's stocked quantity.
                incoming_quantity:
                  type: number
                  title: incoming_quantity
                  description: The inventory item's incoming quantity.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/inventory-items/{id}/location-levels' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "location_id": "{value}",
              "stocked_quantity": 1506469662949376
            }'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/inventory-items/{id}/location-levels/batch:
    post:
      operationId: PostInventoryItemsIdLocationLevelsBatch
      summary: Add Location Levels to Inventory Item
      description: Add a list of location levels to a inventory item.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/inventory-items/{id}/location-levels/batch' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                create:
                  type: array
                  description: The inventory item's create.
                  items:
                    type: object
                    description: The create's details.
                    required:
                      - location_id
                      - stocked_quantity
                      - incoming_quantity
                    properties:
                      location_id:
                        type: string
                        title: location_id
                        description: The create's location id.
                      stocked_quantity:
                        type: number
                        title: stocked_quantity
                        description: The create's stocked quantity.
                      incoming_quantity:
                        type: number
                        title: incoming_quantity
                        description: The create's incoming quantity.
                update:
                  type: array
                  description: The inventory item's update.
                  items:
                    type: object
                    description: The update's details.
                    required:
                      - stocked_quantity
                      - incoming_quantity
                    properties:
                      stocked_quantity:
                        type: number
                        title: stocked_quantity
                        description: The update's stocked quantity.
                      incoming_quantity:
                        type: number
                        title: incoming_quantity
                        description: The update's incoming quantity.
                delete:
                  type: array
                  description: The inventory item's delete.
                  items:
                    type: string
                    title: delete
                    description: The delete's details.
  /admin/inventory-items/{id}/location-levels/{location_id}:
    post:
      operationId: PostInventoryItemsIdLocationLevelsLocation_id
      summary: Add Location Levels to Inventory Item
      description: Add a list of location levels to a inventory item.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: The inventory item's location id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                incoming_quantity:
                  type: number
                  title: incoming_quantity
                  description: The inventory item's incoming quantity.
                stocked_quantity:
                  type: number
                  title: stocked_quantity
                  description: The inventory item's stocked quantity.
              required:
                - stocked_quantity
                - incoming_quantity
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/inventory-items/{id}/location-levels/{location_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteInventoryItemsIdLocationLevelsLocation_id
      summary: Remove Location Levels from Inventory Item
      description: Remove a list of location levels from a inventory item. This doesn't delete the Location Level, only the association between the Location Level and the inventory item.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: The inventory item's location id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/inventory-items/{id}/location-levels/{location_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/invites:
    get:
      operationId: GetInvites
      summary: List Invites
      description: Retrieve a list of invites. The invites can be filtered by fields such as `id`. The invites can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/invites' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Invites
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostInvites
      summary: Create Invite
      description: Create a invite.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - email
              properties:
                email:
                  type: string
                  title: email
                  description: The invite's email.
                  format: email
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/invites' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "email": "Abdiel5@gmail.com"
            }'
      tags:
        - Invites
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/invites/accept:
    post:
      operationId: PostInvitesAccept
      summary: Create Invite
      description: Create a invite.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - email
                - first_name
                - last_name
              properties:
                first_name:
                  type: string
                  title: first_name
                  description: The invite's first name.
                last_name:
                  type: string
                  title: last_name
                  description: The invite's last name.
                email:
                  type: string
                  title: email
                  description: The invite's email.
                  format: email
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/invites/accept' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "first_name": "{value}",
              "last_name": "{value}"
            }'
      tags:
        - Invites
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/invites/{id}:
    get:
      operationId: GetInvitesId
      summary: Get a Invite
      description: Retrieve a invite by its ID. You can expand the invite's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The invite's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/invites/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Invites
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteInvitesId
      summary: Delete a Invite
      description: Delete a invite.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The invite's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/invites/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Invites
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/invites/{id}/resend:
    post:
      operationId: PostInvitesIdResend
      summary: Add Resends to Invite
      description: Add a list of resends to a invite.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The invite's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/invites/{id}/resend' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Invites
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/orders:
    get:
      operationId: GetOrders
      summary: List Orders
      description: Retrieve a list of orders. The orders can be filtered by fields such as `id`. The orders can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/orders' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Orders
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/orders/{id}:
    get:
      operationId: GetOrdersId
      summary: Get a Order
      description: Retrieve a order by its ID. You can expand the order's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The order's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/orders/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Orders
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/payments:
    get:
      operationId: GetPayments
      summary: List Payments
      description: Retrieve a list of payments. The payments can be filtered by fields such as `id`. The payments can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/payments' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Payments
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/payments/payment-providers:
    get:
      operationId: GetPaymentsPaymentProviders
      summary: List Payments
      description: Retrieve a list of payments. The payments can be filtered by fields such as `id`. The payments can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/payments/payment-providers' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Payments
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/payments/{id}:
    get:
      operationId: GetPaymentsId
      summary: Get a Payment
      description: Retrieve a payment by its ID. You can expand the payment's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The payment's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/payments/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Payments
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The payment's fields.
  /admin/payments/{id}/capture:
    post:
      operationId: PostPaymentsIdCapture
      summary: Add Captures to Payment
      description: Add a list of captures to a payment.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The payment's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                amount:
                  type: number
                  title: amount
                  description: The payment's amount.
              required:
                - amount
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/payments/{id}/capture' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Payments
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/payments/{id}/refund:
    post:
      operationId: PostPaymentsIdRefund
      summary: Add Refunds to Payment
      description: Add a list of refunds to a payment.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The payment's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                amount:
                  type: number
                  title: amount
                  description: The payment's amount.
              required:
                - amount
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/payments/{id}/refund' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Payments
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/price-lists:
    get:
      operationId: GetPriceLists
      summary: List Price Lists
      description: Retrieve a list of price lists. The price lists can be filtered by fields such as `id`. The price lists can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/price-lists' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostPriceLists
      summary: Create Price List
      description: Create a price list.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - title
                - description
                - starts_at
                - ends_at
                - status
                - type
                - rules
                - prices
              properties:
                title:
                  type: string
                  title: title
                  description: The price list's title.
                description:
                  type: string
                  title: description
                  description: The price list's description.
                starts_at:
                  type: string
                  title: starts_at
                  description: The price list's starts at.
                ends_at:
                  type: string
                  title: ends_at
                  description: The price list's ends at.
                status:
                  enum:
                    - active
                    - draft
                  type: string
                type:
                  enum:
                    - sale
                    - override
                  type: string
                prices:
                  type: array
                  description: The price list's prices.
                  items:
                    type: object
                    description: The price's prices.
                    required:
                      - currency_code
                      - amount
                      - variant_id
                      - min_quantity
                      - max_quantity
                      - rules
                    properties:
                      currency_code:
                        type: string
                        title: currency_code
                        description: The price's currency code.
                      amount:
                        type: number
                        title: amount
                        description: The price's amount.
                      variant_id:
                        type: string
                        title: variant_id
                        description: The price's variant id.
                      min_quantity:
                        type: number
                        title: min_quantity
                        description: The price's min quantity.
                      max_quantity:
                        type: number
                        title: max_quantity
                        description: The price's max quantity.
                      rules:
                        type: object
                        description: The price's rules.
                        properties: {}
                rules:
                  type: object
                  description: The price list's rules.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/price-lists' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "title": "{value}",
              "description": "{value}",
              "prices": [
                {
                  "currency_code": "{value}",
                  "amount": 1270314195484672,
                  "variant_id": "{value}"
                }
              ]
            }'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/price-lists/{id}:
    get:
      operationId: GetPriceListsId
      summary: Get a Price List
      description: Retrieve a price list by its ID. You can expand the price list's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The price list's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/price-lists/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostPriceListsId
      summary: Update a Price List
      description: Update a price list's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The price list's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - title
                - description
                - starts_at
                - ends_at
                - status
                - type
                - rules
              properties:
                title:
                  type: string
                  title: title
                  description: The price list's title.
                description:
                  type: string
                  title: description
                  description: The price list's description.
                starts_at:
                  type: string
                  title: starts_at
                  description: The price list's starts at.
                ends_at:
                  type: string
                  title: ends_at
                  description: The price list's ends at.
                status:
                  enum:
                    - active
                    - draft
                  type: string
                type:
                  enum:
                    - sale
                    - override
                  type: string
                rules:
                  type: object
                  description: The price list's rules.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/price-lists/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "prices": [
                {
                  "currency_code": "{value}",
                  "amount": 1670236243755008,
                  "variant_id": "{value}"
                }
              ]
            }'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeletePriceListsId
      summary: Delete a Price List
      description: Delete a price list.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The price list's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/price-lists/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/price-lists/{id}/prices/batch:
    post:
      operationId: PostPriceListsIdPricesBatch
      summary: Add Prices to Price List
      description: Add a list of prices to a price list.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The price list's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/price-lists/{id}/prices/batch' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                create:
                  type: array
                  description: The price list's create.
                  items:
                    type: object
                    description: The create's details.
                    required:
                      - currency_code
                      - amount
                      - variant_id
                      - min_quantity
                      - max_quantity
                      - rules
                    properties:
                      currency_code:
                        type: string
                        title: currency_code
                        description: The create's currency code.
                      amount:
                        type: number
                        title: amount
                        description: The create's amount.
                      variant_id:
                        type: string
                        title: variant_id
                        description: The create's variant id.
                      min_quantity:
                        type: number
                        title: min_quantity
                        description: The create's min quantity.
                      max_quantity:
                        type: number
                        title: max_quantity
                        description: The create's max quantity.
                      rules:
                        type: object
                        description: The create's rules.
                        properties: {}
                update:
                  type: array
                  description: The price list's update.
                  items:
                    type: object
                    description: The update's details.
                    required:
                      - id
                      - currency_code
                      - amount
                      - variant_id
                      - min_quantity
                      - max_quantity
                      - rules
                    properties:
                      id:
                        type: string
                        title: id
                        description: The update's ID.
                      currency_code:
                        type: string
                        title: currency_code
                        description: The update's currency code.
                      amount:
                        type: number
                        title: amount
                        description: The update's amount.
                      variant_id:
                        type: string
                        title: variant_id
                        description: The update's variant id.
                      min_quantity:
                        type: number
                        title: min_quantity
                        description: The update's min quantity.
                      max_quantity:
                        type: number
                        title: max_quantity
                        description: The update's max quantity.
                      rules:
                        type: object
                        description: The update's rules.
                        properties: {}
                delete:
                  type: array
                  description: The price list's delete.
                  items:
                    type: string
                    title: delete
                    description: The delete's details.
  /admin/price-lists/{id}/products:
    post:
      operationId: PostPriceListsIdProducts
      summary: Add Products to Price List
      description: Add a list of products to a price list.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The price list's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                add:
                  type: array
                  description: The price list's add.
                  items:
                    type: string
                    title: add
                    description: The add's details.
                remove:
                  type: array
                  description: The price list's remove.
                  items:
                    type: string
                    title: remove
                    description: The remove's details.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/price-lists/{id}/products' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/pricing/rule-types:
    get:
      operationId: GetPricingRuleTypes
      summary: List Pricing
      description: Retrieve a list of pricing. The pricing can be filtered by fields such as `id`. The pricing can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              description: SUMMARY
              properties:
                rule_attribute:
                  type: array
                  description: The pricing's rule attribute.
                  items:
                    type: string
                    title: rule_attribute
                    description: The rule attribute's details.
                expand:
                  type: string
                  title: expand
                  description: The pricing's expand.
                fields:
                  type: string
                  title: fields
                  description: The pricing's fields.
                offset:
                  type: number
                  title: offset
                  description: The pricing's offset.
                limit:
                  type: number
                  title: limit
                  description: The pricing's limit.
                order:
                  type: string
                  title: order
                  description: The pricing's order.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/pricing/rule-types' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Pricing
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    post:
      operationId: PostPricingRuleTypes
      summary: Create Pricing
      description: Create a pricing.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - rule_attribute
                - default_priority
              properties:
                name:
                  type: string
                  title: name
                  description: The pricing's name.
                rule_attribute:
                  type: string
                  title: rule_attribute
                  description: The pricing's rule attribute.
                default_priority:
                  type: number
                  title: default_priority
                  description: The pricing's default priority.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/pricing/rule-types' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Thurman",
              "rule_attribute": "{value}",
              "default_priority": 4640267816665088
            }'
      tags:
        - Pricing
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/pricing/rule-types/{id}:
    get:
      operationId: GetPricingRuleTypesId
      summary: List Rule Types
      description: Retrieve a list of rule types in a pricing. The rule types can be filtered by fields like FILTER FIELDS. The rule types can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The pricing's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                fields:
                  type: string
                  title: fields
                  description: The pricing's fields.
              required:
                - fields
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/pricing/rule-types/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Pricing
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    post:
      operationId: PostPricingRuleTypesId
      summary: Add Rule Types to Pricing
      description: Add a list of rule types to a pricing.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The pricing's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                name:
                  type: string
                  title: name
                  description: The pricing's name.
                rule_attribute:
                  type: string
                  title: rule_attribute
                  description: The pricing's rule attribute.
                default_priority:
                  type: number
                  title: default_priority
                  description: The pricing's default priority.
              required:
                - name
                - rule_attribute
                - default_priority
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/pricing/rule-types/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Pricing
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeletePricingRuleTypesId
      summary: Remove Rule Types from Pricing
      description: Remove a list of rule types from a pricing. This doesn't delete the Rule Type, only the association between the Rule Type and the pricing.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The pricing's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              description: SUMMARY
              properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/pricing/rule-types/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Pricing
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/product-categories:
    get:
      operationId: GetProductCategories
      summary: List Product Categories
      description: Retrieve a list of product categories. The product categories can be filtered by fields such as `id`. The product categories can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/product-categories' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Product Categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductCategoryListResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProductCategories
      summary: Create Product Category
      description: Create a product category.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - description
                - handle
                - is_internal
                - is_active
                - parent_category_id
                - metadata
                - rank
              properties:
                name:
                  type: string
                  title: name
                  description: The product category's name.
                description:
                  type: string
                  title: description
                  description: The product category's description.
                handle:
                  type: string
                  title: handle
                  description: The product category's handle.
                is_internal:
                  type: boolean
                  title: is_internal
                  description: The product category's is internal.
                is_active:
                  type: boolean
                  title: is_active
                  description: The product category's is active.
                parent_category_id:
                  type: string
                  title: parent_category_id
                  description: The product category's parent category id.
                metadata:
                  type: object
                  description: The product category's metadata.
                  properties: {}
                rank:
                  type: number
                  title: rank
                  description: The product category's rank.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/product-categories' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Laurel",
              "description": "{value}",
              "handle": "{value}",
              "is_internal": true,
              "is_active": true,
              "parent_category_id": "{value}",
              "metadata": {},
              "rank": 8919807883739136
            }'
      tags:
        - Product Categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductCategoryResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/product-categories/{id}:
    get:
      operationId: GetProductCategoriesId
      summary: Get a Product Category
      description: Retrieve a product category by its ID. You can expand the product category's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product category's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - fields
                - include_ancestors_tree
                - include_descendants_tree
              properties:
                fields:
                  type: string
                  title: fields
                  description: The product category's fields.
                include_ancestors_tree:
                  type: boolean
                  title: include_ancestors_tree
                  description: The product category's include ancestors tree.
                include_descendants_tree:
                  type: boolean
                  title: include_descendants_tree
                  description: The product category's include descendants tree.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/product-categories/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "fields": "{value}",
              "include_ancestors_tree": true,
              "include_descendants_tree": true
            }'
      tags:
        - Product Categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductCategoryResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    post:
      operationId: PostProductCategoriesId
      summary: Update a Product Category
      description: Update a product category's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product category's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - description
                - handle
                - is_internal
                - is_active
                - parent_category_id
                - metadata
                - rank
              properties:
                name:
                  type: string
                  title: name
                  description: The product category's name.
                description:
                  type: string
                  title: description
                  description: The product category's description.
                handle:
                  type: string
                  title: handle
                  description: The product category's handle.
                is_internal:
                  type: boolean
                  title: is_internal
                  description: The product category's is internal.
                is_active:
                  type: boolean
                  title: is_active
                  description: The product category's is active.
                parent_category_id:
                  type: string
                  title: parent_category_id
                  description: The product category's parent category id.
                metadata:
                  type: object
                  description: The product category's metadata.
                  properties: {}
                rank:
                  type: number
                  title: rank
                  description: The product category's rank.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/product-categories/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Xzavier",
              "description": "{value}",
              "handle": "{value}",
              "is_internal": true,
              "is_active": true,
              "parent_category_id": "{value}",
              "metadata": {},
              "rank": 6601863235371008
            }'
      tags:
        - Product Categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductCategoryResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/product-categories/{id}/products:
    post:
      operationId: PostProductCategoriesIdProducts
      summary: Add Products to Product Category
      description: Add a list of products to a product category.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product category's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/product-categories/{id}/products' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Product Categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductCategoryResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                add:
                  type: array
                  description: The product category's add.
                  items:
                    type: string
                    title: add
                    description: The add's details.
                remove:
                  type: array
                  description: The product category's remove.
                  items:
                    type: string
                    title: remove
                    description: The remove's details.
  /admin/product-types:
    get:
      operationId: GetProductTypes
      summary: List Product Types
      description: Retrieve a list of product types. The product types can be filtered by fields such as `id`. The product types can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/product-types' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Product Types
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProductTypes
      summary: Create Product Type
      description: Create a product type.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - value
                - metadata
              properties:
                value:
                  type: string
                  title: value
                  description: The product type's value.
                metadata:
                  type: object
                  description: The product type's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/product-types' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "value": "{value}",
              "metadata": {}
            }'
      tags:
        - Product Types
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/product-types/{id}:
    get:
      operationId: GetProductTypesId
      summary: Get a Product Type
      description: Retrieve a product type by its ID. You can expand the product type's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product type's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The product type's fields.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/product-types/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "fields": "{value}"
            }'
      tags:
        - Product Types
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    post:
      operationId: PostProductTypesId
      summary: Update a Product Type
      description: Update a product type's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product type's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - value
                - metadata
              properties:
                value:
                  type: string
                  title: value
                  description: The product type's value.
                metadata:
                  type: object
                  description: The product type's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/product-types/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "value": "{value}",
              "metadata": {}
            }'
      tags:
        - Product Types
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteProductTypesId
      summary: Delete a Product Type
      description: Delete a product type.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product type's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/product-types/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Product Types
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/products:
    get:
      operationId: GetProducts
      summary: List Products
      description: Retrieve a list of products. The products can be filtered by fields such as `id`. The products can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/products' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProducts
      summary: Create Product
      description: Create a product.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - title
                - subtitle
                - description
                - is_giftcard
                - discountable
                - images
                - thumbnail
                - handle
                - status
                - type_id
                - collection_id
                - categories
                - tags
                - options
                - variants
                - sales_channels
                - weight
                - length
                - height
                - width
                - hs_code
                - mid_code
                - origin_country
                - material
                - metadata
              properties:
                title:
                  type: string
                  title: title
                  description: The product's title.
                subtitle:
                  type: string
                  title: subtitle
                  description: The product's subtitle.
                description:
                  type: string
                  title: description
                  description: The product's description.
                is_giftcard:
                  type: boolean
                  title: is_giftcard
                  description: The product's is giftcard.
                discountable:
                  type: boolean
                  title: discountable
                  description: The product's discountable.
                images:
                  type: array
                  description: The product's images.
                  items:
                    type: object
                    description: The image's images.
                    required:
                      - url
                    properties:
                      url:
                        type: string
                        title: url
                        description: The image's url.
                thumbnail:
                  type: string
                  title: thumbnail
                  description: The product's thumbnail.
                handle:
                  type: string
                  title: handle
                  description: The product's handle.
                status:
                  type: string
                  enum:
                    - draft
                    - proposed
                    - published
                    - rejected
                type_id:
                  type: string
                  title: type_id
                  description: The product's type id.
                collection_id:
                  type: string
                  title: collection_id
                  description: The product's collection id.
                categories:
                  type: array
                  description: The product's categories.
                  items:
                    type: object
                    description: The category's categories.
                    required:
                      - id
                    properties:
                      id:
                        type: string
                        title: id
                        description: The category's ID.
                tags:
                  type: array
                  description: The product's tags.
                  items:
                    type: object
                    description: The tag's tags.
                    required:
                      - id
                      - value
                    properties:
                      id:
                        type: string
                        title: id
                        description: The tag's ID.
                      value:
                        type: string
                        title: value
                        description: The tag's value.
                options:
                  type: array
                  description: The product's options.
                  items:
                    type: object
                    description: The option's options.
                    required:
                      - title
                      - values
                    properties:
                      title:
                        type: string
                        title: title
                        description: The option's title.
                      values:
                        type: array
                        description: The option's values.
                        items:
                          type: string
                          title: values
                          description: The value's values.
                variants:
                  type: array
                  description: The product's variants.
                  items:
                    type: object
                    description: The variant's variants.
                    required:
                      - title
                      - sku
                      - ean
                      - upc
                      - barcode
                      - hs_code
                      - mid_code
                      - inventory_quantity
                      - allow_backorder
                      - manage_inventory
                      - variant_rank
                      - weight
                      - length
                      - height
                      - width
                      - origin_country
                      - material
                      - metadata
                      - prices
                      - options
                    properties:
                      title:
                        type: string
                        title: title
                        description: The variant's title.
                      sku:
                        type: string
                        title: sku
                        description: The variant's sku.
                      ean:
                        type: string
                        title: ean
                        description: The variant's ean.
                      upc:
                        type: string
                        title: upc
                        description: The variant's upc.
                      barcode:
                        type: string
                        title: barcode
                        description: The variant's barcode.
                      hs_code:
                        type: string
                        title: hs_code
                        description: The variant's hs code.
                      mid_code:
                        type: string
                        title: mid_code
                        description: The variant's mid code.
                      inventory_quantity:
                        type: number
                        title: inventory_quantity
                        description: The variant's inventory quantity.
                      allow_backorder:
                        type: boolean
                        title: allow_backorder
                        description: The variant's allow backorder.
                      manage_inventory:
                        type: boolean
                        title: manage_inventory
                        description: The variant's manage inventory.
                      variant_rank:
                        type: number
                        title: variant_rank
                        description: The variant's variant rank.
                      weight:
                        type: number
                        title: weight
                        description: The variant's weight.
                      length:
                        type: number
                        title: length
                        description: The variant's length.
                      height:
                        type: number
                        title: height
                        description: The variant's height.
                      width:
                        type: number
                        title: width
                        description: The variant's width.
                      origin_country:
                        type: string
                        title: origin_country
                        description: The variant's origin country.
                      material:
                        type: string
                        title: material
                        description: The variant's material.
                      metadata:
                        type: object
                        description: The variant's metadata.
                        properties: {}
                      prices:
                        type: array
                        description: The variant's prices.
                        items:
                          type: object
                          description: The price's prices.
                          required:
                            - currency_code
                            - amount
                            - min_quantity
                            - max_quantity
                          properties:
                            currency_code:
                              type: string
                              title: currency_code
                              description: The price's currency code.
                            amount:
                              type: number
                              title: amount
                              description: The price's amount.
                            min_quantity:
                              type: number
                              title: min_quantity
                              description: The price's min quantity.
                            max_quantity:
                              type: number
                              title: max_quantity
                              description: The price's max quantity.
                      options:
                        type: object
                        description: The variant's options.
                        properties: {}
                sales_channels:
                  type: array
                  description: The product's sales channels.
                  items:
                    type: object
                    description: The sales channel's sales channels.
                    required:
                      - id
                    properties:
                      id:
                        type: string
                        title: id
                        description: The sales channel's ID.
                weight:
                  type: number
                  title: weight
                  description: The product's weight.
                length:
                  type: number
                  title: length
                  description: The product's length.
                height:
                  type: number
                  title: height
                  description: The product's height.
                width:
                  type: number
                  title: width
                  description: The product's width.
                hs_code:
                  type: string
                  title: hs_code
                  description: The product's hs code.
                mid_code:
                  type: string
                  title: mid_code
                  description: The product's mid code.
                origin_country:
                  type: string
                  title: origin_country
                  description: The product's origin country.
                material:
                  type: string
                  title: material
                  description: The product's material.
                metadata:
                  type: object
                  description: The product's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "title": "{value}",
              "subtitle": "{value}",
              "description": "{value}",
              "is_giftcard": false,
              "discountable": false,
              "images": [
                {
                  "url": "{value}"
                }
              ],
              "thumbnail": "{value}",
              "handle": "{value}",
              "status": "{value}",
              "type_id": "{value}",
              "collection_id": "{value}",
              "categories": [
                {
                  "id": "id_Pb7xedYA7ZAv6g6j54ew"
                }
              ],
              "tags": [
                {
                  "id": "id_oDxag4mAGc8CJc",
                  "value": "{value}"
                }
              ],
              "options": [
                {
                  "title": "{value}",
                  "values": [
                    "{value}"
                  ]
                }
              ],
              "variants": [
                {
                  "title": "{value}",
                  "sku": "{value}",
                  "ean": "{value}",
                  "upc": "{value}",
                  "barcode": "{value}",
                  "hs_code": "{value}",
                  "mid_code": "{value}",
                  "inventory_quantity": 1351101225893888,
                  "allow_backorder": true,
                  "manage_inventory": true,
                  "variant_rank": 7155606282567680,
                  "weight": 4684377097240576,
                  "length": 8061605384290304,
                  "height": 977445643616256,
                  "width": 6708177689116672,
                  "origin_country": "{value}",
                  "material": "{value}",
                  "metadata": {},
                  "prices": [
                    {
                      "currency_code": "{value}",
                      "amount": 4139683418210304,
                      "min_quantity": 8440994678702080,
                      "max_quantity": 5266280927985664
                    }
                  ],
                  "options": {}
                }
              ],
              "sales_channels": [
                {
                  "id": "id_WJNcwOGY7glMp"
                }
              ],
              "weight": 8634028928270336,
              "length": 2270965595635712,
              "height": 216881319378944,
              "width": 7665967272296448,
              "hs_code": "{value}",
              "mid_code": "{value}",
              "origin_country": "{value}",
              "material": "{value}",
              "metadata": {}
            }'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/products/batch:
    post:
      operationId: PostProductsBatch
      summary: Create Product
      description: Create a product.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products/batch' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                create:
                  type: array
                  description: The product's create.
                  items:
                    type: object
                    description: The create's details.
                    required:
                      - title
                      - subtitle
                      - description
                      - is_giftcard
                      - discountable
                      - images
                      - thumbnail
                      - handle
                      - status
                      - type_id
                      - collection_id
                      - categories
                      - tags
                      - options
                      - variants
                      - sales_channels
                      - weight
                      - length
                      - height
                      - width
                      - hs_code
                      - mid_code
                      - origin_country
                      - material
                      - metadata
                    properties:
                      title:
                        type: string
                        title: title
                        description: The create's title.
                      subtitle:
                        type: string
                        title: subtitle
                        description: The create's subtitle.
                      description:
                        type: string
                        title: description
                        description: The create's description.
                      is_giftcard:
                        type: boolean
                        title: is_giftcard
                        description: The create's is giftcard.
                      discountable:
                        type: boolean
                        title: discountable
                        description: The create's discountable.
                      images:
                        type: array
                        description: The create's images.
                        items:
                          type: object
                          description: The image's images.
                          required:
                            - url
                          properties:
                            url:
                              type: string
                              title: url
                              description: The image's url.
                      thumbnail:
                        type: string
                        title: thumbnail
                        description: The create's thumbnail.
                      handle:
                        type: string
                        title: handle
                        description: The create's handle.
                      status:
                        type: string
                        enum:
                          - draft
                          - proposed
                          - published
                          - rejected
                      type_id:
                        type: string
                        title: type_id
                        description: The create's type id.
                      collection_id:
                        type: string
                        title: collection_id
                        description: The create's collection id.
                      categories:
                        type: array
                        description: The create's categories.
                        items:
                          type: object
                          description: The category's categories.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              title: id
                              description: The category's ID.
                      tags:
                        type: array
                        description: The create's tags.
                        items:
                          type: object
                          description: The tag's tags.
                          required:
                            - id
                            - value
                          properties:
                            id:
                              type: string
                              title: id
                              description: The tag's ID.
                            value:
                              type: string
                              title: value
                              description: The tag's value.
                      options:
                        type: array
                        description: The create's options.
                        items:
                          type: object
                          description: The option's options.
                          required:
                            - title
                            - values
                          properties:
                            title:
                              type: string
                              title: title
                              description: The option's title.
                            values:
                              type: array
                              description: The option's values.
                              items:
                                type: string
                                title: values
                                description: The value's values.
                      variants:
                        type: array
                        description: The create's variants.
                        items:
                          type: object
                          description: The variant's variants.
                          required:
                            - title
                            - sku
                            - ean
                            - upc
                            - barcode
                            - hs_code
                            - mid_code
                            - inventory_quantity
                            - allow_backorder
                            - manage_inventory
                            - variant_rank
                            - weight
                            - length
                            - height
                            - width
                            - origin_country
                            - material
                            - metadata
                            - prices
                            - options
                          properties:
                            title:
                              type: string
                              title: title
                              description: The variant's title.
                            sku:
                              type: string
                              title: sku
                              description: The variant's sku.
                            ean:
                              type: string
                              title: ean
                              description: The variant's ean.
                            upc:
                              type: string
                              title: upc
                              description: The variant's upc.
                            barcode:
                              type: string
                              title: barcode
                              description: The variant's barcode.
                            hs_code:
                              type: string
                              title: hs_code
                              description: The variant's hs code.
                            mid_code:
                              type: string
                              title: mid_code
                              description: The variant's mid code.
                            inventory_quantity:
                              type: number
                              title: inventory_quantity
                              description: The variant's inventory quantity.
                            allow_backorder:
                              type: boolean
                              title: allow_backorder
                              description: The variant's allow backorder.
                            manage_inventory:
                              type: boolean
                              title: manage_inventory
                              description: The variant's manage inventory.
                            variant_rank:
                              type: number
                              title: variant_rank
                              description: The variant's variant rank.
                            weight:
                              type: number
                              title: weight
                              description: The variant's weight.
                            length:
                              type: number
                              title: length
                              description: The variant's length.
                            height:
                              type: number
                              title: height
                              description: The variant's height.
                            width:
                              type: number
                              title: width
                              description: The variant's width.
                            origin_country:
                              type: string
                              title: origin_country
                              description: The variant's origin country.
                            material:
                              type: string
                              title: material
                              description: The variant's material.
                            metadata:
                              type: object
                              description: The variant's metadata.
                              properties: {}
                            prices:
                              type: array
                              description: The variant's prices.
                              items:
                                type: object
                                description: The price's prices.
                                properties: {}
                            options:
                              type: object
                              description: The variant's options.
                              properties: {}
                      sales_channels:
                        type: array
                        description: The create's sales channels.
                        items:
                          type: object
                          description: The sales channel's sales channels.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              title: id
                              description: The sales channel's ID.
                      weight:
                        type: number
                        title: weight
                        description: The create's weight.
                      length:
                        type: number
                        title: length
                        description: The create's length.
                      height:
                        type: number
                        title: height
                        description: The create's height.
                      width:
                        type: number
                        title: width
                        description: The create's width.
                      hs_code:
                        type: string
                        title: hs_code
                        description: The create's hs code.
                      mid_code:
                        type: string
                        title: mid_code
                        description: The create's mid code.
                      origin_country:
                        type: string
                        title: origin_country
                        description: The create's origin country.
                      material:
                        type: string
                        title: material
                        description: The create's material.
                      metadata:
                        type: object
                        description: The create's metadata.
                        properties: {}
                update:
                  type: array
                  description: The product's update.
                  items:
                    type: object
                    description: The update's details.
                    required:
                      - title
                      - status
                      - length
                      - options
                      - description
                      - handle
                      - metadata
                      - hs_code
                      - weight
                      - height
                      - width
                      - origin_country
                      - mid_code
                      - material
                      - thumbnail
                      - variants
                      - collection_id
                      - tags
                      - type_id
                      - subtitle
                      - discountable
                      - images
                      - categories
                      - sales_channels
                      - id
                    properties:
                      title:
                        type: string
                        title: title
                        description: The update's title.
                      status:
                        type: string
                        enum:
                          - draft
                          - proposed
                          - published
                          - rejected
                      length:
                        type: number
                        title: length
                        description: The update's length.
                      options:
                        type: array
                        description: The update's options.
                        items:
                          type: object
                          description: The option's options.
                          required:
                            - id
                            - title
                            - values
                          properties:
                            id:
                              type: string
                              title: id
                              description: The option's ID.
                            title:
                              type: string
                              title: title
                              description: The option's title.
                            values:
                              type: array
                              description: The option's values.
                              items:
                                type: string
                                title: values
                                description: The value's values.
                      description:
                        type: string
                        title: description
                        description: The update's description.
                      handle:
                        type: string
                        title: handle
                        description: The update's handle.
                      metadata:
                        type: object
                        description: The update's metadata.
                        properties: {}
                      hs_code:
                        type: string
                        title: hs_code
                        description: The update's hs code.
                      weight:
                        type: number
                        title: weight
                        description: The update's weight.
                      height:
                        type: number
                        title: height
                        description: The update's height.
                      width:
                        type: number
                        title: width
                        description: The update's width.
                      origin_country:
                        type: string
                        title: origin_country
                        description: The update's origin country.
                      mid_code:
                        type: string
                        title: mid_code
                        description: The update's mid code.
                      material:
                        type: string
                        title: material
                        description: The update's material.
                      thumbnail:
                        type: string
                        title: thumbnail
                        description: The update's thumbnail.
                      variants:
                        type: array
                        description: The update's variants.
                        items:
                          type: object
                          description: The variant's variants.
                          required:
                            - length
                            - options
                            - metadata
                            - sku
                            - barcode
                            - hs_code
                            - weight
                            - height
                            - width
                            - origin_country
                            - mid_code
                            - material
                            - ean
                            - upc
                            - variant_rank
                            - id
                            - title
                            - prices
                            - inventory_quantity
                            - allow_backorder
                            - manage_inventory
                          properties:
                            length:
                              type: number
                              title: length
                              description: The variant's length.
                            options:
                              type: object
                              description: The variant's options.
                              properties: {}
                            metadata:
                              type: object
                              description: The variant's metadata.
                              properties: {}
                            sku:
                              type: string
                              title: sku
                              description: The variant's sku.
                            barcode:
                              type: string
                              title: barcode
                              description: The variant's barcode.
                            hs_code:
                              type: string
                              title: hs_code
                              description: The variant's hs code.
                            weight:
                              type: number
                              title: weight
                              description: The variant's weight.
                            height:
                              type: number
                              title: height
                              description: The variant's height.
                            width:
                              type: number
                              title: width
                              description: The variant's width.
                            origin_country:
                              type: string
                              title: origin_country
                              description: The variant's origin country.
                            mid_code:
                              type: string
                              title: mid_code
                              description: The variant's mid code.
                            material:
                              type: string
                              title: material
                              description: The variant's material.
                            ean:
                              type: string
                              title: ean
                              description: The variant's ean.
                            upc:
                              type: string
                              title: upc
                              description: The variant's upc.
                            variant_rank:
                              type: number
                              title: variant_rank
                              description: The variant's variant rank.
                            id:
                              type: string
                              title: id
                              description: The variant's ID.
                            title:
                              type: string
                              title: title
                              description: The variant's title.
                            prices:
                              type: array
                              description: The variant's prices.
                              items:
                                type: object
                                description: The price's prices.
                                properties: {}
                            inventory_quantity:
                              type: number
                              title: inventory_quantity
                              description: The variant's inventory quantity.
                            allow_backorder:
                              type: boolean
                              title: allow_backorder
                              description: The variant's allow backorder.
                            manage_inventory:
                              type: boolean
                              title: manage_inventory
                              description: The variant's manage inventory.
                      collection_id:
                        type: string
                        title: collection_id
                        description: The update's collection id.
                      tags:
                        type: array
                        description: The update's tags.
                        items:
                          type: object
                          description: The tag's tags.
                          required:
                            - id
                            - value
                          properties:
                            id:
                              type: string
                              title: id
                              description: The tag's ID.
                            value:
                              type: string
                              title: value
                              description: The tag's value.
                      type_id:
                        type: string
                        title: type_id
                        description: The update's type id.
                      subtitle:
                        type: string
                        title: subtitle
                        description: The update's subtitle.
                      discountable:
                        type: boolean
                        title: discountable
                        description: The update's discountable.
                      images:
                        type: array
                        description: The update's images.
                        items:
                          type: object
                          description: The image's images.
                          required:
                            - url
                          properties:
                            url:
                              type: string
                              title: url
                              description: The image's url.
                      categories:
                        type: array
                        description: The update's categories.
                        items:
                          type: object
                          description: The category's categories.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              title: id
                              description: The category's ID.
                      sales_channels:
                        type: array
                        description: The update's sales channels.
                        items:
                          type: object
                          description: The sales channel's sales channels.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              title: id
                              description: The sales channel's ID.
                      id:
                        type: string
                        title: id
                        description: The update's ID.
                delete:
                  type: array
                  description: The product's delete.
                  items:
                    type: string
                    title: delete
                    description: The delete's details.
  /admin/products/{id}:
    get:
      operationId: GetProductsId
      summary: Get a Product
      description: Retrieve a product by its ID. You can expand the product's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/products/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProductsId
      summary: Update a Product
      description: Update a product's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - length
                - description
                - handle
                - metadata
                - hs_code
                - weight
                - height
                - width
                - origin_country
                - mid_code
                - material
                - thumbnail
                - collection_id
                - tags
                - type_id
                - subtitle
                - images
                - categories
                - sales_channels
                - title
                - discountable
                - options
                - variants
                - status
              properties:
                length:
                  type: number
                  title: length
                  description: The product's length.
                description:
                  type: string
                  title: description
                  description: The product's description.
                handle:
                  type: string
                  title: handle
                  description: The product's handle.
                metadata:
                  type: object
                  description: The product's metadata.
                  properties: {}
                hs_code:
                  type: string
                  title: hs_code
                  description: The product's hs code.
                weight:
                  type: number
                  title: weight
                  description: The product's weight.
                height:
                  type: number
                  title: height
                  description: The product's height.
                width:
                  type: number
                  title: width
                  description: The product's width.
                origin_country:
                  type: string
                  title: origin_country
                  description: The product's origin country.
                mid_code:
                  type: string
                  title: mid_code
                  description: The product's mid code.
                material:
                  type: string
                  title: material
                  description: The product's material.
                thumbnail:
                  type: string
                  title: thumbnail
                  description: The product's thumbnail.
                collection_id:
                  type: string
                  title: collection_id
                  description: The product's collection id.
                tags:
                  type: array
                  description: The product's tags.
                  items:
                    type: object
                    description: The tag's tags.
                    required:
                      - id
                      - value
                    properties:
                      id:
                        type: string
                        title: id
                        description: The tag's ID.
                      value:
                        type: string
                        title: value
                        description: The tag's value.
                type_id:
                  type: string
                  title: type_id
                  description: The product's type id.
                subtitle:
                  type: string
                  title: subtitle
                  description: The product's subtitle.
                images:
                  type: array
                  description: The product's images.
                  items:
                    type: object
                    description: The image's images.
                    required:
                      - url
                    properties:
                      url:
                        type: string
                        title: url
                        description: The image's url.
                categories:
                  type: array
                  description: The product's categories.
                  items:
                    type: object
                    description: The category's categories.
                    required:
                      - id
                    properties:
                      id:
                        type: string
                        title: id
                        description: The category's ID.
                sales_channels:
                  type: array
                  description: The product's sales channels.
                  items:
                    type: object
                    description: The sales channel's sales channels.
                    required:
                      - id
                    properties:
                      id:
                        type: string
                        title: id
                        description: The sales channel's ID.
                title:
                  type: string
                  title: title
                  description: The product's title.
                discountable:
                  type: boolean
                  title: discountable
                  description: The product's discountable.
                options:
                  type: array
                  description: The product's options.
                  items:
                    type: object
                    description: The option's options.
                    required:
                      - id
                      - title
                      - values
                    properties:
                      id:
                        type: string
                        title: id
                        description: The option's ID.
                      title:
                        type: string
                        title: title
                        description: The option's title.
                      values:
                        type: array
                        description: The option's values.
                        items:
                          type: string
                          title: values
                          description: The value's values.
                variants:
                  type: array
                  description: The product's variants.
                  items:
                    type: object
                    description: The variant's variants.
                    required:
                      - length
                      - options
                      - metadata
                      - sku
                      - barcode
                      - hs_code
                      - weight
                      - height
                      - width
                      - origin_country
                      - mid_code
                      - material
                      - ean
                      - upc
                      - variant_rank
                      - id
                      - title
                      - prices
                      - inventory_quantity
                      - allow_backorder
                      - manage_inventory
                    properties:
                      length:
                        type: number
                        title: length
                        description: The variant's length.
                      options:
                        type: object
                        description: The variant's options.
                        properties: {}
                      metadata:
                        type: object
                        description: The variant's metadata.
                        properties: {}
                      sku:
                        type: string
                        title: sku
                        description: The variant's sku.
                      barcode:
                        type: string
                        title: barcode
                        description: The variant's barcode.
                      hs_code:
                        type: string
                        title: hs_code
                        description: The variant's hs code.
                      weight:
                        type: number
                        title: weight
                        description: The variant's weight.
                      height:
                        type: number
                        title: height
                        description: The variant's height.
                      width:
                        type: number
                        title: width
                        description: The variant's width.
                      origin_country:
                        type: string
                        title: origin_country
                        description: The variant's origin country.
                      mid_code:
                        type: string
                        title: mid_code
                        description: The variant's mid code.
                      material:
                        type: string
                        title: material
                        description: The variant's material.
                      ean:
                        type: string
                        title: ean
                        description: The variant's ean.
                      upc:
                        type: string
                        title: upc
                        description: The variant's upc.
                      variant_rank:
                        type: number
                        title: variant_rank
                        description: The variant's variant rank.
                      id:
                        type: string
                        title: id
                        description: The variant's ID.
                      title:
                        type: string
                        title: title
                        description: The variant's title.
                      prices:
                        type: array
                        description: The variant's prices.
                        items:
                          type: object
                          description: The price's prices.
                          required:
                            - id
                            - currency_code
                            - amount
                            - min_quantity
                            - max_quantity
                          properties:
                            id:
                              type: string
                              title: id
                              description: The price's ID.
                            currency_code:
                              type: string
                              title: currency_code
                              description: The price's currency code.
                            amount:
                              type: number
                              title: amount
                              description: The price's amount.
                            min_quantity:
                              type: number
                              title: min_quantity
                              description: The price's min quantity.
                            max_quantity:
                              type: number
                              title: max_quantity
                              description: The price's max quantity.
                      inventory_quantity:
                        type: number
                        title: inventory_quantity
                        description: The variant's inventory quantity.
                      allow_backorder:
                        type: boolean
                        title: allow_backorder
                        description: The variant's allow backorder.
                      manage_inventory:
                        type: boolean
                        title: manage_inventory
                        description: The variant's manage inventory.
                status:
                  type: string
                  enum:
                    - draft
                    - proposed
                    - published
                    - rejected
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "length": 3282567029587968,
              "description": "{value}",
              "handle": "{value}",
              "metadata": {},
              "hs_code": "{value}",
              "weight": 4215232060719104,
              "height": 6855525188763648,
              "width": 6565860296622080,
              "origin_country": "{value}",
              "mid_code": "{value}",
              "material": "{value}",
              "thumbnail": "{value}",
              "collection_id": "{value}",
              "tags": [
                {
                  "id": "id_ufkiM27SGLcGKiI9fx7h",
                  "value": "{value}"
                }
              ],
              "type_id": "{value}",
              "subtitle": "{value}",
              "images": [
                {
                  "url": "{value}"
                }
              ],
              "categories": [
                {
                  "id": "id_Je6uOboEms3Pkb0s14SZ"
                }
              ],
              "sales_channels": [
                {
                  "id": "id_ttuXRM0VhnlxO0tg061"
                }
              ],
              "title": "{value}",
              "discountable": true,
              "options": [
                {
                  "id": "id_2B9lNIRdze",
                  "title": "{value}",
                  "values": [
                    "{value}"
                  ]
                }
              ],
              "variants": [
                {
                  "length": 7973681567367168,
                  "options": {},
                  "metadata": {},
                  "sku": "{value}",
                  "barcode": "{value}",
                  "hs_code": "{value}",
                  "weight": 815881462480896,
                  "height": 3071682140962816,
                  "width": 1867897194414080,
                  "origin_country": "{value}",
                  "mid_code": "{value}",
                  "material": "{value}",
                  "ean": "{value}",
                  "upc": "{value}",
                  "variant_rank": 6253314014445568,
                  "id": "id_QiUPVfomSLnRRU",
                  "title": "{value}",
                  "prices": [
                    {
                      "id": "id_KIf1hFOhE2",
                      "currency_code": "{value}",
                      "amount": 7111166155292672,
                      "min_quantity": 7445498468237312,
                      "max_quantity": 7312473510117376
                    }
                  ],
                  "inventory_quantity": 3277737491955712,
                  "allow_backorder": false,
                  "manage_inventory": true
                }
              ],
              "status": "{value}"
            }'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteProductsId
      summary: Delete a Product
      description: Delete a product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/products/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/products/{id}/options:
    get:
      operationId: GetProductsIdOptions
      summary: List Options
      description: Retrieve a list of options in a product. The options can be filtered by fields like FILTER FIELDS. The options can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/products/{id}/options' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProductsIdOptions
      summary: Add Options to Product
      description: Add a list of options to a product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - title
                - values
              properties:
                title:
                  type: string
                  title: title
                  description: The product's title.
                values:
                  type: array
                  description: The product's values.
                  items:
                    type: string
                    title: values
                    description: The value's values.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products/{id}/options' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "title": "{value}",
              "values": [
                "{value}"
              ]
            }'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/products/{id}/options/{option_id}:
    get:
      operationId: GetProductsIdOptionsOption_id
      summary: List Options
      description: Retrieve a list of options in a product. The options can be filtered by fields like FILTER FIELDS. The options can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: option_id
          in: path
          description: The product's option id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/products/{id}/options/{option_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProductsIdOptionsOption_id
      summary: Add Options to Product
      description: Add a list of options to a product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: option_id
          in: path
          description: The product's option id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - id
                - title
                - values
              properties:
                id:
                  type: string
                  title: id
                  description: The product's ID.
                title:
                  type: string
                  title: title
                  description: The product's title.
                values:
                  type: array
                  description: The product's values.
                  items:
                    type: string
                    title: values
                    description: The value's values.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products/{id}/options/{option_id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "id": "id_BdxJWBRNOp",
              "title": "{value}",
              "values": [
                "{value}"
              ]
            }'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteProductsIdOptionsOption_id
      summary: Remove Options from Product
      description: Remove a list of options from a product. This doesn't delete the Option, only the association between the Option and the product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: option_id
          in: path
          description: The product's option id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/products/{id}/options/{option_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/products/{id}/variants:
    get:
      operationId: GetProductsIdVariants
      summary: List Variants
      description: Retrieve a list of variants in a product. The variants can be filtered by fields like FILTER FIELDS. The variants can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/products/{id}/variants' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProductsIdVariants
      summary: Add Variants to Product
      description: Add a list of variants to a product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - title
                - sku
                - ean
                - upc
                - barcode
                - hs_code
                - mid_code
                - inventory_quantity
                - allow_backorder
                - manage_inventory
                - variant_rank
                - weight
                - length
                - height
                - width
                - origin_country
                - material
                - metadata
                - prices
                - options
              properties:
                title:
                  type: string
                  title: title
                  description: The product's title.
                sku:
                  type: string
                  title: sku
                  description: The product's sku.
                ean:
                  type: string
                  title: ean
                  description: The product's ean.
                upc:
                  type: string
                  title: upc
                  description: The product's upc.
                barcode:
                  type: string
                  title: barcode
                  description: The product's barcode.
                hs_code:
                  type: string
                  title: hs_code
                  description: The product's hs code.
                mid_code:
                  type: string
                  title: mid_code
                  description: The product's mid code.
                inventory_quantity:
                  type: number
                  title: inventory_quantity
                  description: The product's inventory quantity.
                allow_backorder:
                  type: boolean
                  title: allow_backorder
                  description: The product's allow backorder.
                manage_inventory:
                  type: boolean
                  title: manage_inventory
                  description: The product's manage inventory.
                variant_rank:
                  type: number
                  title: variant_rank
                  description: The product's variant rank.
                weight:
                  type: number
                  title: weight
                  description: The product's weight.
                length:
                  type: number
                  title: length
                  description: The product's length.
                height:
                  type: number
                  title: height
                  description: The product's height.
                width:
                  type: number
                  title: width
                  description: The product's width.
                origin_country:
                  type: string
                  title: origin_country
                  description: The product's origin country.
                material:
                  type: string
                  title: material
                  description: The product's material.
                metadata:
                  type: object
                  description: The product's metadata.
                  properties: {}
                prices:
                  type: array
                  description: The product's prices.
                  items:
                    type: object
                    description: The price's prices.
                    required:
                      - currency_code
                      - amount
                      - min_quantity
                      - max_quantity
                    properties:
                      currency_code:
                        type: string
                        title: currency_code
                        description: The price's currency code.
                      amount:
                        type: number
                        title: amount
                        description: The price's amount.
                      min_quantity:
                        type: number
                        title: min_quantity
                        description: The price's min quantity.
                      max_quantity:
                        type: number
                        title: max_quantity
                        description: The price's max quantity.
                options:
                  type: object
                  description: The product's options.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products/{id}/variants' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "title": "{value}",
              "sku": "{value}",
              "ean": "{value}",
              "upc": "{value}",
              "barcode": "{value}",
              "hs_code": "{value}",
              "mid_code": "{value}",
              "inventory_quantity": 3621544083324928,
              "allow_backorder": false,
              "manage_inventory": true,
              "variant_rank": 849570489696256,
              "weight": 7893319220723712,
              "length": 2949835917361152,
              "height": 2357674687594496,
              "width": 5150499311452160,
              "origin_country": "{value}",
              "material": "{value}",
              "metadata": {},
              "prices": [
                {
                  "currency_code": "{value}",
                  "amount": 8952600449777664,
                  "min_quantity": 5462512040411136,
                  "max_quantity": 4871260370632704
                }
              ],
              "options": {}
            }'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/products/{id}/variants/batch:
    post:
      operationId: PostProductsIdVariantsBatch
      summary: Add Variants to Product
      description: Add a list of variants to a product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products/{id}/variants/batch' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                create:
                  type: array
                  description: The product's create.
                  items:
                    type: object
                    description: The create's details.
                    required:
                      - title
                      - subtitle
                      - description
                      - is_giftcard
                      - discountable
                      - images
                      - thumbnail
                      - handle
                      - status
                      - type_id
                      - collection_id
                      - categories
                      - tags
                      - options
                      - variants
                      - sales_channels
                      - weight
                      - length
                      - height
                      - width
                      - hs_code
                      - mid_code
                      - origin_country
                      - material
                      - metadata
                    properties:
                      title:
                        type: string
                        title: title
                        description: The create's title.
                      subtitle:
                        type: string
                        title: subtitle
                        description: The create's subtitle.
                      description:
                        type: string
                        title: description
                        description: The create's description.
                      is_giftcard:
                        type: boolean
                        title: is_giftcard
                        description: The create's is giftcard.
                      discountable:
                        type: boolean
                        title: discountable
                        description: The create's discountable.
                      images:
                        type: array
                        description: The create's images.
                        items:
                          type: object
                          description: The image's images.
                          required:
                            - url
                          properties:
                            url:
                              type: string
                              title: url
                              description: The image's url.
                      thumbnail:
                        type: string
                        title: thumbnail
                        description: The create's thumbnail.
                      handle:
                        type: string
                        title: handle
                        description: The create's handle.
                      status:
                        type: string
                        enum:
                          - draft
                          - proposed
                          - published
                          - rejected
                      type_id:
                        type: string
                        title: type_id
                        description: The create's type id.
                      collection_id:
                        type: string
                        title: collection_id
                        description: The create's collection id.
                      categories:
                        type: array
                        description: The create's categories.
                        items:
                          type: object
                          description: The category's categories.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              title: id
                              description: The category's ID.
                      tags:
                        type: array
                        description: The create's tags.
                        items:
                          type: object
                          description: The tag's tags.
                          required:
                            - id
                            - value
                          properties:
                            id:
                              type: string
                              title: id
                              description: The tag's ID.
                            value:
                              type: string
                              title: value
                              description: The tag's value.
                      options:
                        type: array
                        description: The create's options.
                        items:
                          type: object
                          description: The option's options.
                          required:
                            - title
                            - values
                          properties:
                            title:
                              type: string
                              title: title
                              description: The option's title.
                            values:
                              type: array
                              description: The option's values.
                              items:
                                type: string
                                title: values
                                description: The value's values.
                      variants:
                        type: array
                        description: The create's variants.
                        items:
                          type: object
                          description: The variant's variants.
                          required:
                            - title
                            - sku
                            - ean
                            - upc
                            - barcode
                            - hs_code
                            - mid_code
                            - inventory_quantity
                            - allow_backorder
                            - manage_inventory
                            - variant_rank
                            - weight
                            - length
                            - height
                            - width
                            - origin_country
                            - material
                            - metadata
                            - prices
                            - options
                          properties:
                            title:
                              type: string
                              title: title
                              description: The variant's title.
                            sku:
                              type: string
                              title: sku
                              description: The variant's sku.
                            ean:
                              type: string
                              title: ean
                              description: The variant's ean.
                            upc:
                              type: string
                              title: upc
                              description: The variant's upc.
                            barcode:
                              type: string
                              title: barcode
                              description: The variant's barcode.
                            hs_code:
                              type: string
                              title: hs_code
                              description: The variant's hs code.
                            mid_code:
                              type: string
                              title: mid_code
                              description: The variant's mid code.
                            inventory_quantity:
                              type: number
                              title: inventory_quantity
                              description: The variant's inventory quantity.
                            allow_backorder:
                              type: boolean
                              title: allow_backorder
                              description: The variant's allow backorder.
                            manage_inventory:
                              type: boolean
                              title: manage_inventory
                              description: The variant's manage inventory.
                            variant_rank:
                              type: number
                              title: variant_rank
                              description: The variant's variant rank.
                            weight:
                              type: number
                              title: weight
                              description: The variant's weight.
                            length:
                              type: number
                              title: length
                              description: The variant's length.
                            height:
                              type: number
                              title: height
                              description: The variant's height.
                            width:
                              type: number
                              title: width
                              description: The variant's width.
                            origin_country:
                              type: string
                              title: origin_country
                              description: The variant's origin country.
                            material:
                              type: string
                              title: material
                              description: The variant's material.
                            metadata:
                              type: object
                              description: The variant's metadata.
                              properties: {}
                            prices:
                              type: array
                              description: The variant's prices.
                              items:
                                type: object
                                description: The price's prices.
                                properties: {}
                            options:
                              type: object
                              description: The variant's options.
                              properties: {}
                      sales_channels:
                        type: array
                        description: The create's sales channels.
                        items:
                          type: object
                          description: The sales channel's sales channels.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              title: id
                              description: The sales channel's ID.
                      weight:
                        type: number
                        title: weight
                        description: The create's weight.
                      length:
                        type: number
                        title: length
                        description: The create's length.
                      height:
                        type: number
                        title: height
                        description: The create's height.
                      width:
                        type: number
                        title: width
                        description: The create's width.
                      hs_code:
                        type: string
                        title: hs_code
                        description: The create's hs code.
                      mid_code:
                        type: string
                        title: mid_code
                        description: The create's mid code.
                      origin_country:
                        type: string
                        title: origin_country
                        description: The create's origin country.
                      material:
                        type: string
                        title: material
                        description: The create's material.
                      metadata:
                        type: object
                        description: The create's metadata.
                        properties: {}
                update:
                  type: array
                  description: The product's update.
                  items:
                    type: object
                    description: The update's details.
                    required:
                      - title
                      - length
                      - options
                      - metadata
                      - sku
                      - barcode
                      - hs_code
                      - weight
                      - height
                      - width
                      - origin_country
                      - mid_code
                      - material
                      - prices
                      - manage_inventory
                      - allow_backorder
                      - ean
                      - upc
                      - inventory_quantity
                      - variant_rank
                      - id
                    properties:
                      title:
                        type: string
                        title: title
                        description: The update's title.
                      length:
                        type: number
                        title: length
                        description: The update's length.
                      options:
                        type: object
                        description: The update's options.
                        properties: {}
                      metadata:
                        type: object
                        description: The update's metadata.
                        properties: {}
                      sku:
                        type: string
                        title: sku
                        description: The update's sku.
                      barcode:
                        type: string
                        title: barcode
                        description: The update's barcode.
                      hs_code:
                        type: string
                        title: hs_code
                        description: The update's hs code.
                      weight:
                        type: number
                        title: weight
                        description: The update's weight.
                      height:
                        type: number
                        title: height
                        description: The update's height.
                      width:
                        type: number
                        title: width
                        description: The update's width.
                      origin_country:
                        type: string
                        title: origin_country
                        description: The update's origin country.
                      mid_code:
                        type: string
                        title: mid_code
                        description: The update's mid code.
                      material:
                        type: string
                        title: material
                        description: The update's material.
                      prices:
                        type: array
                        description: The update's prices.
                        items:
                          type: object
                          description: The price's prices.
                          required:
                            - id
                            - currency_code
                            - amount
                            - min_quantity
                            - max_quantity
                          properties:
                            id:
                              type: string
                              title: id
                              description: The price's ID.
                            currency_code:
                              type: string
                              title: currency_code
                              description: The price's currency code.
                            amount:
                              type: number
                              title: amount
                              description: The price's amount.
                            min_quantity:
                              type: number
                              title: min_quantity
                              description: The price's min quantity.
                            max_quantity:
                              type: number
                              title: max_quantity
                              description: The price's max quantity.
                      manage_inventory:
                        type: boolean
                        title: manage_inventory
                        description: The update's manage inventory.
                      allow_backorder:
                        type: boolean
                        title: allow_backorder
                        description: The update's allow backorder.
                      ean:
                        type: string
                        title: ean
                        description: The update's ean.
                      upc:
                        type: string
                        title: upc
                        description: The update's upc.
                      inventory_quantity:
                        type: number
                        title: inventory_quantity
                        description: The update's inventory quantity.
                      variant_rank:
                        type: number
                        title: variant_rank
                        description: The update's variant rank.
                      id:
                        type: string
                        title: id
                        description: The update's ID.
                delete:
                  type: array
                  description: The product's delete.
                  items:
                    type: string
                    title: delete
                    description: The delete's details.
  /admin/products/{id}/variants/{variant_id}:
    get:
      operationId: GetProductsIdVariantsVariant_id
      summary: List Variants
      description: Retrieve a list of variants in a product. The variants can be filtered by fields like FILTER FIELDS. The variants can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: variant_id
          in: path
          description: The product's variant id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/products/{id}/variants/{variant_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProductsIdVariantsVariant_id
      summary: Add Variants to Product
      description: Add a list of variants to a product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: variant_id
          in: path
          description: The product's variant id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - length
                - options
                - metadata
                - sku
                - barcode
                - hs_code
                - weight
                - height
                - width
                - origin_country
                - mid_code
                - material
                - ean
                - upc
                - variant_rank
                - id
                - title
                - prices
                - inventory_quantity
                - allow_backorder
                - manage_inventory
              properties:
                length:
                  type: number
                  title: length
                  description: The product's length.
                options:
                  type: object
                  description: The product's options.
                  properties: {}
                metadata:
                  type: object
                  description: The product's metadata.
                  properties: {}
                sku:
                  type: string
                  title: sku
                  description: The product's sku.
                barcode:
                  type: string
                  title: barcode
                  description: The product's barcode.
                hs_code:
                  type: string
                  title: hs_code
                  description: The product's hs code.
                weight:
                  type: number
                  title: weight
                  description: The product's weight.
                height:
                  type: number
                  title: height
                  description: The product's height.
                width:
                  type: number
                  title: width
                  description: The product's width.
                origin_country:
                  type: string
                  title: origin_country
                  description: The product's origin country.
                mid_code:
                  type: string
                  title: mid_code
                  description: The product's mid code.
                material:
                  type: string
                  title: material
                  description: The product's material.
                ean:
                  type: string
                  title: ean
                  description: The product's ean.
                upc:
                  type: string
                  title: upc
                  description: The product's upc.
                variant_rank:
                  type: number
                  title: variant_rank
                  description: The product's variant rank.
                id:
                  type: string
                  title: id
                  description: The product's ID.
                title:
                  type: string
                  title: title
                  description: The product's title.
                prices:
                  type: array
                  description: The product's prices.
                  items:
                    type: object
                    description: The price's prices.
                    required:
                      - id
                      - currency_code
                      - amount
                      - min_quantity
                      - max_quantity
                    properties:
                      id:
                        type: string
                        title: id
                        description: The price's ID.
                      currency_code:
                        type: string
                        title: currency_code
                        description: The price's currency code.
                      amount:
                        type: number
                        title: amount
                        description: The price's amount.
                      min_quantity:
                        type: number
                        title: min_quantity
                        description: The price's min quantity.
                      max_quantity:
                        type: number
                        title: max_quantity
                        description: The price's max quantity.
                inventory_quantity:
                  type: number
                  title: inventory_quantity
                  description: The product's inventory quantity.
                allow_backorder:
                  type: boolean
                  title: allow_backorder
                  description: The product's allow backorder.
                manage_inventory:
                  type: boolean
                  title: manage_inventory
                  description: The product's manage inventory.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products/{id}/variants/{variant_id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "length": 553333433565184,
              "options": {},
              "metadata": {},
              "sku": "{value}",
              "barcode": "{value}",
              "hs_code": "{value}",
              "weight": 110229628911616,
              "height": 4172081795170304,
              "width": 2991320977113088,
              "origin_country": "{value}",
              "mid_code": "{value}",
              "material": "{value}",
              "ean": "{value}",
              "upc": "{value}",
              "variant_rank": 3522258324684800,
              "id": "id_bPPvwOwWIa2ndex",
              "title": "{value}",
              "prices": [
                {
                  "id": "id_gGmeMrUwBNt",
                  "currency_code": "{value}",
                  "amount": 4572898136162304,
                  "min_quantity": 6709305447284736,
                  "max_quantity": 2556752140697600
                }
              ],
              "inventory_quantity": 7991114464231424,
              "allow_backorder": false,
              "manage_inventory": true
            }'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteProductsIdVariantsVariant_id
      summary: Remove Variants from Product
      description: Remove a list of variants from a product. This doesn't delete the Variant, only the association between the Variant and the product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: variant_id
          in: path
          description: The product's variant id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/products/{id}/variants/{variant_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/promotions:
    get:
      operationId: GetPromotions
      summary: List Promotions
      description: Retrieve a list of promotions. The promotions can be filtered by fields such as `id`. The promotions can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/promotions' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostPromotions
      summary: Create Promotion
      description: Create a promotion.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - code
                - is_automatic
                - type
                - campaign_id
                - campaign
                - application_method
                - rules
              properties:
                code:
                  type: string
                  title: code
                  description: The promotion's code.
                is_automatic:
                  type: boolean
                  title: is_automatic
                  description: The promotion's is automatic.
                type:
                  type: string
                  enum:
                    - standard
                    - buyget
                campaign_id:
                  type: string
                  title: campaign_id
                  description: The promotion's campaign id.
                campaign:
                  type: object
                  description: The promotion's campaign.
                  required:
                    - name
                    - campaign_identifier
                    - description
                    - currency
                    - budget
                    - starts_at
                    - ends_at
                    - promotions
                  properties:
                    name:
                      type: string
                      title: name
                      description: The campaign's name.
                    campaign_identifier:
                      type: string
                      title: campaign_identifier
                      description: The campaign's campaign identifier.
                    description:
                      type: string
                      title: description
                      description: The campaign's description.
                    currency:
                      type: string
                      title: currency
                      description: The campaign's currency.
                    budget:
                      type: object
                      description: The campaign's budget.
                      required:
                        - type
                        - limit
                      properties:
                        type:
                          type: string
                          enum:
                            - spend
                            - usage
                        limit:
                          type: number
                          title: limit
                          description: The budget's limit.
                    starts_at:
                      type: string
                      title: starts_at
                      description: The campaign's starts at.
                      format: date-time
                    ends_at:
                      type: string
                      title: ends_at
                      description: The campaign's ends at.
                      format: date-time
                    promotions:
                      type: array
                      description: The campaign's promotions.
                      items:
                        type: object
                        description: The promotion's promotions.
                        required:
                          - id
                        properties:
                          id:
                            type: string
                            title: id
                            description: The promotion's ID.
                application_method:
                  type: object
                  description: The promotion's application method.
                  required:
                    - description
                    - value
                    - max_quantity
                    - type
                    - target_type
                    - allocation
                    - target_rules
                    - buy_rules
                    - apply_to_quantity
                    - buy_rules_min_quantity
                  properties:
                    description:
                      type: string
                      title: description
                      description: The application method's description.
                    value:
                      type: number
                      title: value
                      description: The application method's value.
                    max_quantity:
                      type: number
                      title: max_quantity
                      description: The application method's max quantity.
                    type:
                      type: string
                      enum:
                        - fixed
                        - percentage
                    target_type:
                      type: string
                      enum:
                        - order
                        - shipping_methods
                        - items
                    allocation:
                      type: string
                      enum:
                        - each
                        - across
                    target_rules:
                      type: array
                      description: The application method's target rules.
                      items:
                        type: object
                        description: The target rule's target rules.
                        required:
                          - operator
                          - description
                          - attribute
                          - values
                        properties:
                          operator:
                            type: string
                            enum:
                              - gte
                              - lte
                              - gt
                              - lt
                              - eq
                              - ne
                              - in
                          description:
                            type: string
                            title: description
                            description: The target rule's description.
                          attribute:
                            type: string
                            title: attribute
                            description: The target rule's attribute.
                          values:
                            type: array
                            description: The target rule's values.
                            items:
                              type: string
                              title: values
                              description: The value's values.
                    buy_rules:
                      type: array
                      description: The application method's buy rules.
                      items:
                        type: object
                        description: The buy rule's buy rules.
                        required:
                          - operator
                          - description
                          - attribute
                          - values
                        properties:
                          operator:
                            type: string
                            enum:
                              - gte
                              - lte
                              - gt
                              - lt
                              - eq
                              - ne
                              - in
                          description:
                            type: string
                            title: description
                            description: The buy rule's description.
                          attribute:
                            type: string
                            title: attribute
                            description: The buy rule's attribute.
                          values:
                            type: array
                            description: The buy rule's values.
                            items:
                              type: string
                              title: values
                              description: The value's values.
                    apply_to_quantity:
                      type: number
                      title: apply_to_quantity
                      description: The application method's apply to quantity.
                    buy_rules_min_quantity:
                      type: number
                      title: buy_rules_min_quantity
                      description: The application method's buy rules min quantity.
                rules:
                  type: array
                  description: The promotion's rules.
                  items:
                    type: object
                    description: The rule's rules.
                    required:
                      - operator
                      - description
                      - attribute
                      - values
                    properties:
                      operator:
                        type: string
                        enum:
                          - gte
                          - lte
                          - gt
                          - lt
                          - eq
                          - ne
                          - in
                      description:
                        type: string
                        title: description
                        description: The rule's description.
                      attribute:
                        type: string
                        title: attribute
                        description: The rule's attribute.
                      values:
                        type: array
                        description: The rule's values.
                        items:
                          type: string
                          title: values
                          description: The value's values.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "code": "{value}",
              "is_automatic": false,
              "type": "{value}",
              "campaign_id": "{value}",
              "campaign": {
                "name": "Helene",
                "campaign_identifier": "{value}",
                "description": "{value}",
                "currency": "MVR",
                "budget": {
                  "type": "{value}",
                  "limit": 7501249997963264
                },
                "starts_at": "2024-08-12T10:26:20.012Z",
                "ends_at": "2024-05-13T10:19:49.899Z",
                "promotions": []
              },
              "application_method": {
                "description": "{value}",
                "value": 8358287623847936,
                "max_quantity": 2469068038733824,
                "type": "{value}",
                "target_type": "{value}",
                "allocation": "{value}",
                "target_rules": [],
                "buy_rules": [],
                "apply_to_quantity": 5904452787634176,
                "buy_rules_min_quantity": 7660936294825984
              },
              "rules": [
                {
                  "operator": "{value}",
                  "description": "{value}",
                  "attribute": "{value}",
                  "values": [
                    "{value}"
                  ]
                }
              ]
            }'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/promotions/rule-attribute-options/{rule_type}:
    get:
      operationId: GetPromotionsRuleAttributeOptionsRule_type
      summary: List Rule Attribute Options
      description: Retrieve a list of rule attribute options in a promotion. The rule attribute options can be filtered by fields like FILTER FIELDS. The rule attribute options can also be paginated.
      x-authenticated: true
      parameters:
        - name: rule_type
          in: path
          description: The promotion's rule type.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/promotions/rule-attribute-options/{rule_type}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/promotions/rule-operator-options:
    get:
      operationId: GetPromotionsRuleOperatorOptions
      summary: List Promotions
      description: Retrieve a list of promotions. The promotions can be filtered by fields such as `id`. The promotions can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/promotions/rule-operator-options' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/promotions/rule-value-options/{rule_type}/{rule_attribute_id}:
    get:
      operationId: GetPromotionsRuleValueOptionsRule_typeRule_attribute_id
      summary: 'List '
      description: Retrieve a list of  in a promotion. The  can be filtered by fields like FILTER FIELDS. The  can also be paginated.
      x-authenticated: true
      parameters:
        - name: rule_type
          in: path
          description: The promotion's rule type.
          required: true
          schema:
            type: string
        - name: rule_attribute_id
          in: path
          description: The promotion's rule attribute id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/promotions/rule-value-options/{rule_type}/{rule_attribute_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/promotions/{id}:
    get:
      operationId: GetPromotionsId
      summary: Get a Promotion
      description: Retrieve a promotion by its ID. You can expand the promotion's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The promotion's fields.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/promotions/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "fields": "{value}"
            }'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    post:
      operationId: PostPromotionsId
      summary: Update a Promotion
      description: Update a promotion's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                code:
                  type: string
                  title: code
                  description: The promotion's code.
                is_automatic:
                  type: boolean
                  title: is_automatic
                  description: The promotion's is automatic.
                type:
                  enum:
                    - standard
                    - buyget
                  type: string
                campaign_id:
                  type: string
                  title: campaign_id
                  description: The promotion's campaign id.
                campaign:
                  type: object
                  description: The promotion's campaign.
                  required:
                    - name
                    - campaign_identifier
                    - description
                    - currency
                    - budget
                    - starts_at
                    - ends_at
                    - promotions
                  properties:
                    name:
                      type: string
                      title: name
                      description: The campaign's name.
                    campaign_identifier:
                      type: string
                      title: campaign_identifier
                      description: The campaign's campaign identifier.
                    description:
                      type: string
                      title: description
                      description: The campaign's description.
                    currency:
                      type: string
                      title: currency
                      description: The campaign's currency.
                    budget:
                      type: object
                      description: The campaign's budget.
                      properties:
                        type:
                          enum:
                            - spend
                            - usage
                          type: string
                        limit:
                          type: number
                          title: limit
                          description: The budget's limit.
                      required:
                        - type
                        - limit
                    starts_at:
                      type: string
                      title: starts_at
                      description: The campaign's starts at.
                    ends_at:
                      type: string
                      title: ends_at
                      description: The campaign's ends at.
                    promotions:
                      type: array
                      description: The campaign's promotions.
                      items:
                        type: object
                        description: The promotion's promotions.
                        required:
                          - id
                        properties:
                          id:
                            type: string
                            title: id
                            description: The promotion's ID.
                application_method:
                  type: object
                  description: The promotion's application method.
                  properties:
                    description:
                      type: string
                      title: description
                      description: The application method's description.
                    value:
                      type: string
                      title: value
                      description: The application method's value.
                    max_quantity:
                      type: number
                      title: max_quantity
                      description: The application method's max quantity.
                    type:
                      enum:
                        - fixed
                        - percentage
                      type: string
                    target_type:
                      enum:
                        - order
                        - shipping_methods
                        - items
                      type: string
                    allocation:
                      enum:
                        - each
                        - across
                      type: string
                    target_rules:
                      type: array
                      description: The application method's target rules.
                      items:
                        type: object
                        description: The target rule's target rules.
                        required:
                          - operator
                          - description
                          - attribute
                          - values
                        properties:
                          operator:
                            enum:
                              - gte
                              - lte
                              - gt
                              - lt
                              - eq
                              - ne
                              - in
                            type: string
                          description:
                            type: string
                            title: description
                            description: The target rule's description.
                          attribute:
                            type: string
                            title: attribute
                            description: The target rule's attribute.
                          values:
                            type: array
                            description: The target rule's values.
                            items:
                              type: string
                              title: values
                              description: The value's values.
                    buy_rules:
                      type: array
                      description: The application method's buy rules.
                      items:
                        type: object
                        description: The buy rule's buy rules.
                        required:
                          - operator
                          - description
                          - attribute
                          - values
                        properties:
                          operator:
                            enum:
                              - gte
                              - lte
                              - gt
                              - lt
                              - eq
                              - ne
                              - in
                            type: string
                          description:
                            type: string
                            title: description
                            description: The buy rule's description.
                          attribute:
                            type: string
                            title: attribute
                            description: The buy rule's attribute.
                          values:
                            type: array
                            description: The buy rule's values.
                            items:
                              type: string
                              title: values
                              description: The value's values.
                    apply_to_quantity:
                      type: number
                      title: apply_to_quantity
                      description: The application method's apply to quantity.
                    buy_rules_min_quantity:
                      type: number
                      title: buy_rules_min_quantity
                      description: The application method's buy rules min quantity.
                  required:
                    - description
                    - value
                    - max_quantity
                    - type
                    - target_type
                    - allocation
                    - target_rules
                    - buy_rules
                    - apply_to_quantity
                    - buy_rules_min_quantity
                rules:
                  type: array
                  description: The promotion's rules.
                  items:
                    type: object
                    description: The rule's rules.
                    required:
                      - operator
                      - description
                      - attribute
                      - values
                    properties:
                      operator:
                        enum:
                          - gte
                          - lte
                          - gt
                          - lt
                          - eq
                          - ne
                          - in
                        type: string
                      description:
                        type: string
                        title: description
                        description: The rule's description.
                      attribute:
                        type: string
                        title: attribute
                        description: The rule's attribute.
                      values:
                        type: array
                        description: The rule's values.
                        items:
                          type: string
                          title: values
                          description: The value's values.
              required:
                - code
                - is_automatic
                - type
                - campaign_id
                - campaign
                - application_method
                - rules
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeletePromotionsId
      summary: Delete a Promotion
      description: Delete a promotion.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/promotions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/promotions/{id}/buy-rules/batch:
    post:
      operationId: PostPromotionsIdBuyRulesBatch
      summary: Add Buy Rules to Promotion
      description: Add a list of buy rules to a promotion.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions/{id}/buy-rules/batch' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                create:
                  type: array
                  description: The promotion's create.
                  items:
                    type: object
                    description: The create's details.
                    required:
                      - operator
                      - description
                      - attribute
                      - values
                    properties:
                      operator:
                        type: string
                        enum:
                          - gte
                          - lte
                          - gt
                          - lt
                          - eq
                          - ne
                          - in
                      description:
                        type: string
                        title: description
                        description: The create's description.
                      attribute:
                        type: string
                        title: attribute
                        description: The create's attribute.
                      values:
                        type: array
                        description: The create's values.
                        items:
                          type: string
                          title: values
                          description: The value's values.
                update:
                  type: array
                  description: The promotion's update.
                  items:
                    type: object
                    description: The update's details.
                    required:
                      - id
                      - operator
                      - description
                      - attribute
                      - values
                    properties:
                      id:
                        type: string
                        title: id
                        description: The update's ID.
                      operator:
                        type: string
                        enum:
                          - gte
                          - lte
                          - gt
                          - lt
                          - eq
                          - ne
                          - in
                      description:
                        type: string
                        title: description
                        description: The update's description.
                      attribute:
                        type: string
                        title: attribute
                        description: The update's attribute.
                      values:
                        type: array
                        description: The update's values.
                        items:
                          type: string
                          title: values
                          description: The value's values.
                delete:
                  type: array
                  description: The promotion's delete.
                  items:
                    type: string
                    title: delete
                    description: The delete's details.
  /admin/promotions/{id}/rules/batch:
    post:
      operationId: PostPromotionsIdRulesBatch
      summary: Add Rules to Promotion
      description: Add a list of rules to a promotion.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions/{id}/rules/batch' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                create:
                  type: array
                  description: The promotion's create.
                  items:
                    type: object
                    description: The create's details.
                    required:
                      - operator
                      - description
                      - attribute
                      - values
                    properties:
                      operator:
                        type: string
                        enum:
                          - gte
                          - lte
                          - gt
                          - lt
                          - eq
                          - ne
                          - in
                      description:
                        type: string
                        title: description
                        description: The create's description.
                      attribute:
                        type: string
                        title: attribute
                        description: The create's attribute.
                      values:
                        type: array
                        description: The create's values.
                        items:
                          type: string
                          title: values
                          description: The value's values.
                update:
                  type: array
                  description: The promotion's update.
                  items:
                    type: object
                    description: The update's details.
                    required:
                      - id
                      - operator
                      - description
                      - attribute
                      - values
                    properties:
                      id:
                        type: string
                        title: id
                        description: The update's ID.
                      operator:
                        type: string
                        enum:
                          - gte
                          - lte
                          - gt
                          - lt
                          - eq
                          - ne
                          - in
                      description:
                        type: string
                        title: description
                        description: The update's description.
                      attribute:
                        type: string
                        title: attribute
                        description: The update's attribute.
                      values:
                        type: array
                        description: The update's values.
                        items:
                          type: string
                          title: values
                          description: The value's values.
                delete:
                  type: array
                  description: The promotion's delete.
                  items:
                    type: string
                    title: delete
                    description: The delete's details.
  /admin/promotions/{id}/target-rules/batch:
    post:
      operationId: PostPromotionsIdTargetRulesBatch
      summary: Add Target Rules to Promotion
      description: Add a list of target rules to a promotion.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions/{id}/target-rules/batch' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                create:
                  type: array
                  description: The promotion's create.
                  items:
                    type: object
                    description: The create's details.
                    required:
                      - operator
                      - description
                      - attribute
                      - values
                    properties:
                      operator:
                        type: string
                        enum:
                          - gte
                          - lte
                          - gt
                          - lt
                          - eq
                          - ne
                          - in
                      description:
                        type: string
                        title: description
                        description: The create's description.
                      attribute:
                        type: string
                        title: attribute
                        description: The create's attribute.
                      values:
                        type: array
                        description: The create's values.
                        items:
                          type: string
                          title: values
                          description: The value's values.
                update:
                  type: array
                  description: The promotion's update.
                  items:
                    type: object
                    description: The update's details.
                    required:
                      - id
                      - operator
                      - description
                      - attribute
                      - values
                    properties:
                      id:
                        type: string
                        title: id
                        description: The update's ID.
                      operator:
                        type: string
                        enum:
                          - gte
                          - lte
                          - gt
                          - lt
                          - eq
                          - ne
                          - in
                      description:
                        type: string
                        title: description
                        description: The update's description.
                      attribute:
                        type: string
                        title: attribute
                        description: The update's attribute.
                      values:
                        type: array
                        description: The update's values.
                        items:
                          type: string
                          title: values
                          description: The value's values.
                delete:
                  type: array
                  description: The promotion's delete.
                  items:
                    type: string
                    title: delete
                    description: The delete's details.
  /admin/promotions/{id}/{rule_type}:
    get:
      operationId: GetPromotionsIdRule_type
      summary: 'List '
      description: Retrieve a list of  in a promotion. The  can be filtered by fields like FILTER FIELDS. The  can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
        - name: rule_type
          in: path
          description: The promotion's rule type.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/promotions/{id}/{rule_type}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/regions:
    get:
      operationId: GetRegions
      summary: List Regions
      description: Retrieve a list of regions. The regions can be filtered by fields such as `id`. The regions can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/regions' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostRegions
      summary: Create Region
      description: Create a region.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - currency_code
                - countries
                - automatic_taxes
                - payment_providers
                - metadata
              properties:
                name:
                  type: string
                  title: name
                  description: The region's name.
                currency_code:
                  type: string
                  title: currency_code
                  description: The region's currency code.
                countries:
                  type: array
                  description: The region's countries.
                  items:
                    type: string
                    title: countries
                    description: The country's countries.
                automatic_taxes:
                  type: boolean
                  title: automatic_taxes
                  description: The region's automatic taxes.
                payment_providers:
                  type: array
                  description: The region's payment providers.
                  items:
                    type: string
                    title: payment_providers
                    description: The payment provider's payment providers.
                metadata:
                  type: object
                  description: The region's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/regions' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Charlie",
              "currency_code": "{value}",
              "countries": [
                "{value}"
              ],
              "automatic_taxes": true,
              "payment_providers": [
                "{value}"
              ],
              "metadata": {}
            }'
      tags:
        - Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/regions/{id}:
    get:
      operationId: GetRegionsId
      summary: Get a Region
      description: Retrieve a region by its ID. You can expand the region's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The region's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/regions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The region's fields.
    post:
      operationId: PostRegionsId
      summary: Update a Region
      description: Update a region's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The region's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - currency_code
                - countries
                - automatic_taxes
                - payment_providers
                - metadata
              properties:
                name:
                  type: string
                  title: name
                  description: The region's name.
                currency_code:
                  type: string
                  title: currency_code
                  description: The region's currency code.
                countries:
                  type: array
                  description: The region's countries.
                  items:
                    type: string
                    title: countries
                    description: The country's countries.
                automatic_taxes:
                  type: boolean
                  title: automatic_taxes
                  description: The region's automatic taxes.
                payment_providers:
                  type: array
                  description: The region's payment providers.
                  items:
                    type: string
                    title: payment_providers
                    description: The payment provider's payment providers.
                metadata:
                  type: object
                  description: The region's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/regions/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Alden",
              "currency_code": "{value}",
              "countries": [
                "{value}"
              ],
              "automatic_taxes": false,
              "payment_providers": [
                "{value}"
              ],
              "metadata": {}
            }'
      tags:
        - Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteRegionsId
      summary: Delete a Region
      description: Delete a region.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The region's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/regions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/reservations:
    get:
      operationId: GetReservations
      summary: List Reservations
      description: Retrieve a list of reservations. The reservations can be filtered by fields such as `id`. The reservations can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - limit
                - fields
                - order
                - offset
                - location_id
                - inventory_item_id
                - line_item_id
                - created_by
                - description
                - quantity
                - created_at
                - updated_at
                - deleted_at
              properties:
                limit:
                  type: number
                  title: limit
                  description: The reservation's limit.
                fields:
                  type: string
                  title: fields
                  description: The reservation's fields.
                order:
                  type: string
                  title: order
                  description: The reservation's order.
                offset:
                  type: number
                  title: offset
                  description: The reservation's offset.
                location_id:
                  oneOf:
                    - type: string
                      title: location_id
                      description: The reservation's location id.
                    - type: array
                      description: The reservation's location id.
                      items:
                        type: string
                        title: location_id
                        description: The location id's details.
                inventory_item_id:
                  oneOf:
                    - type: string
                      title: inventory_item_id
                      description: The reservation's inventory item id.
                    - type: array
                      description: The reservation's inventory item id.
                      items:
                        type: string
                        title: inventory_item_id
                        description: The inventory item id's details.
                line_item_id:
                  oneOf:
                    - type: string
                      title: line_item_id
                      description: The reservation's line item id.
                    - type: array
                      description: The reservation's line item id.
                      items:
                        type: string
                        title: line_item_id
                        description: The line item id's details.
                created_by:
                  oneOf:
                    - type: string
                      title: created_by
                      description: The reservation's created by.
                    - type: array
                      description: The reservation's created by.
                      items:
                        type: string
                        title: created_by
                        description: The created by's details.
                description:
                  oneOf:
                    - type: string
                      title: description
                      description: The reservation's description.
                    - type: object
                      description: The reservation's description.
                      required:
                        - $eq
                        - $ne
                        - $in
                        - $nin
                        - $like
                        - $ilike
                        - $re
                        - $contains
                        - $gt
                        - $gte
                        - $lt
                        - $lte
                      properties:
                        $eq: {}
                        $ne: {}
                        $in: {}
                        $nin: {}
                        $like: {}
                        $ilike: {}
                        $re: {}
                        $contains: {}
                        $gt: {}
                        $gte: {}
                        $lt: {}
                        $lte: {}
                quantity:
                  type: object
                  description: The reservation's quantity.
                  required:
                    - $eq
                    - $ne
                    - $in
                    - $nin
                    - $like
                    - $ilike
                    - $re
                    - $contains
                    - $gt
                    - $gte
                    - $lt
                    - $lte
                  properties:
                    $eq: {}
                    $ne: {}
                    $in: {}
                    $nin: {}
                    $like: {}
                    $ilike: {}
                    $re: {}
                    $contains: {}
                    $gt: {}
                    $gte: {}
                    $lt: {}
                    $lte: {}
                created_at:
                  type: object
                  description: The reservation's created at.
                  required:
                    - $eq
                    - $ne
                    - $in
                    - $nin
                    - $like
                    - $ilike
                    - $re
                    - $contains
                    - $gt
                    - $gte
                    - $lt
                    - $lte
                  properties:
                    $eq: {}
                    $ne: {}
                    $in: {}
                    $nin: {}
                    $like: {}
                    $ilike: {}
                    $re: {}
                    $contains: {}
                    $gt: {}
                    $gte: {}
                    $lt: {}
                    $lte: {}
                updated_at:
                  type: object
                  description: The reservation's updated at.
                  required:
                    - $eq
                    - $ne
                    - $in
                    - $nin
                    - $like
                    - $ilike
                    - $re
                    - $contains
                    - $gt
                    - $gte
                    - $lt
                    - $lte
                  properties:
                    $eq: {}
                    $ne: {}
                    $in: {}
                    $nin: {}
                    $like: {}
                    $ilike: {}
                    $re: {}
                    $contains: {}
                    $gt: {}
                    $gte: {}
                    $lt: {}
                    $lte: {}
                deleted_at:
                  type: object
                  description: The reservation's deleted at.
                  required:
                    - $eq
                    - $ne
                    - $in
                    - $nin
                    - $like
                    - $ilike
                    - $re
                    - $contains
                    - $gt
                    - $gte
                    - $lt
                    - $lte
                  properties:
                    $eq: {}
                    $ne: {}
                    $in: {}
                    $nin: {}
                    $like: {}
                    $ilike: {}
                    $re: {}
                    $contains: {}
                    $gt: {}
                    $gte: {}
                    $lt: {}
                    $lte: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/reservations' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "limit": 7964169955442688,
              "fields": "{value}",
              "order": "{value}",
              "offset": 3052067430072320,
              "quantity": {},
              "created_at": {},
              "updated_at": {},
              "deleted_at": {}
            }'
      tags:
        - Reservations
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    post:
      operationId: PostReservations
      summary: Create Reservation
      description: Create a reservation.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - line_item_id
                - location_id
                - inventory_item_id
                - quantity
                - description
                - metadata
              properties:
                line_item_id:
                  type: string
                  title: line_item_id
                  description: The reservation's line item id.
                location_id:
                  type: string
                  title: location_id
                  description: The reservation's location id.
                inventory_item_id:
                  type: string
                  title: inventory_item_id
                  description: The reservation's inventory item id.
                quantity:
                  type: number
                  title: quantity
                  description: The reservation's quantity.
                description:
                  type: string
                  title: description
                  description: The reservation's description.
                metadata:
                  type: object
                  description: The reservation's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/reservations' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "line_item_id": "{value}",
              "location_id": "{value}",
              "inventory_item_id": "{value}",
              "quantity": 3939752942239744,
              "description": "{value}",
              "metadata": {}
            }'
      tags:
        - Reservations
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/reservations/{id}:
    get:
      operationId: GetReservationsId
      summary: Get a Reservation
      description: Retrieve a reservation by its ID. You can expand the reservation's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The reservation's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The reservation's fields.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/reservations/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "fields": "{value}"
            }'
      tags:
        - Reservations
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    post:
      operationId: PostReservationsId
      summary: Update a Reservation
      description: Update a reservation's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The reservation's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - location_id
                - quantity
                - description
                - metadata
              properties:
                location_id:
                  type: string
                  title: location_id
                  description: The reservation's location id.
                quantity:
                  type: number
                  title: quantity
                  description: The reservation's quantity.
                description:
                  type: string
                  title: description
                  description: The reservation's description.
                metadata:
                  type: object
                  description: The reservation's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/reservations/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "location_id": "{value}",
              "quantity": 5781024600489984,
              "description": "{value}",
              "metadata": {}
            }'
      tags:
        - Reservations
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteReservationsId
      summary: Delete a Reservation
      description: Delete a reservation.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The reservation's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/reservations/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Reservations
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/sales-channels:
    get:
      operationId: GetSalesChannels
      summary: List Sales Channels
      description: Retrieve a list of sales channels. The sales channels can be filtered by fields such as `id`. The sales channels can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/sales-channels' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Sales Channels
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostSalesChannels
      summary: Create Sales Channel
      description: Create a sales channel.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/sales-channels' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Sales Channels
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - is_disabled
                - metadata
              properties:
                name:
                  type: string
                  title: name
                  description: The sales channel's name.
                description:
                  type: string
                  title: description
                  description: The sales channel's description.
                is_disabled:
                  type: boolean
                  title: is_disabled
                  description: The sales channel's is disabled.
                metadata:
                  type: object
                  description: The sales channel's metadata.
                  properties: {}
  /admin/sales-channels/{id}:
    get:
      operationId: GetSalesChannelsId
      summary: Get a Sales Channel
      description: Retrieve a sales channel by its ID. You can expand the sales channel's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The sales channel's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/sales-channels/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Sales Channels
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The sales channel's fields.
    post:
      operationId: PostSalesChannelsId
      summary: Update a Sales Channel
      description: Update a sales channel's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The sales channel's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/sales-channels/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Sales Channels
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - is_disabled
                - metadata
              properties:
                name:
                  type: string
                  title: name
                  description: The sales channel's name.
                description:
                  type: string
                  title: description
                  description: The sales channel's description.
                is_disabled:
                  type: boolean
                  title: is_disabled
                  description: The sales channel's is disabled.
                metadata:
                  type: object
                  description: The sales channel's metadata.
                  properties: {}
    delete:
      operationId: DeleteSalesChannelsId
      summary: Delete a Sales Channel
      description: Delete a sales channel.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The sales channel's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/sales-channels/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Sales Channels
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/sales-channels/{id}/products:
    post:
      operationId: PostSalesChannelsIdProducts
      summary: Add Products to Sales Channel
      description: Add a list of products to a sales channel.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The sales channel's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                add:
                  type: array
                  description: The sales channel's add.
                  items:
                    type: string
                    title: add
                    description: The add's details.
                remove:
                  type: array
                  description: The sales channel's remove.
                  items:
                    type: string
                    title: remove
                    description: The remove's details.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/sales-channels/{id}/products' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Sales Channels
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/shipping-options:
    get:
      operationId: GetShippingOptions
      summary: List Shipping Options
      description: Retrieve a list of shipping options. The shipping options can be filtered by fields such as `id`. The shipping options can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - fields
                - offset
                - limit
                - order
              properties:
                fields:
                  type: string
                  title: fields
                  description: The shipping option's fields.
                offset:
                  type: number
                  title: offset
                  description: The shipping option's offset.
                limit:
                  type: number
                  title: limit
                  description: The shipping option's limit.
                order:
                  type: string
                  title: order
                  description: The shipping option's order.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/shipping-options' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "fields": "{value}",
              "offset": 8788876090933248,
              "limit": 2996103177830400,
              "order": "{value}"
            }'
      tags:
        - Shipping Options
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminShippingOptionListResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    post:
      operationId: PostShippingOptions
      summary: Create Shipping Option
      description: Create a shipping option.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - service_zone_id
                - shipping_profile_id
                - data
                - price_type
                - provider_id
                - type
                - prices
                - rules
              properties:
                name:
                  type: string
                  title: name
                  description: The shipping option's name.
                service_zone_id:
                  type: string
                  title: service_zone_id
                  description: The shipping option's service zone id.
                shipping_profile_id:
                  type: string
                  title: shipping_profile_id
                  description: The shipping option's shipping profile id.
                data:
                  type: object
                  description: The shipping option's data.
                  properties: {}
                price_type:
                  type: string
                provider_id:
                  type: string
                  title: provider_id
                  description: The shipping option's provider id.
                type:
                  type: object
                  description: The shipping option's type.
                  required:
                    - label
                    - description
                    - code
                  properties:
                    label:
                      type: string
                      title: label
                      description: The type's label.
                    description:
                      type: string
                      title: description
                      description: The type's description.
                    code:
                      type: string
                      title: code
                      description: The type's code.
                prices:
                  type: array
                  description: The shipping option's prices.
                  items:
                    oneOf:
                      - type: object
                        description: The price's prices.
                        required:
                          - currency_code
                          - amount
                        properties:
                          currency_code:
                            type: string
                            title: currency_code
                            description: The price's currency code.
                          amount:
                            type: number
                            title: amount
                            description: The price's amount.
                      - type: object
                        description: The price's prices.
                        required:
                          - region_id
                          - amount
                        properties:
                          region_id:
                            type: string
                            title: region_id
                            description: The price's region id.
                          amount:
                            type: number
                            title: amount
                            description: The price's amount.
                rules:
                  type: array
                  description: The shipping option's rules.
                  items:
                    type: object
                    description: The rule's rules.
                    required:
                      - operator
                      - attribute
                      - value
                    properties:
                      operator:
                        type: string
                      attribute:
                        type: string
                        title: attribute
                        description: The rule's attribute.
                      value:
                        oneOf:
                          - type: string
                            title: value
                            description: The rule's value.
                          - type: array
                            description: The rule's value.
                            items:
                              type: string
                              title: value
                              description: The value's details.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/shipping-options' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Caitlyn",
              "service_zone_id": "{value}",
              "shipping_profile_id": "{value}",
              "data": {},
              "provider_id": "{value}",
              "type": {
                "label": "{value}",
                "description": "{value}",
                "code": "{value}"
              },
              "prices": [],
              "rules": [
                {
                  "attribute": "{value}"
                }
              ]
            }'
      tags:
        - Shipping Options
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminShippingOptionRetrieveResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/shipping-options/{id}:
    post:
      operationId: PostShippingOptionsId
      summary: Update a Shipping Option
      description: Update a shipping option's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The shipping option's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - data
                - price_type
                - provider_id
                - shipping_profile_id
                - type
                - prices
                - rules
              properties:
                name:
                  type: string
                  title: name
                  description: The shipping option's name.
                data:
                  type: object
                  description: The shipping option's data.
                  properties: {}
                price_type:
                  type: string
                provider_id:
                  type: string
                  title: provider_id
                  description: The shipping option's provider id.
                type:
                  type: object
                  description: The shipping option's type.
                  required:
                    - label
                    - description
                    - code
                  properties:
                    label:
                      type: string
                      title: label
                      description: The type's label.
                    description:
                      type: string
                      title: description
                      description: The type's description.
                    code:
                      type: string
                      title: code
                      description: The type's code.
                prices:
                  type: array
                  description: The shipping option's prices.
                  items:
                    oneOf:
                      - type: object
                        description: The price's prices.
                        required:
                          - id
                          - currency_code
                          - amount
                        properties:
                          id:
                            type: string
                            title: id
                            description: The price's ID.
                          currency_code:
                            type: string
                            title: currency_code
                            description: The price's currency code.
                          amount:
                            type: number
                            title: amount
                            description: The price's amount.
                      - type: object
                        description: The price's prices.
                        required:
                          - id
                          - region_id
                          - amount
                        properties:
                          id:
                            type: string
                            title: id
                            description: The price's ID.
                          region_id:
                            type: string
                            title: region_id
                            description: The price's region id.
                          amount:
                            type: number
                            title: amount
                            description: The price's amount.
                rules:
                  type: array
                  description: The shipping option's rules.
                  items:
                    oneOf:
                      - type: object
                        description: The rule's rules.
                        required:
                          - operator
                          - attribute
                          - value
                        properties:
                          operator: {}
                          attribute:
                            type: string
                            title: attribute
                            description: The rule's attribute.
                          value:
                            type: string
                            title: value
                            description: The rule's value.
                      - type: object
                        description: The rule's rules.
                        required:
                          - id
                          - operator
                          - attribute
                          - value
                        properties:
                          id:
                            type: string
                            title: id
                            description: The rule's ID.
                          operator: {}
                          attribute:
                            type: string
                            title: attribute
                            description: The rule's attribute.
                          value:
                            type: string
                            title: value
                            description: The rule's value.
                shipping_profile_id:
                  type: string
                  title: shipping_profile_id
                  description: The shipping option's shipping profile id.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/shipping-options/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Delta",
              "data": {},
              "provider_id": "{value}",
              "type": {
                "label": "{value}",
                "description": "{value}",
                "code": "{value}"
              },
              "prices": [],
              "rules": []
            }'
      tags:
        - Shipping Options
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminShippingOptionRetrieveResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteShippingOptionsId
      summary: Delete a Shipping Option
      description: Delete a shipping option.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The shipping option's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/shipping-options/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Shipping Options
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminShippingOptionDeleteResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/shipping-options/{id}/rules/batch:
    post:
      operationId: PostShippingOptionsIdRulesBatch
      summary: Add Rules to Shipping Option
      description: Add a list of rules to a shipping option.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The shipping option's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/shipping-options/{id}/rules/batch' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Shipping Options
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                create:
                  type: array
                  description: The shipping option's create.
                  items:
                    type: object
                    description: The create's details.
                    required:
                      - operator
                      - attribute
                      - value
                    properties:
                      operator:
                        type: string
                        enum:
                          - in
                          - eq
                          - ne
                          - gt
                          - gte
                          - lt
                          - lte
                          - nin
                      attribute:
                        type: string
                        title: attribute
                        description: The create's attribute.
                      value:
                        oneOf:
                          - type: string
                            title: value
                            description: The create's value.
                          - type: array
                            description: The create's value.
                            items:
                              type: string
                              title: value
                              description: The value's details.
                update:
                  type: array
                  description: The shipping option's update.
                  items:
                    type: object
                    description: The update's details.
                    required:
                      - id
                      - operator
                      - attribute
                      - value
                    properties:
                      id:
                        type: string
                        title: id
                        description: The update's ID.
                      operator:
                        type: string
                        enum:
                          - in
                          - eq
                          - ne
                          - gt
                          - gte
                          - lt
                          - lte
                          - nin
                      attribute:
                        type: string
                        title: attribute
                        description: The update's attribute.
                      value:
                        oneOf:
                          - type: string
                            title: value
                            description: The update's value.
                          - type: array
                            description: The update's value.
                            items:
                              type: string
                              title: value
                              description: The value's details.
                delete:
                  type: array
                  description: The shipping option's delete.
                  items:
                    type: string
                    title: delete
                    description: The delete's details.
  /admin/shipping-profiles:
    get:
      operationId: GetShippingProfiles
      summary: List Shipping Profiles
      description: Retrieve a list of shipping profiles. The shipping profiles can be filtered by fields such as `id`. The shipping profiles can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/shipping-profiles' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Shipping Profiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminShippingProfilesResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostShippingProfiles
      summary: Create Shipping Profile
      description: Create a shipping profile.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - type
                - metadata
              properties:
                name:
                  type: string
                  title: name
                  description: The shipping profile's name.
                type:
                  type: string
                  title: type
                  description: The shipping profile's type.
                metadata:
                  type: object
                  description: The shipping profile's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/shipping-profiles' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Ford",
              "type": "{value}",
              "metadata": {}
            }'
      tags:
        - Shipping Profiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminShippingProfileResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/shipping-profiles/{id}:
    get:
      operationId: GetShippingProfilesId
      summary: Get a Shipping Profile
      description: Retrieve a shipping profile by its ID. You can expand the shipping profile's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The shipping profile's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The shipping profile's fields.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/shipping-profiles/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "fields": "{value}"
            }'
      tags:
        - Shipping Profiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminShippingProfileResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteShippingProfilesId
      summary: Delete a Shipping Profile
      description: Delete a shipping profile.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The shipping profile's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/shipping-profiles/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Shipping Profiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminShippingProfileDeleteResponse'
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/stock-locations:
    get:
      operationId: GetStockLocations
      summary: List Stock Locations
      description: Retrieve a list of stock locations. The stock locations can be filtered by fields such as `id`. The stock locations can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/stock-locations' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Stock Locations
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostStockLocations
      summary: Create Stock Location
      description: Create a stock location.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - address
                - address_id
                - metadata
              properties:
                name:
                  type: string
                  title: name
                  description: The stock location's name.
                address:
                  type: object
                  description: The stock location's address.
                  required:
                    - address_1
                    - address_2
                    - company
                    - city
                    - country_code
                    - phone
                    - postal_code
                    - province
                  properties:
                    address_1:
                      type: string
                      title: address_1
                      description: The address's address 1.
                    address_2:
                      type: string
                      title: address_2
                      description: The address's address 2.
                    company:
                      type: string
                      title: company
                      description: The address's company.
                    city:
                      type: string
                      title: city
                      description: The address's city.
                    country_code:
                      type: string
                      title: country_code
                      description: The address's country code.
                    phone:
                      type: string
                      title: phone
                      description: The address's phone.
                    postal_code:
                      type: string
                      title: postal_code
                      description: The address's postal code.
                    province:
                      type: string
                      title: province
                      description: The address's province.
                address_id:
                  type: string
                  title: address_id
                  description: The stock location's address id.
                metadata:
                  type: object
                  description: The stock location's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/stock-locations' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Dorthy"
            }'
      tags:
        - Stock Locations
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/stock-locations/{id}:
    get:
      operationId: GetStockLocationsId
      summary: Get a Stock Location
      description: Retrieve a stock location by its ID. You can expand the stock location's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The stock location's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/stock-locations/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Stock Locations
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The stock location's fields.
    post:
      operationId: PostStockLocationsId
      summary: Update a Stock Location
      description: Update a stock location's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The stock location's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - address
                - address_id
                - metadata
              properties:
                name:
                  type: string
                  title: name
                  description: The stock location's name.
                address:
                  type: object
                  description: The stock location's address.
                  required:
                    - address_1
                    - address_2
                    - company
                    - city
                    - country_code
                    - phone
                    - postal_code
                    - province
                  properties:
                    address_1:
                      type: string
                      title: address_1
                      description: The address's address 1.
                    address_2:
                      type: string
                      title: address_2
                      description: The address's address 2.
                    company:
                      type: string
                      title: company
                      description: The address's company.
                    city:
                      type: string
                      title: city
                      description: The address's city.
                    country_code:
                      type: string
                      title: country_code
                      description: The address's country code.
                    phone:
                      type: string
                      title: phone
                      description: The address's phone.
                    postal_code:
                      type: string
                      title: postal_code
                      description: The address's postal code.
                    province:
                      type: string
                      title: province
                      description: The address's province.
                address_id:
                  type: string
                  title: address_id
                  description: The stock location's address id.
                metadata:
                  type: object
                  description: The stock location's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/stock-locations/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Gustave",
              "address": {
                "address_1": "{value}",
                "address_2": "{value}",
                "company": "{value}",
                "city": "{value}",
                "country_code": "{value}",
                "phone": "{value}",
                "postal_code": "{value}",
                "province": "{value}"
              },
              "address_id": "{value}",
              "metadata": {}
            }'
      tags:
        - Stock Locations
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteStockLocationsId
      summary: Delete a Stock Location
      description: Delete a stock location.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The stock location's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/stock-locations/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Stock Locations
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/stock-locations/{id}/fulfillment-sets:
    post:
      operationId: PostStockLocationsIdFulfillmentSets
      summary: Add Fulfillment Sets to Stock Location
      description: Add a list of fulfillment sets to a stock location.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The stock location's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - name
                - type
              properties:
                name:
                  type: string
                  title: name
                  description: The stock location's name.
                type:
                  type: string
                  title: type
                  description: The stock location's type.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/stock-locations/{id}/fulfillment-sets' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Jeremie",
              "type": "{value}"
            }'
      tags:
        - Stock Locations
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/stock-locations/{id}/sales-channels:
    post:
      operationId: PostStockLocationsIdSalesChannels
      summary: Add Sales Channels to Stock Location
      description: Add a list of sales channels to a stock location.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The stock location's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                add:
                  type: array
                  description: The stock location's add.
                  items:
                    type: string
                    title: add
                    description: The add's details.
                remove:
                  type: array
                  description: The stock location's remove.
                  items:
                    type: string
                    title: remove
                    description: The remove's details.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/stock-locations/{id}/sales-channels' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Stock Locations
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/stores:
    get:
      operationId: GetStores
      summary: List Stores
      description: Retrieve a list of stores. The stores can be filtered by fields such as `id`. The stores can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/stores' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Stores
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/stores/{id}:
    get:
      operationId: GetStoresId
      summary: Get a Store
      description: Retrieve a store by its ID. You can expand the store's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The store's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/stores/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Stores
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The store's fields.
    post:
      operationId: PostStoresId
      summary: Update a Store
      description: Update a store's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The store's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/stores/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Stores
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - supported_currency_codes
                - default_currency_code
                - default_sales_channel_id
                - default_region_id
                - default_location_id
                - metadata
              properties:
                name:
                  type: string
                  title: name
                  description: The store's name.
                supported_currency_codes:
                  type: array
                  description: The store's supported currency codes.
                  items:
                    type: string
                    title: supported_currency_codes
                    description: The supported currency code's supported currency codes.
                default_currency_code:
                  type: string
                  title: default_currency_code
                  description: The store's default currency code.
                default_sales_channel_id:
                  type: string
                  title: default_sales_channel_id
                  description: The store's default sales channel id.
                default_region_id:
                  type: string
                  title: default_region_id
                  description: The store's default region id.
                default_location_id:
                  type: string
                  title: default_location_id
                  description: The store's default location id.
                metadata:
                  type: object
                  description: The store's metadata.
                  properties: {}
  /admin/tax-rates:
    get:
      operationId: GetTaxRates
      summary: List Tax Rates
      description: Retrieve a list of tax rates. The tax rates can be filtered by fields such as `id`. The tax rates can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/tax-rates' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostTaxRates
      summary: Create Tax Rate
      description: Create a tax rate.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - rate
                - code
                - rules
                - name
                - is_default
                - is_combinable
                - tax_region_id
                - metadata
              properties:
                rate:
                  type: number
                  title: rate
                  description: The tax rate's rate.
                code:
                  type: string
                  title: code
                  description: The tax rate's code.
                rules:
                  type: array
                  description: The tax rate's rules.
                  items:
                    type: object
                    description: The rule's rules.
                    required:
                      - reference
                      - reference_id
                    properties:
                      reference:
                        type: string
                        title: reference
                        description: The rule's reference.
                      reference_id:
                        type: string
                        title: reference_id
                        description: The rule's reference id.
                name:
                  type: string
                  title: name
                  description: The tax rate's name.
                is_default:
                  type: boolean
                  title: is_default
                  description: The tax rate's is default.
                is_combinable:
                  type: boolean
                  title: is_combinable
                  description: The tax rate's is combinable.
                tax_region_id:
                  type: string
                  title: tax_region_id
                  description: The tax rate's tax region id.
                metadata:
                  type: object
                  description: The tax rate's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/tax-rates' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Myrl",
              "tax_region_id": "{value}"
            }'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/tax-rates/{id}:
    get:
      operationId: GetTaxRatesId
      summary: Get a Tax Rate
      description: Retrieve a tax rate by its ID. You can expand the tax rate's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax rate's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/tax-rates/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The tax rate's fields.
    post:
      operationId: PostTaxRatesId
      summary: Update a Tax Rate
      description: Update a tax rate's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax rate's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                code:
                  type: string
                  title: code
                  description: The tax rate's code.
                name:
                  type: string
                  title: name
                  description: The tax rate's name.
                rate:
                  type: number
                  title: rate
                  description: The tax rate's rate.
                rules:
                  type: array
                  description: The tax rate's rules.
                  items:
                    type: object
                    description: The rule's rules.
                    required:
                      - reference
                      - reference_id
                    properties:
                      reference:
                        type: string
                        title: reference
                        description: The rule's reference.
                      reference_id:
                        type: string
                        title: reference_id
                        description: The rule's reference id.
                is_default:
                  type: boolean
                  title: is_default
                  description: The tax rate's is default.
                is_combinable:
                  type: boolean
                  title: is_combinable
                  description: The tax rate's is combinable.
                metadata:
                  type: object
                  description: The tax rate's metadata.
                  properties: {}
              required:
                - rate
                - code
                - rules
                - name
                - is_default
                - is_combinable
                - metadata
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/tax-rates/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteTaxRatesId
      summary: Delete a Tax Rate
      description: Delete a tax rate.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax rate's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/tax-rates/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/tax-rates/{id}/rules:
    post:
      operationId: PostTaxRatesIdRules
      summary: Add Rules to Tax Rate
      description: Add a list of rules to a tax rate.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax rate's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - reference
                - reference_id
              properties:
                reference:
                  type: string
                  title: reference
                  description: The tax rate's reference.
                reference_id:
                  type: string
                  title: reference_id
                  description: The tax rate's reference id.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/tax-rates/{id}/rules' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "reference": "{value}",
              "reference_id": "{value}"
            }'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/tax-rates/{id}/rules/{rule_id}:
    delete:
      operationId: DeleteTaxRatesIdRulesRule_id
      summary: Remove Rules from Tax Rate
      description: Remove a list of rules from a tax rate. This doesn't delete the Rule, only the association between the Rule and the tax rate.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax rate's ID.
          required: true
          schema:
            type: string
        - name: rule_id
          in: path
          description: The tax rate's rule id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/tax-rates/{id}/rules/{rule_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/tax-regions:
    get:
      operationId: GetTaxRegions
      summary: List Tax Regions
      description: Retrieve a list of tax regions. The tax regions can be filtered by fields such as `id`. The tax regions can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/tax-regions' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostTaxRegions
      summary: Create Tax Region
      description: Create a tax region.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - country_code
                - province_code
                - parent_id
                - default_tax_rate
                - metadata
              properties:
                country_code:
                  type: string
                  title: country_code
                  description: The tax region's country code.
                province_code:
                  type: string
                  title: province_code
                  description: The tax region's province code.
                parent_id:
                  type: string
                  title: parent_id
                  description: The tax region's parent id.
                default_tax_rate:
                  type: object
                  description: The tax region's default tax rate.
                  required:
                    - rate
                    - code
                    - name
                    - is_combinable
                    - metadata
                  properties:
                    rate:
                      type: number
                      title: rate
                      description: The default tax rate's rate.
                    code:
                      type: string
                      title: code
                      description: The default tax rate's code.
                    name:
                      type: string
                      title: name
                      description: The default tax rate's name.
                    metadata:
                      type: object
                      description: The default tax rate's metadata.
                      properties: {}
                    is_combinable:
                      type: string
                      enum:
                        - 'true'
                        - 'false'
                metadata:
                  type: object
                  description: The tax region's metadata.
                  properties: {}
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/tax-regions' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "country_code": "{value}"
            }'
      tags:
        - Tax Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/tax-regions/{id}:
    get:
      operationId: GetTaxRegionsId
      summary: Get a Tax Region
      description: Retrieve a tax region by its ID. You can expand the tax region's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax region's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/tax-regions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteTaxRegionsId
      summary: Delete a Tax Region
      description: Delete a tax region.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax region's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/tax-regions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/uploads:
    post:
      operationId: PostUploads
      summary: Create Upload
      description: Create a upload.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/uploads' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Uploads
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProduct'
  /admin/uploads/{id}:
    get:
      operationId: GetUploadsId
      summary: Get a Upload
      description: Retrieve a upload by its ID. You can expand the upload's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The upload's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/uploads/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Uploads
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteUploadsId
      summary: Delete a Upload
      description: Delete a upload.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The upload's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/uploads/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Uploads
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/users:
    get:
      operationId: GetUsers
      summary: List Users
      description: Retrieve a list of users. The users can be filtered by fields such as `id`. The users can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/users' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Users
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostUsers
      summary: Create User
      description: Create a user.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/users' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "email": "Moises11@hotmail.com"
            }'
      tags:
        - Users
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/users/me:
    get:
      operationId: GetUsersMe
      summary: List Users
      description: Retrieve a list of users. The users can be filtered by fields such as `id`. The users can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/users/me' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Users
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/users/{id}:
    get:
      operationId: GetUsersId
      summary: Get a User
      description: Retrieve a user by its ID. You can expand the user's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The user's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/users/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Users
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostUsersId
      summary: Update a User
      description: Update a user's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The user's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - first_name
                - last_name
                - avatar_url
              properties:
                first_name:
                  type: string
                  title: first_name
                  description: The user's first name.
                last_name:
                  type: string
                  title: last_name
                  description: The user's last name.
                avatar_url:
                  type: string
                  title: avatar_url
                  description: The user's avatar url.
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/users/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "avatar_url": "{value}"
            }'
      tags:
        - Users
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteUsersId
      summary: Delete a User
      description: Delete a user.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The user's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/users/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Users
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/workflows-executions:
    get:
      operationId: GetWorkflowsExecutions
      summary: List Workflows Executions
      description: Retrieve a list of workflows executions. The workflows executions can be filtered by fields such as `id`. The workflows executions can also be sorted or paginated.
      x-authenticated: true
      parameters:
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/workflows-executions' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - limit
                - fields
                - order
                - offset
                - transaction_id
                - workflow_id
              properties:
                limit:
                  type: number
                  title: limit
                  description: The workflows execution's limit.
                fields:
                  type: string
                  title: fields
                  description: The workflows execution's fields.
                order:
                  type: string
                  title: order
                  description: The workflows execution's order.
                offset:
                  type: number
                  title: offset
                  description: The workflows execution's offset.
                transaction_id:
                  oneOf:
                    - type: string
                      title: transaction_id
                      description: The workflows execution's transaction id.
                    - type: array
                      description: The workflows execution's transaction id.
                      items:
                        type: string
                        title: transaction_id
                        description: The transaction id's details.
                workflow_id:
                  oneOf:
                    - type: string
                      title: workflow_id
                      description: The workflows execution's workflow id.
                    - type: array
                      description: The workflows execution's workflow id.
                      items:
                        type: string
                        title: workflow_id
                        description: The workflow id's details.
  /admin/workflows-executions/{id}:
    get:
      operationId: GetWorkflowsExecutionsId
      summary: Get a Workflows Execution
      description: Retrieve a workflows execution by its ID. You can expand the workflows execution's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The workflows execution's ID.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/workflows-executions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The workflows execution's fields.
  /admin/workflows-executions/{workflow_id}/run:
    post:
      operationId: PostWorkflowsExecutionsWorkflow_idRun
      summary: Add Runs to Workflows Execution
      description: Add a list of runs to a workflows execution.
      x-authenticated: true
      parameters:
        - name: workflow_id
          in: path
          description: The workflows execution's workflow id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              properties:
                input: {}
                transaction_id:
                  type: string
                  title: transaction_id
                  description: The workflows execution's transaction id.
              required:
                - input
                - transaction_id
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/workflows-executions/{workflow_id}/run' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/workflows-executions/{workflow_id}/steps/failure:
    post:
      operationId: PostWorkflowsExecutionsWorkflow_idStepsFailure
      summary: Add Failures to Workflows Execution
      description: Add a list of failures to a workflows execution.
      x-authenticated: true
      parameters:
        - name: workflow_id
          in: path
          description: The workflows execution's workflow id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - transaction_id
                - step_id
                - response
                - compensate_input
                - action
              properties:
                transaction_id:
                  type: string
                  title: transaction_id
                  description: The workflows execution's transaction id.
                step_id:
                  type: string
                  title: step_id
                  description: The workflows execution's step id.
                response: {}
                compensate_input: {}
                action:
                  enum:
                    - invoke
                    - compensate
                  type: string
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/workflows-executions/{workflow_id}/steps/failure' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "transaction_id": "{value}",
              "step_id": "{value}"
            }'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/workflows-executions/{workflow_id}/steps/success:
    post:
      operationId: PostWorkflowsExecutionsWorkflow_idStepsSuccess
      summary: Add Successes to Workflows Execution
      description: Add a list of successes to a workflows execution.
      x-authenticated: true
      parameters:
        - name: workflow_id
          in: path
          description: The workflows execution's workflow id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: SUMMARY
              required:
                - transaction_id
                - step_id
                - response
                - compensate_input
                - action
              properties:
                transaction_id:
                  type: string
                  title: transaction_id
                  description: The workflows execution's transaction id.
                step_id:
                  type: string
                  title: step_id
                  description: The workflows execution's step id.
                response: {}
                compensate_input: {}
                action:
                  enum:
                    - invoke
                    - compensate
                  type: string
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/workflows-executions/{workflow_id}/steps/success' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "transaction_id": "{value}",
              "step_id": "{value}"
            }'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/workflows-executions/{workflow_id}/subscribe:
    get:
      operationId: GetWorkflowsExecutionsWorkflow_idSubscribe
      summary: List Subscribes
      description: Retrieve a list of subscribes in a workflows execution. The subscribes can be filtered by fields like FILTER FIELDS. The subscribes can also be paginated.
      x-authenticated: true
      parameters:
        - name: workflow_id
          in: path
          description: The workflows execution's workflow id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/workflows-executions/{workflow_id}/subscribe' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/workflows-executions/{workflow_id}/{transaction_id}:
    get:
      operationId: GetWorkflowsExecutionsWorkflow_idTransaction_id
      summary: 'List '
      description: Retrieve a list of  in a workflows execution. The  can be filtered by fields like FILTER FIELDS. The  can also be paginated.
      x-authenticated: true
      parameters:
        - name: workflow_id
          in: path
          description: The workflows execution's workflow id.
          required: true
          schema:
            type: string
        - name: transaction_id
          in: path
          description: The workflows execution's transaction id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/workflows-executions/{workflow_id}/{transaction_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - fields
              properties:
                fields:
                  type: string
                  title: fields
                  description: The workflows execution's fields.
  /admin/workflows-executions/{workflow_id}/{transaction_id}/{step_id}/subscribe:
    get:
      operationId: GetWorkflowsExecutionsWorkflow_idTransaction_idStep_idSubscribe
      summary: List Subscribes
      description: Retrieve a list of subscribes in a workflows execution. The subscribes can be filtered by fields like FILTER FIELDS. The subscribes can also be paginated.
      x-authenticated: true
      parameters:
        - name: workflow_id
          in: path
          description: The workflows execution's workflow id.
          required: true
          schema:
            type: string
        - name: transaction_id
          in: path
          description: The workflows execution's transaction id.
          required: true
          schema:
            type: string
        - name: step_id
          in: path
          description: The workflows execution's step id.
          required: true
          schema:
            type: string
        - name: expand
          in: query
          description: Comma-separated relations that should be expanded in the returned data.
          required: false
          schema:
            type: string
            title: expand
            description: Comma-separated relations that should be expanded in the returned data.
        - name: fields
          in: query
          description: Comma-separated fields that should be included in the returned data.
          required: false
          schema:
            type: string
            title: fields
            description: Comma-separated fields that should be included in the returned data.
        - name: offset
          in: query
          description: The number of items to skip when retrieving a list.
          required: false
          schema:
            type: number
            title: offset
            description: The number of items to skip when retrieving a list.
        - name: limit
          in: query
          description: Limit the number of items returned in the list.
          required: false
          schema:
            type: number
            title: limit
            description: Limit the number of items returned in the list.
        - name: order
          in: query
          description: Field to sort items in the list by.
          required: false
          schema:
            type: string
            title: order
            description: Field to sort items in the list by.
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/workflows-executions/{workflow_id}/{transaction_id}/{step_id}/subscribe' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
components:
  responses:
    default_error:
      description: Default Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: unknown_error
            message: An unknown error occurred.
            type: unknown_error
    invalid_state_error:
      description: Invalid State Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: unknown_error
            message: The request conflicted with another request. You may retry the request with the provided Idempotency-Key.
            type: QueryRunnerAlreadyReleasedError
    invalid_request_error:
      description: Invalid Request Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: invalid_request_error
            message: Discount with code TEST already exists.
            type: duplicate_error
    not_found_error:
      description: Not Found Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Entity with id 1 was not found
            type: not_found
    400_error:
      description: Client Error or Multiple Errors
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Error'
              - $ref: '#/components/schemas/MultipleErrors'
          examples:
            not_allowed:
              $ref: '#/components/examples/not_allowed_error'
            invalid_data:
              $ref: '#/components/examples/invalid_data_error'
            MultipleErrors:
              $ref: '#/components/examples/multiple_errors'
    500_error:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            database:
              $ref: '#/components/examples/database_error'
            unexpected_state:
              $ref: '#/components/examples/unexpected_state_error'
            invalid_argument:
              $ref: '#/components/examples/invalid_argument_error'
            default_error:
              $ref: '#/components/examples/default_error'
    unauthorized:
      description: User is not authorized. Must log in first
      content:
        text/plain:
          schema:
            type: string
            default: Unauthorized
            example: Unauthorized
    incorrect_credentials:
      description: User does not exist or incorrect credentials
      content:
        text/plain:
          schema:
            type: string
            default: Unauthorized
            example: Unauthorized
  examples:
    not_allowed_error:
      summary: Not Allowed Error
      value:
        message: Discount must be set to dynamic
        type: not_allowed
    invalid_data_error:
      summary: Invalid Data Error
      value:
        message: first_name must be a string
        type: invalid_data
    multiple_errors:
      summary: Multiple Errors
      value:
        message: Provided request body contains errors. Please check the data and retry the request
        errors:
          - message: first_name must be a string
            type: invalid_data
          - message: Discount must be set to dynamic
            type: not_allowed
    database_error:
      summary: Database Error
      value:
        code: api_error
        message: An error occured while hashing password
        type: database_error
    unexpected_state_error:
      summary: Unexpected State Error
      value:
        message: cart.total must be defined
        type: unexpected_state
    invalid_argument_error:
      summary: Invalid Argument Error
      value:
        message: cart.total must be defined
        type: unexpected_state
    default_error:
      summary: Default Error
      value:
        code: unknown_error
        message: An unknown error occurred.
        type: unknown_error
  securitySchemes:
    api_token:
      type: apiKey
      x-displayName: API Token
      in: header
      name: x-medusa-access-token
    jwt_token:
      type: http
      x-displayName: JWT Token
      scheme: bearer
    cookie_auth:
      type: apiKey
      in: cookie
      name: connect.sid
      x-displayName: Cookie Session ID
  schemas:
    AdminCustomerListResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminCustomerListResponse
      required:
        - customers
        - limit
        - offset
        - count
      properties:
        customers:
          type: array
          description: The customer's customers.
          items:
            $ref: '#/components/schemas/CustomerResponse'
        limit:
          type: number
          title: limit
          description: The customer's limit.
        offset:
          type: number
          title: offset
          description: The customer's offset.
        count:
          type: number
          title: count
          description: The customer's count.
    AdminCustomerResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminCustomerResponse
      required:
        - customer
      properties:
        customer:
          $ref: '#/components/schemas/CustomerResponse'
    AdminFulfillmentProviderResponse:
      type: object
      description: The shipping option's provider.
      x-schemaName: AdminFulfillmentProviderResponse
      required:
        - id
        - name
        - metadata
        - created_at
        - updated_at
        - deleted_at
      properties:
        id:
          type: string
          title: id
          description: The provider's ID.
        name:
          type: string
          title: name
          description: The provider's name.
        metadata:
          type: object
          description: The provider's metadata.
          properties: {}
        created_at:
          type: string
          title: created_at
          description: The provider's created at.
          format: date-time
        updated_at:
          type: string
          title: updated_at
          description: The provider's updated at.
          format: date-time
        deleted_at:
          type: string
          title: deleted_at
          description: The provider's deleted at.
          format: date-time
    AdminFulfillmentSetResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminFulfillmentSetResponse
      required:
        - fulfillment_set
      properties:
        fulfillment_set:
          $ref: '#/components/schemas/FulfillmentSetResponse'
    AdminFulfillmentSetsDeleteResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminFulfillmentSetsDeleteResponse
      required:
        - id
        - object
        - deleted
      properties:
        id:
          type: string
          title: id
          description: The fulfillment set's ID.
        object:
          type: string
          title: object
          description: The fulfillment set's object.
        deleted:
          type: boolean
          title: deleted
          description: The fulfillment set's deleted.
    AdminGeoZoneResponse:
      type: object
      description: The geo zone's geo zones.
      x-schemaName: AdminGeoZoneResponse
      properties: {}
    AdminPriceSetPriceResponse:
      type: object
      description: The price's prices.
      x-schemaName: AdminPriceSetPriceResponse
      required:
        - id
        - amount
        - currency_code
        - created_at
        - updated_at
      properties:
        id:
          type: string
          title: id
          description: The price's ID.
        amount:
          type: number
          title: amount
          description: The price's amount.
        currency_code:
          type: string
          title: currency_code
          description: The price's currency code.
        created_at:
          type: string
          title: created_at
          description: The price's created at.
        updated_at:
          type: string
          title: updated_at
          description: The price's updated at.
    AdminProductCategoryListResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminProductCategoryListResponse
      required:
        - product_categories
        - limit
        - offset
        - count
      properties:
        product_categories:
          type: array
          description: The product category's product categories.
          items:
            $ref: '#/components/schemas/ProductCategoryResponse'
        limit:
          type: number
          title: limit
          description: The product category's limit.
        offset:
          type: number
          title: offset
          description: The product category's offset.
        count:
          type: number
          title: count
          description: The product category's count.
    AdminProductCategoryResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminProductCategoryResponse
      required:
        - product_category
      properties:
        product_category:
          $ref: '#/components/schemas/ProductCategoryResponse'
    AdminServiceZoneDeleteResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminServiceZoneDeleteResponse
      required:
        - id
        - object
        - deleted
        - parent
      properties:
        id:
          type: string
          title: id
          description: The fulfillment set's ID.
        object:
          type: string
          title: object
          description: The fulfillment set's object.
        deleted:
          type: boolean
          title: deleted
          description: The fulfillment set's deleted.
        parent:
          $ref: '#/components/schemas/FulfillmentSetResponse'
    AdminServiceZoneResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminServiceZoneResponse
      required:
        - service_zone
      properties:
        service_zone:
          $ref: '#/components/schemas/ServiceZoneResponse'
    AdminShippingOptionDeleteResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminShippingOptionDeleteResponse
      required:
        - id
        - object
        - deleted
      properties:
        id:
          type: string
          title: id
          description: The shipping option's ID.
        object:
          type: string
          title: object
          description: The shipping option's object.
        deleted:
          type: boolean
          title: deleted
          description: The shipping option's deleted.
    AdminShippingOptionListResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminShippingOptionListResponse
      required:
        - shipping_options
        - limit
        - offset
        - count
      properties:
        shipping_options:
          type: array
          description: The shipping option's shipping options.
          items:
            $ref: '#/components/schemas/AdminShippingOptionResponse'
        limit:
          type: number
          title: limit
          description: The shipping option's limit.
        offset:
          type: number
          title: offset
          description: The shipping option's offset.
        count:
          type: number
          title: count
          description: The shipping option's count.
    AdminShippingOptionResponse:
      type: object
      description: The shipping option's details.
      x-schemaName: AdminShippingOptionResponse
      required:
        - id
        - name
        - price_type
        - service_zone_id
        - shipping_profile_id
        - provider_id
        - shipping_option_type_id
        - data
        - metadata
        - service_zone
        - shipping_profile
        - provider
        - type
        - rules
        - prices
        - created_at
        - updated_at
        - deleted_at
      properties:
        id:
          type: string
          title: id
          description: The shipping option's ID.
        name:
          type: string
          title: name
          description: The shipping option's name.
        price_type:
          type: string
          enum:
            - flat
            - calculated
        service_zone_id:
          type: string
          title: service_zone_id
          description: The shipping option's service zone id.
        shipping_profile_id:
          type: string
          title: shipping_profile_id
          description: The shipping option's shipping profile id.
        provider_id:
          type: string
          title: provider_id
          description: The shipping option's provider id.
        shipping_option_type_id:
          type: string
          title: shipping_option_type_id
          description: The shipping option's shipping option type id.
        data:
          type: object
          description: The shipping option's data.
          properties: {}
        metadata:
          type: object
          description: The shipping option's metadata.
          properties: {}
        service_zone:
          $ref: '#/components/schemas/AdminServiceZoneResponse'
        shipping_profile:
          $ref: '#/components/schemas/AdminShippingProfileResponse'
        provider:
          $ref: '#/components/schemas/AdminFulfillmentProviderResponse'
        type:
          $ref: '#/components/schemas/AdminShippingOptionTypeResponse'
        rules:
          type: array
          description: The shipping option's rules.
          items:
            $ref: '#/components/schemas/AdminShippingOptionRuleResponse'
        prices:
          type: array
          description: The shipping option's prices.
          items:
            $ref: '#/components/schemas/AdminPriceSetPriceResponse'
        created_at:
          type: string
          title: created_at
          description: The shipping option's created at.
          format: date-time
        updated_at:
          type: string
          title: updated_at
          description: The shipping option's updated at.
          format: date-time
        deleted_at:
          type: string
          title: deleted_at
          description: The shipping option's deleted at.
          format: date-time
    AdminShippingOptionRetrieveResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminShippingOptionRetrieveResponse
      required:
        - shipping_option
      properties:
        shipping_option:
          $ref: '#/components/schemas/AdminShippingOptionResponse'
    AdminShippingOptionRuleResponse:
      type: object
      description: The rule's rules.
      x-schemaName: AdminShippingOptionRuleResponse
      required:
        - id
        - attribute
        - operator
        - value
        - shipping_option_id
        - created_at
        - updated_at
        - deleted_at
      properties:
        id:
          type: string
          title: id
          description: The rule's ID.
        attribute:
          type: string
          title: attribute
          description: The rule's attribute.
        operator:
          type: string
          title: operator
          description: The rule's operator.
        value:
          type: object
          description: The rule's value.
          properties: {}
        shipping_option_id:
          type: string
          title: shipping_option_id
          description: The rule's shipping option id.
        created_at:
          type: string
          title: created_at
          description: The rule's created at.
          format: date-time
        updated_at:
          type: string
          title: updated_at
          description: The rule's updated at.
          format: date-time
        deleted_at:
          type: string
          title: deleted_at
          description: The rule's deleted at.
          format: date-time
    AdminShippingOptionTypeResponse:
      type: object
      description: The shipping option's type.
      x-schemaName: AdminShippingOptionTypeResponse
      required:
        - id
        - label
        - description
        - code
        - shipping_option_id
        - created_at
        - updated_at
        - deleted_at
      properties:
        id:
          type: string
          title: id
          description: The type's ID.
        label:
          type: string
          title: label
          description: The type's label.
        description:
          type: string
          title: description
          description: The type's description.
        code:
          type: string
          title: code
          description: The type's code.
        shipping_option_id:
          type: string
          title: shipping_option_id
          description: The type's shipping option id.
        created_at:
          type: string
          title: created_at
          description: The type's created at.
          format: date-time
        updated_at:
          type: string
          title: updated_at
          description: The type's updated at.
          format: date-time
        deleted_at:
          type: string
          title: deleted_at
          description: The type's deleted at.
          format: date-time
    AdminShippingProfileDeleteResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminShippingProfileDeleteResponse
      required:
        - id
        - object
        - deleted
      properties:
        id:
          type: string
          title: id
          description: The shipping profile's ID.
        object:
          type: string
          title: object
          description: The shipping profile's object.
        deleted:
          type: boolean
          title: deleted
          description: The shipping profile's deleted.
    AdminShippingProfileResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminShippingProfileResponse
      required:
        - shipping_profile
      properties:
        shipping_profile:
          $ref: '#/components/schemas/ShippingProfileResponse'
    AdminShippingProfilesResponse:
      type: object
      description: SUMMARY
      x-schemaName: AdminShippingProfilesResponse
      required:
        - shipping_profiles
        - limit
        - offset
        - count
      properties:
        shipping_profiles:
          type: array
          description: The shipping profile's shipping profiles.
          items:
            $ref: '#/components/schemas/ShippingProfileResponse'
        limit:
          type: number
          title: limit
          description: The shipping profile's limit.
        offset:
          type: number
          title: offset
          description: The shipping profile's offset.
        count:
          type: number
          title: count
          description: The shipping profile's count.
    ApplicationMethod:
      type: object
      description: The promotion's application method.
      x-schemaName: ApplicationMethod
      properties: {}
    Campaign:
      type: object
      description: The promotion's campaign.
      x-schemaName: Campaign
      properties: {}
    CampaignBudget:
      type: object
      description: The campaign's budget.
      x-schemaName: CampaignBudget
      properties:
        type:
          type: string
          enum:
            - spend
            - usage
        limit:
          type: number
          title: limit
          description: The budget's limit.
    CreateAddress:
      type: object
      description: The cart's shipping address.
      x-schemaName: CreateAddress
      properties:
        customer_id:
          type: string
          title: customer_id
          description: The shipping address's customer id.
        company:
          type: string
          title: company
          description: The shipping address's company.
        first_name:
          type: string
          title: first_name
          description: The shipping address's first name.
        last_name:
          type: string
          title: last_name
          description: The shipping address's last name.
        address_1:
          type: string
          title: address_1
          description: The shipping address's address 1.
        address_2:
          type: string
          title: address_2
          description: The shipping address's address 2.
        city:
          type: string
          title: city
          description: The shipping address's city.
        country_code:
          type: string
          title: country_code
          description: The shipping address's country code.
        province:
          type: string
          title: province
          description: The shipping address's province.
        postal_code:
          type: string
          title: postal_code
          description: The shipping address's postal code.
        phone:
          type: string
          title: phone
          description: The shipping address's phone.
        metadata:
          type: object
          description: The shipping address's metadata.
          properties: {}
    CreateCampaign:
      type: object
      description: The promotion's campaign.
      x-schemaName: CreateCampaign
      required:
        - name
        - campaign_identifier
        - starts_at
        - ends_at
      properties:
        name:
          type: string
          title: name
          description: The campaign's name.
        description:
          type: string
          title: description
          description: The campaign's description.
        currency:
          type: string
          title: currency
          description: The campaign's currency.
        campaign_identifier:
          type: string
          title: campaign_identifier
          description: The campaign's campaign identifier.
        starts_at:
          type: string
          title: starts_at
          description: The campaign's starts at.
          format: date-time
        ends_at:
          type: string
          title: ends_at
          description: The campaign's ends at.
          format: date-time
        budget:
          $ref: '#/components/schemas/CreateCampaignBudget'
        promotions:
          type: array
          description: The campaign's promotions.
          items:
            type: object
            description: The promotion's promotions.
            x-schemaName: Promotion
            required:
              - id
            properties:
              id:
                type: string
                title: id
                description: The promotion's ID.
    CreateCampaignBudget:
      type: object
      description: The campaign's budget.
      x-schemaName: CreateCampaignBudget
      required:
        - type
        - limit
      properties:
        type:
          type: string
          enum:
            - spend
            - usage
        limit:
          type: number
          title: limit
          description: The budget's limit.
        used:
          type: number
          title: used
          description: The budget's used.
    CreateCartAddress:
      type: object
      description: The cart's billing address.
      x-schemaName: CreateCartAddress
      properties:
        first_name:
          type: string
          title: first_name
          description: The billing address's first name.
        last_name:
          type: string
          title: last_name
          description: The billing address's last name.
        phone:
          type: string
          title: phone
          description: The billing address's phone.
        company:
          type: string
          title: company
          description: The billing address's company.
        address_1:
          type: string
          title: address_1
          description: The billing address's address 1.
        address_2:
          type: string
          title: address_2
          description: The billing address's address 2.
        city:
          type: string
          title: city
          description: The billing address's city.
        country_code:
          type: string
          title: country_code
          description: The billing address's country code.
        province:
          type: string
          title: province
          description: The billing address's province.
        postal_code:
          type: string
          title: postal_code
          description: The billing address's postal code.
        metadata:
          type: object
          description: The billing address's metadata.
          properties: {}
    CreateCartCreateLineItem:
      type: object
      description: The item's items.
      x-schemaName: CreateCartCreateLineItem
      required:
        - quantity
        - variant_id
      properties:
        quantity:
          type: string
          title: quantity
          description: The item's quantity.
        variant_id:
          type: string
          title: variant_id
          description: The item's variant id.
        title:
          type: string
          title: title
          description: The item's title.
        subtitle:
          type: string
          title: subtitle
          description: The item's subtitle.
        thumbnail:
          type: string
          title: thumbnail
          description: The item's thumbnail.
        product_id:
          type: string
          title: product_id
          description: The item's product id.
        product_title:
          type: string
          title: product_title
          description: The item's product title.
        product_description:
          type: string
          title: product_description
          description: The item's product description.
        product_subtitle:
          type: string
          title: product_subtitle
          description: The item's product subtitle.
        product_type:
          type: string
          title: product_type
          description: The item's product type.
        product_collection:
          type: string
          title: product_collection
          description: The item's product collection.
        product_handle:
          type: string
          title: product_handle
          description: The item's product handle.
        variant_sku:
          type: string
          title: variant_sku
          description: The item's variant sku.
        variant_barcode:
          type: string
          title: variant_barcode
          description: The item's variant barcode.
        variant_title:
          type: string
          title: variant_title
          description: The item's variant title.
        variant_option_values:
          type: object
          description: The item's variant option values.
          properties: {}
        requires_shipping:
          type: boolean
          title: requires_shipping
          description: The item's requires shipping.
        is_discountable:
          type: boolean
          title: is_discountable
          description: The item's is discountable.
        is_tax_inclusive:
          type: boolean
          title: is_tax_inclusive
          description: The item's is tax inclusive.
        is_giftcard:
          type: boolean
          title: is_giftcard
          description: The item's is giftcard.
        compare_at_unit_price:
          type: string
          title: compare_at_unit_price
          description: The item's compare at unit price.
        unit_price:
          type: string
          title: unit_price
          description: The item's unit price.
        metadata:
          type: object
          description: The item's metadata.
          properties: {}
    CreateCartWorkflowInput:
      type: object
      description: SUMMARY
      x-schemaName: CreateCartWorkflowInput
      properties:
        region_id:
          type: string
          title: region_id
          description: The cart's region id.
        customer_id:
          type: string
          title: customer_id
          description: The cart's customer id.
        sales_channel_id:
          type: string
          title: sales_channel_id
          description: The cart's sales channel id.
        email:
          type: string
          title: email
          description: The cart's email.
          format: email
        currency_code:
          type: string
          title: currency_code
          description: The cart's currency code.
        shipping_address_id:
          type: string
          title: shipping_address_id
          description: The cart's shipping address id.
        billing_address_id:
          type: string
          title: billing_address_id
          description: The cart's billing address id.
        shipping_address:
          oneOf:
            - type: string
              title: shipping_address
              description: The cart's shipping address.
            - $ref: '#/components/schemas/CreateCartAddress'
        billing_address:
          oneOf:
            - type: string
              title: billing_address
              description: The cart's billing address.
            - $ref: '#/components/schemas/CreateCartAddress'
        metadata:
          type: object
          description: The cart's metadata.
          properties: {}
        items:
          type: array
          description: The cart's items.
          items:
            $ref: '#/components/schemas/CreateCartCreateLineItem'
        promo_codes:
          type: array
          description: The cart's promo codes.
          items:
            type: string
            title: promo_codes
            description: The promo code's promo codes.
    CreateProduct:
      type: object
      description: SUMMARY
      x-schemaName: CreateProduct
      required:
        - title
      properties:
        title:
          type: string
          title: title
          description: The upload's title.
        subtitle:
          type: string
          title: subtitle
          description: The upload's subtitle.
        description:
          type: string
          title: description
          description: The upload's description.
        is_giftcard:
          type: boolean
          title: is_giftcard
          description: The upload's is giftcard.
        discountable:
          type: boolean
          title: discountable
          description: The upload's discountable.
        thumbnail:
          type: string
          title: thumbnail
          description: The upload's thumbnail.
        handle:
          type: string
          title: handle
          description: The upload's handle.
        status:
          type: string
          enum:
            - draft
            - proposed
            - published
            - rejected
        images:
          type: array
          description: The upload's images.
          items:
            $ref: '#/components/schemas/UpsertProductImage'
        type_id:
          type: string
          title: type_id
          description: The upload's type id.
        collection_id:
          type: string
          title: collection_id
          description: The upload's collection id.
        tags:
          type: array
          description: The upload's tags.
          items:
            $ref: '#/components/schemas/UpsertProductTag'
        category_ids:
          type: array
          description: The upload's category ids.
          items:
            type: string
            title: category_ids
            description: The category id's category ids.
        options:
          type: array
          description: The upload's options.
          items:
            $ref: '#/components/schemas/CreateProductOption'
        variants:
          type: array
          description: The upload's variants.
          items:
            $ref: '#/components/schemas/CreateProductVariant'
        width:
          type: number
          title: width
          description: The upload's width.
        height:
          type: number
          title: height
          description: The upload's height.
        length:
          type: number
          title: length
          description: The upload's length.
        weight:
          type: number
          title: weight
          description: The upload's weight.
        origin_country:
          type: string
          title: origin_country
          description: The upload's origin country.
        hs_code:
          type: string
          title: hs_code
          description: The upload's hs code.
        material:
          type: string
          title: material
          description: The upload's material.
        mid_code:
          type: string
          title: mid_code
          description: The upload's mid code.
        metadata:
          type: object
          description: The upload's metadata.
          properties: {}
    CreateProductOption:
      type: object
      description: The option's options.
      x-schemaName: CreateProductOption
      required:
        - title
        - values
      properties:
        title:
          type: string
          title: title
          description: The option's title.
        values:
          type: array
          description: The option's values.
          items:
            type: string
            title: values
            description: The value's values.
        product_id:
          type: string
          title: product_id
          description: The option's product id.
    CreateProductType:
      type: object
      description: The product's type.
      x-schemaName: CreateProductType
      required:
        - value
      properties:
        id:
          type: string
          title: id
          description: The type's ID.
        value:
          type: string
          title: value
          description: The type's value.
        metadata:
          type: object
          description: The type's metadata.
          properties: {}
    CreateProductVariant:
      type: object
      description: The variant's variants.
      x-schemaName: CreateProductVariant
      required:
        - title
      properties:
        product_id:
          type: string
          title: product_id
          description: The variant's product id.
        title:
          type: string
          title: title
          description: The variant's title.
        sku:
          type: string
          title: sku
          description: The variant's sku.
        barcode:
          type: string
          title: barcode
          description: The variant's barcode.
        ean:
          type: string
          title: ean
          description: The variant's ean.
        upc:
          type: string
          title: upc
          description: The variant's upc.
        allow_backorder:
          type: boolean
          title: allow_backorder
          description: The variant's allow backorder.
        inventory_quantity:
          type: number
          title: inventory_quantity
          description: The variant's inventory quantity.
        manage_inventory:
          type: boolean
          title: manage_inventory
          description: The variant's manage inventory.
        hs_code:
          type: string
          title: hs_code
          description: The variant's hs code.
        origin_country:
          type: string
          title: origin_country
          description: The variant's origin country.
        mid_code:
          type: string
          title: mid_code
          description: The variant's mid code.
        material:
          type: string
          title: material
          description: The variant's material.
        weight:
          type: number
          title: weight
          description: The variant's weight.
        length:
          type: number
          title: length
          description: The variant's length.
        height:
          type: number
          title: height
          description: The variant's height.
        width:
          type: number
          title: width
          description: The variant's width.
        options:
          type: object
          description: The variant's options.
          properties: {}
        metadata:
          type: object
          description: The variant's metadata.
          properties: {}
    CreateUser:
      type: object
      description: SUMMARY
      x-schemaName: CreateUser
      required:
        - email
      properties:
        email:
          type: string
          title: email
          description: The user's email.
          format: email
        first_name:
          type: string
          title: first_name
          description: The user's first name.
        last_name:
          type: string
          title: last_name
          description: The user's last name.
        avatar_url:
          type: string
          title: avatar_url
          description: The user's avatar url.
        metadata:
          type: object
          description: The user's metadata.
          properties: {}
    Customer:
      type: object
      description: The context's customer.
      x-schemaName: Customer
      properties:
        id:
          type: string
          title: id
          description: The customer's ID.
        email:
          type: string
          title: email
          description: The customer's email.
          format: email
        has_account:
          type: boolean
          title: has_account
          description: The customer's has account.
        default_billing_address_id:
          type: string
          title: default_billing_address_id
          description: The customer's default billing address id.
        default_shipping_address_id:
          type: string
          title: default_shipping_address_id
          description: The customer's default shipping address id.
        company_name:
          type: string
          title: company_name
          description: The customer's company name.
        first_name:
          type: string
          title: first_name
          description: The customer's first name.
        last_name:
          type: string
          title: last_name
          description: The customer's last name.
        addresses:
          type: array
          description: The customer's addresses.
          items:
            $ref: '#/components/schemas/CustomerAddress'
        phone:
          type: string
          title: phone
          description: The customer's phone.
        groups:
          type: array
          description: The customer's groups.
          items:
            type: object
            description: The group's groups.
            properties: {}
        metadata:
          type: object
          description: The customer's metadata.
          properties: {}
        created_by:
          type: string
          title: created_by
          description: The customer's created by.
        deleted_at:
          oneOf:
            - type: string
              title: deleted_at
              description: The customer's deleted at.
            - type: string
              title: deleted_at
              description: The customer's deleted at.
              format: date-time
        created_at:
          oneOf:
            - type: string
              title: created_at
              description: The customer's created at.
            - type: string
              title: created_at
              description: The customer's created at.
              format: date-time
        updated_at:
          oneOf:
            - type: string
              title: updated_at
              description: The customer's updated at.
            - type: string
              title: updated_at
              description: The customer's updated at.
              format: date-time
    CustomerAddress:
      type: object
      description: The address's addresses.
      x-schemaName: CustomerAddress
      properties: {}
    CustomerAddressResponse:
      type: object
      description: The address's addresses.
      x-schemaName: CustomerAddressResponse
      required:
        - id
        - address_name
        - is_default_shipping
        - is_default_billing
        - customer_id
        - company
        - first_name
        - last_name
        - address_1
        - address_2
        - city
        - country_code
        - province
        - postal_code
        - phone
        - metadata
        - created_at
        - updated_at
      properties:
        id:
          type: string
          title: id
          description: The address's ID.
        address_name:
          type: string
          title: address_name
          description: The address's address name.
        is_default_shipping:
          type: boolean
          title: is_default_shipping
          description: The address's is default shipping.
        is_default_billing:
          type: boolean
          title: is_default_billing
          description: The address's is default billing.
        customer_id:
          type: string
          title: customer_id
          description: The address's customer id.
        company:
          type: string
          title: company
          description: The address's company.
        first_name:
          type: string
          title: first_name
          description: The address's first name.
        last_name:
          type: string
          title: last_name
          description: The address's last name.
        address_1:
          type: string
          title: address_1
          description: The address's address 1.
        address_2:
          type: string
          title: address_2
          description: The address's address 2.
        city:
          type: string
          title: city
          description: The address's city.
        country_code:
          type: string
          title: country_code
          description: The address's country code.
        province:
          type: string
          title: province
          description: The address's province.
        postal_code:
          type: string
          title: postal_code
          description: The address's postal code.
        phone:
          type: string
          title: phone
          description: The address's phone.
        metadata:
          type: object
          description: The address's metadata.
          properties: {}
        created_at:
          type: string
          title: created_at
          description: The address's created at.
        updated_at:
          type: string
          title: updated_at
          description: The address's updated at.
    CustomerGroupResponse:
      type: object
      description: The group's groups.
      x-schemaName: CustomerGroupResponse
      required:
        - id
        - name
        - customers
        - metadata
        - created_at
        - updated_at
      properties:
        id:
          type: string
          title: id
          description: The group's ID.
        name:
          type: string
          title: name
          description: The group's name.
        customers:
          type: array
          description: The group's customers.
          items:
            type: object
        metadata:
          type: object
          description: The group's metadata.
          properties: {}
        created_at:
          type: string
          title: created_at
          description: The group's created at.
        updated_at:
          type: string
          title: updated_at
          description: The group's updated at.
    CustomerResponse:
      type: object
      description: The customer's details.
      x-schemaName: CustomerResponse
      required:
        - id
        - email
        - default_billing_address_id
        - default_shipping_address_id
        - company_name
        - first_name
        - last_name
        - has_account
        - addresses
      properties:
        id:
          type: string
          title: id
          description: The customer's ID.
        email:
          type: string
          title: email
          description: The customer's email.
          format: email
        default_billing_address_id:
          type: string
          title: default_billing_address_id
          description: The customer's default billing address id.
        default_shipping_address_id:
          type: string
          title: default_shipping_address_id
          description: The customer's default shipping address id.
        company_name:
          type: string
          title: company_name
          description: The customer's company name.
        first_name:
          type: string
          title: first_name
          description: The customer's first name.
        last_name:
          type: string
          title: last_name
          description: The customer's last name.
        has_account:
          type: boolean
          title: has_account
          description: The customer's has account.
        addresses:
          type: array
          description: The customer's addresses.
          items:
            $ref: '#/components/schemas/CustomerAddressResponse'
        phone:
          type: string
          title: phone
          description: The customer's phone.
        groups:
          type: array
          description: The customer's groups.
          items:
            $ref: '#/components/schemas/CustomerGroupResponse'
        metadata:
          type: object
          description: The customer's metadata.
          properties: {}
        created_by:
          type: string
          title: created_by
          description: The customer's created by.
        deleted_at:
          oneOf:
            - type: string
              title: deleted_at
              description: The customer's deleted at.
            - type: string
              title: deleted_at
              description: The customer's deleted at.
              format: date-time
        created_at:
          oneOf:
            - type: string
              title: created_at
              description: The customer's created at.
            - type: string
              title: created_at
              description: The customer's created at.
              format: date-time
        updated_at:
          oneOf:
            - type: string
              title: updated_at
              description: The customer's updated at.
            - type: string
              title: updated_at
              description: The customer's updated at.
              format: date-time
    Error:
      title: Response Error
      type: object
      properties:
        code:
          type: string
          description: A slug code to indicate the type of the error.
          enum:
            - invalid_state_error
            - invalid_request_error
            - api_error
            - unknown_error
        message:
          type: string
          description: Description of the error that occurred.
          example: first_name must be a string
        type:
          type: string
          description: A slug indicating the type of the error.
          enum:
            - QueryRunnerAlreadyReleasedError
            - TransactionAlreadyStartedError
            - TransactionNotStartedError
            - conflict
            - unauthorized
            - payment_authorization_error
            - duplicate_error
            - not_allowed
            - invalid_data
            - not_found
            - database_error
            - unexpected_state
            - invalid_argument
            - unknown_error
    FulfillmentSetResponse:
      type: object
      description: The fulfillment set's parent.
      x-schemaName: FulfillmentSetResponse
      required:
        - id
        - name
        - type
        - metadata
        - service_zones
        - created_at
        - updated_at
        - deleted_at
      properties:
        id:
          type: string
          title: id
          description: The parent's ID.
        name:
          type: string
          title: name
          description: The parent's name.
        type:
          type: string
          title: type
          description: The parent's type.
        metadata:
          type: object
          description: The parent's metadata.
          properties: {}
        service_zones:
          type: array
          description: The parent's service zones.
          items:
            $ref: '#/components/schemas/ServiceZoneResponse'
        created_at:
          type: string
          title: created_at
          description: The parent's created at.
          format: date-time
        updated_at:
          type: string
          title: updated_at
          description: The parent's updated at.
          format: date-time
        deleted_at:
          type: string
          title: deleted_at
          description: The parent's deleted at.
          format: date-time
    MultipleErrors:
      title: Multiple Errors
      type: object
      properties:
        errors:
          type: array
          description: Array of errors
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
          default: Provided request body contains errors. Please check the data and retry the request
    ProductCategoryResponse:
      type: object
      description: The product category's details.
      x-schemaName: ProductCategoryResponse
      required:
        - id
        - name
        - description
        - handle
        - is_active
        - is_internal
        - rank
        - parent_category_id
        - created_at
        - updated_at
        - parent_category
        - category_children
      properties:
        id:
          type: string
          title: id
          description: The product category's ID.
        name:
          type: string
          title: name
          description: The product category's name.
        description:
          type: string
          title: description
          description: The product category's description.
        handle:
          type: string
          title: handle
          description: The product category's handle.
        is_active:
          type: boolean
          title: is_active
          description: The product category's is active.
        is_internal:
          type: boolean
          title: is_internal
          description: The product category's is internal.
        rank:
          type: number
          title: rank
          description: The product category's rank.
        parent_category_id:
          type: string
          title: parent_category_id
          description: The product category's parent category id.
        created_at:
          oneOf:
            - type: string
              title: created_at
              description: The product category's created at.
            - type: string
              title: created_at
              description: The product category's created at.
              format: date-time
        updated_at:
          oneOf:
            - type: string
              title: updated_at
              description: The product category's updated at.
            - type: string
              title: updated_at
              description: The product category's updated at.
              format: date-time
        parent_category:
          type: object
        category_children:
          type: array
          description: The product category's category children.
          items:
            type: object
    Promotion:
      type: object
      description: The promotion's promotions.
      x-schemaName: Promotion
      required:
        - id
      properties:
        id:
          type: string
          title: id
          description: The promotion's ID.
    ServiceZoneResponse:
      type: object
      description: The service zone's service zones.
      x-schemaName: ServiceZoneResponse
      required:
        - id
        - name
        - metadata
        - geo_zones
        - created_at
        - updated_at
        - deleted_at
      properties:
        id:
          type: string
          title: id
          description: The service zone's ID.
        name:
          type: string
          title: name
          description: The service zone's name.
        metadata:
          type: object
          description: The service zone's metadata.
          properties: {}
        geo_zones:
          type: array
          description: The service zone's geo zones.
          items:
            $ref: '#/components/schemas/AdminGeoZoneResponse'
        created_at:
          type: string
          title: created_at
          description: The service zone's created at.
          format: date-time
        updated_at:
          type: string
          title: updated_at
          description: The service zone's updated at.
          format: date-time
        deleted_at:
          type: string
          title: deleted_at
          description: The service zone's deleted at.
          format: date-time
    ShippingProfileResponse:
      type: object
      description: The shipping profile's details.
      x-schemaName: ShippingProfileResponse
      required:
        - id
        - name
        - type
        - metadata
        - created_at
        - updated_at
        - deleted_at
      properties:
        id:
          type: string
          title: id
          description: The shipping profile's ID.
        name:
          type: string
          title: name
          description: The shipping profile's name.
        type:
          type: string
          title: type
          description: The shipping profile's type.
        metadata:
          type: object
          description: The shipping profile's metadata.
          properties: {}
        created_at:
          type: string
          title: created_at
          description: The shipping profile's created at.
          format: date-time
        updated_at:
          type: string
          title: updated_at
          description: The shipping profile's updated at.
          format: date-time
        deleted_at:
          type: string
          title: deleted_at
          description: The shipping profile's deleted at.
          format: date-time
    StorePostPaymentCollectionsPaymentSessionReq:
      type: object
      description: SUMMARY
      x-schemaName: StorePostPaymentCollectionsPaymentSessionReq
      required:
        - provider_id
      properties:
        provider_id:
          type: string
          title: provider_id
          description: The payment collection's provider id.
        context:
          type: object
          description: The payment collection's context.
          properties:
            billing_address:
              type: object
              description: The context's billing address.
              properties:
                id:
                  type: string
                  title: id
                  description: The billing address's ID.
                address_1:
                  type: string
                  title: address_1
                  description: The billing address's address 1.
                address_2:
                  type: string
                  title: address_2
                  description: The billing address's address 2.
                company:
                  type: string
                  title: company
                  description: The billing address's company.
                country_code:
                  type: string
                  title: country_code
                  description: The billing address's country code.
                city:
                  type: string
                  title: city
                  description: The billing address's city.
                phone:
                  type: string
                  title: phone
                  description: The billing address's phone.
                postal_code:
                  type: string
                  title: postal_code
                  description: The billing address's postal code.
                province:
                  type: string
                  title: province
                  description: The billing address's province.
                metadata:
                  type: object
                  description: The billing address's metadata.
                  properties: {}
                created_at:
                  oneOf:
                    - type: string
                      title: created_at
                      description: The billing address's created at.
                    - type: string
                      title: created_at
                      description: The billing address's created at.
                      format: date-time
                updated_at:
                  oneOf:
                    - type: string
                      title: updated_at
                      description: The billing address's updated at.
                    - type: string
                      title: updated_at
                      description: The billing address's updated at.
                      format: date-time
                deleted_at:
                  oneOf:
                    - type: string
                      title: deleted_at
                      description: The billing address's deleted at.
                    - type: string
                      title: deleted_at
                      description: The billing address's deleted at.
                      format: date-time
            email:
              type: string
              title: email
              description: The context's email.
              format: email
            resource_id:
              type: string
              title: resource_id
              description: The context's resource id.
            customer:
              type: object
              description: The context's customer.
              x-schemaName: Customer
              properties:
                id:
                  type: string
                  title: id
                  description: The customer's ID.
                email:
                  type: string
                  title: email
                  description: The customer's email.
                  format: email
                has_account:
                  type: boolean
                  title: has_account
                  description: The customer's has account.
                default_billing_address_id:
                  type: string
                  title: default_billing_address_id
                  description: The customer's default billing address id.
                default_shipping_address_id:
                  type: string
                  title: default_shipping_address_id
                  description: The customer's default shipping address id.
                company_name:
                  type: string
                  title: company_name
                  description: The customer's company name.
                first_name:
                  type: string
                  title: first_name
                  description: The customer's first name.
                last_name:
                  type: string
                  title: last_name
                  description: The customer's last name.
                addresses:
                  type: array
                  description: The customer's addresses.
                  items:
                    $ref: '#/components/schemas/CustomerAddress'
                phone:
                  type: string
                  title: phone
                  description: The customer's phone.
                groups:
                  type: array
                  description: The customer's groups.
                  items:
                    type: object
                    description: The group's groups.
                    properties: {}
                metadata:
                  type: object
                  description: The customer's metadata.
                  properties: {}
                created_by:
                  type: string
                  title: created_by
                  description: The customer's created by.
                deleted_at:
                  oneOf:
                    - type: string
                      title: deleted_at
                      description: The customer's deleted at.
                    - type: string
                      title: deleted_at
                      description: The customer's deleted at.
                      format: date-time
                created_at:
                  oneOf:
                    - type: string
                      title: created_at
                      description: The customer's created at.
                    - type: string
                      title: created_at
                      description: The customer's created at.
                      format: date-time
                updated_at:
                  oneOf:
                    - type: string
                      title: updated_at
                      description: The customer's updated at.
                    - type: string
                      title: updated_at
                      description: The customer's updated at.
                      format: date-time
            extra:
              type: object
              description: The context's extra.
              properties: {}
        data:
          type: object
          description: The payment collection's data.
          properties: {}
    StoreProductCategoryListResponse:
      type: object
      description: SUMMARY
      x-schemaName: StoreProductCategoryListResponse
      required:
        - product_categories
        - limit
        - offset
        - count
      properties:
        product_categories:
          type: array
          description: The product category's product categories.
          items:
            $ref: '#/components/schemas/ProductCategoryResponse'
        limit:
          type: number
          title: limit
          description: The product category's limit.
        offset:
          type: number
          title: offset
          description: The product category's offset.
        count:
          type: number
          title: count
          description: The product category's count.
    StoreProductCategoryResponse:
      type: object
      description: SUMMARY
      x-schemaName: StoreProductCategoryResponse
      required:
        - product_category
      properties:
        product_category:
          $ref: '#/components/schemas/ProductCategoryResponse'
    UpdateAddress:
      type: object
      description: The cart's shipping address.
      x-schemaName: UpdateAddress
      required:
        - id
      properties:
        id:
          type: string
          title: id
          description: The shipping address's ID.
        customer_id:
          type: string
          title: customer_id
          description: The shipping address's customer id.
        company:
          type: string
          title: company
          description: The shipping address's company.
        first_name:
          type: string
          title: first_name
          description: The shipping address's first name.
        last_name:
          type: string
          title: last_name
          description: The shipping address's last name.
        address_1:
          type: string
          title: address_1
          description: The shipping address's address 1.
        address_2:
          type: string
          title: address_2
          description: The shipping address's address 2.
        city:
          type: string
          title: city
          description: The shipping address's city.
        country_code:
          type: string
          title: country_code
          description: The shipping address's country code.
        province:
          type: string
          title: province
          description: The shipping address's province.
        postal_code:
          type: string
          title: postal_code
          description: The shipping address's postal code.
        phone:
          type: string
          title: phone
          description: The shipping address's phone.
        metadata:
          type: object
          description: The shipping address's metadata.
          properties: {}
    UpdateCartData:
      type: object
      description: SUMMARY
      x-schemaName: UpdateCartData
      properties:
        region_id:
          type: string
          title: region_id
          description: The cart's region id.
        customer_id:
          type: string
          title: customer_id
          description: The cart's customer id.
        sales_channel_id:
          type: string
          title: sales_channel_id
          description: The cart's sales channel id.
        email:
          type: string
          title: email
          description: The cart's email.
          format: email
        currency_code:
          type: string
          title: currency_code
          description: The cart's currency code.
        shipping_address_id:
          type: string
          title: shipping_address_id
          description: The cart's shipping address id.
        billing_address_id:
          type: string
          title: billing_address_id
          description: The cart's billing address id.
        billing_address:
          oneOf:
            - $ref: '#/components/schemas/CreateAddress'
            - $ref: '#/components/schemas/UpdateAddress'
        shipping_address:
          oneOf:
            - $ref: '#/components/schemas/CreateAddress'
            - $ref: '#/components/schemas/UpdateAddress'
        metadata:
          type: object
          description: The cart's metadata.
          properties: {}
    UpsertProductImage:
      type: object
      description: The image's images.
      x-schemaName: UpsertProductImage
      properties:
        id:
          type: string
          title: id
          description: The image's ID.
        url:
          type: string
          title: url
          description: The image's url.
        metadata:
          type: object
          description: The image's metadata.
          properties: {}
    UpsertProductTag:
      type: object
      description: The tag's tags.
      x-schemaName: UpsertProductTag
      properties:
        id:
          type: string
          title: id
          description: The tag's ID.
        value:
          type: string
          title: value
          description: The tag's value.
